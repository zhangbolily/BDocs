{
  "{\"sourceRoot\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"filename\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/env.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ballchang/Projects/BallChang/BDocs/website",
      "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/env.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/ballchang/Projects/BallChang/BDocs/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/env.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/env.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
        "sourceFileName": "env.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar fs = require('fs-extra');\n\nvar path = require('path');\n\nvar chalk = require('chalk');\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar join = path.join;\nvar languagesFile = join(CWD, 'languages.js');\nvar versionsJSONFile = join(CWD, 'versions.json');\nvar versionsFile = join(CWD, 'pages/en/versions.js');\n\nvar Translation =\n/*#__PURE__*/\nfunction () {\n  function Translation() {\n    var _this = this;\n\n    _classCallCheck(this, Translation);\n\n    _defineProperty(this, \"enabledLanguages\", function () {\n      return _this.languages.filter(function (lang) {\n        return lang.enabled;\n      });\n    });\n\n    this.enabled = false;\n    this.languages = [{\n      enabled: true,\n      name: 'English',\n      tag: 'en'\n    }];\n    this.load();\n  }\n\n  _createClass(Translation, [{\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(languagesFile)) {\n        this.enabled = true;\n        this.languages = require(languagesFile);\n      }\n    }\n  }]);\n\n  return Translation;\n}();\n\nvar Versioning =\n/*#__PURE__*/\nfunction () {\n  function Versioning() {\n    _classCallCheck(this, Versioning);\n\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n    this.load();\n  }\n\n  _createClass(Versioning, [{\n    key: \"printMissingVersionsPageError\",\n    value: function printMissingVersionsPageError() {\n      console.error(\"\".concat(chalk.yellow('No versions.js file found!')) + \"\\nYou should create your versions.js file in pages/en directory.\" + \"\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.\");\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(versionsJSONFile)) {\n        this.enabled = true;\n        this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n        this.latestVersion = this.versions[0];\n        this.defaultVersion = siteConfig.defaultVersionShown ? siteConfig.defaultVersionShown : this.latestVersion; // otherwise show the latest version (other than next/master)\n      }\n\n      if (!fs.existsSync(versionsFile)) {\n        this.missingVersionsPage = true;\n      }\n    }\n  }]);\n\n  return Versioning;\n}();\n\nvar env = {\n  translation: new Translation(),\n  versioning: new Versioning()\n};\nmodule.exports = env;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudi5qcyJdLCJuYW1lcyI6WyJDV0QiLCJwcm9jZXNzIiwiY3dkIiwiZnMiLCJyZXF1aXJlIiwicGF0aCIsImNoYWxrIiwic2l0ZUNvbmZpZyIsImpvaW4iLCJsYW5ndWFnZXNGaWxlIiwidmVyc2lvbnNKU09ORmlsZSIsInZlcnNpb25zRmlsZSIsIlRyYW5zbGF0aW9uIiwibGFuZ3VhZ2VzIiwiZmlsdGVyIiwibGFuZyIsImVuYWJsZWQiLCJuYW1lIiwidGFnIiwibG9hZCIsImV4aXN0c1N5bmMiLCJWZXJzaW9uaW5nIiwibGF0ZXN0VmVyc2lvbiIsImRlZmF1bHRWZXJzaW9uIiwidmVyc2lvbnMiLCJtaXNzaW5nVmVyc2lvbnNQYWdlIiwiY29uc29sZSIsImVycm9yIiwieWVsbG93IiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiZGVmYXVsdFZlcnNpb25TaG93biIsImVudiIsInRyYW5zbGF0aW9uIiwidmVyc2lvbmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxJQUFNRyxVQUFVLEdBQUdILE9BQU8sV0FBSUosR0FBSixvQkFBMUI7O0FBRUEsSUFBTVEsSUFBSSxHQUFHSCxJQUFJLENBQUNHLElBQWxCO0FBRUEsSUFBTUMsYUFBYSxHQUFHRCxJQUFJLENBQUNSLEdBQUQsRUFBTSxjQUFOLENBQTFCO0FBQ0EsSUFBTVUsZ0JBQWdCLEdBQUdGLElBQUksQ0FBQ1IsR0FBRCxFQUFNLGVBQU4sQ0FBN0I7QUFDQSxJQUFNVyxZQUFZLEdBQUdILElBQUksQ0FBQ1IsR0FBRCxFQUFNLHNCQUFOLENBQXpCOztJQUVNWSxXOzs7QUFDSix5QkFBYztBQUFBOztBQUFBOztBQUFBLDhDQWFLO0FBQUEsYUFBTSxLQUFJLENBQUNDLFNBQUwsQ0FBZUMsTUFBZixDQUFzQixVQUFBQyxJQUFJO0FBQUEsZUFBSUEsSUFBSSxDQUFDQyxPQUFUO0FBQUEsT0FBMUIsQ0FBTjtBQUFBLEtBYkw7O0FBQ1osU0FBS0EsT0FBTCxHQUFlLEtBQWY7QUFDQSxTQUFLSCxTQUFMLEdBQWlCLENBQ2Y7QUFDRUcsTUFBQUEsT0FBTyxFQUFFLElBRFg7QUFFRUMsTUFBQUEsSUFBSSxFQUFFLFNBRlI7QUFHRUMsTUFBQUEsR0FBRyxFQUFFO0FBSFAsS0FEZSxDQUFqQjtBQVFBLFNBQUtDLElBQUw7QUFDRDs7OzsyQkFJTTtBQUNMLFVBQUloQixFQUFFLENBQUNpQixVQUFILENBQWNYLGFBQWQsQ0FBSixFQUFrQztBQUNoQyxhQUFLTyxPQUFMLEdBQWUsSUFBZjtBQUNBLGFBQUtILFNBQUwsR0FBaUJULE9BQU8sQ0FBQ0ssYUFBRCxDQUF4QjtBQUNEO0FBQ0Y7Ozs7OztJQUdHWSxVOzs7QUFDSix3QkFBYztBQUFBOztBQUNaLFNBQUtMLE9BQUwsR0FBZSxLQUFmO0FBQ0EsU0FBS00sYUFBTCxHQUFxQixJQUFyQjtBQUNBLFNBQUtDLGNBQUwsR0FBc0IsSUFBdEI7QUFDQSxTQUFLQyxRQUFMLEdBQWdCLEVBQWhCO0FBQ0EsU0FBS0MsbUJBQUwsR0FBMkIsS0FBM0I7QUFFQSxTQUFLTixJQUFMO0FBQ0Q7Ozs7b0RBRStCO0FBQzlCTyxNQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FDRSxVQUFHckIsS0FBSyxDQUFDc0IsTUFBTixDQUFhLDRCQUFiLENBQUgsMklBREY7QUFLRDs7OzJCQUVNO0FBQ0wsVUFBSXpCLEVBQUUsQ0FBQ2lCLFVBQUgsQ0FBY1YsZ0JBQWQsQ0FBSixFQUFxQztBQUNuQyxhQUFLTSxPQUFMLEdBQWUsSUFBZjtBQUNBLGFBQUtRLFFBQUwsR0FBZ0JLLElBQUksQ0FBQ0MsS0FBTCxDQUFXM0IsRUFBRSxDQUFDNEIsWUFBSCxDQUFnQnJCLGdCQUFoQixFQUFrQyxNQUFsQyxDQUFYLENBQWhCO0FBQ0EsYUFBS1ksYUFBTCxHQUFxQixLQUFLRSxRQUFMLENBQWMsQ0FBZCxDQUFyQjtBQUNBLGFBQUtELGNBQUwsR0FBc0JoQixVQUFVLENBQUN5QixtQkFBWCxHQUNsQnpCLFVBQVUsQ0FBQ3lCLG1CQURPLEdBRWxCLEtBQUtWLGFBRlQsQ0FKbUMsQ0FNWDtBQUN6Qjs7QUFFRCxVQUFJLENBQUNuQixFQUFFLENBQUNpQixVQUFILENBQWNULFlBQWQsQ0FBTCxFQUFrQztBQUNoQyxhQUFLYyxtQkFBTCxHQUEyQixJQUEzQjtBQUNEO0FBQ0Y7Ozs7OztBQUdILElBQU1RLEdBQUcsR0FBRztBQUNWQyxFQUFBQSxXQUFXLEVBQUUsSUFBSXRCLFdBQUosRUFESDtBQUVWdUIsRUFBQUEsVUFBVSxFQUFFLElBQUlkLFVBQUo7QUFGRixDQUFaO0FBS0FlLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkosR0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYmFsbGNoYW5nL1Byb2plY3RzL0JhbGxDaGFuZy9CRG9jcy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IENXRCA9IHByb2Nlc3MuY3dkKCk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzLWV4dHJhJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgY2hhbGsgPSByZXF1aXJlKCdjaGFsaycpO1xuXG5jb25zdCBzaXRlQ29uZmlnID0gcmVxdWlyZShgJHtDV0R9L3NpdGVDb25maWcuanNgKTtcblxuY29uc3Qgam9pbiA9IHBhdGguam9pbjtcblxuY29uc3QgbGFuZ3VhZ2VzRmlsZSA9IGpvaW4oQ1dELCAnbGFuZ3VhZ2VzLmpzJyk7XG5jb25zdCB2ZXJzaW9uc0pTT05GaWxlID0gam9pbihDV0QsICd2ZXJzaW9ucy5qc29uJyk7XG5jb25zdCB2ZXJzaW9uc0ZpbGUgPSBqb2luKENXRCwgJ3BhZ2VzL2VuL3ZlcnNpb25zLmpzJyk7XG5cbmNsYXNzIFRyYW5zbGF0aW9uIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gZmFsc2U7XG4gICAgdGhpcy5sYW5ndWFnZXMgPSBbXG4gICAgICB7XG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgIG5hbWU6ICdFbmdsaXNoJyxcbiAgICAgICAgdGFnOiAnZW4nLFxuICAgICAgfSxcbiAgICBdO1xuXG4gICAgdGhpcy5sb2FkKCk7XG4gIH1cblxuICBlbmFibGVkTGFuZ3VhZ2VzID0gKCkgPT4gdGhpcy5sYW5ndWFnZXMuZmlsdGVyKGxhbmcgPT4gbGFuZy5lbmFibGVkKTtcblxuICBsb2FkKCkge1xuICAgIGlmIChmcy5leGlzdHNTeW5jKGxhbmd1YWdlc0ZpbGUpKSB7XG4gICAgICB0aGlzLmVuYWJsZWQgPSB0cnVlO1xuICAgICAgdGhpcy5sYW5ndWFnZXMgPSByZXF1aXJlKGxhbmd1YWdlc0ZpbGUpO1xuICAgIH1cbiAgfVxufVxuXG5jbGFzcyBWZXJzaW9uaW5nIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gZmFsc2U7XG4gICAgdGhpcy5sYXRlc3RWZXJzaW9uID0gbnVsbDtcbiAgICB0aGlzLmRlZmF1bHRWZXJzaW9uID0gbnVsbDtcbiAgICB0aGlzLnZlcnNpb25zID0gW107XG4gICAgdGhpcy5taXNzaW5nVmVyc2lvbnNQYWdlID0gZmFsc2U7XG5cbiAgICB0aGlzLmxvYWQoKTtcbiAgfVxuXG4gIHByaW50TWlzc2luZ1ZlcnNpb25zUGFnZUVycm9yKCkge1xuICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICBgJHtjaGFsay55ZWxsb3coJ05vIHZlcnNpb25zLmpzIGZpbGUgZm91bmQhJyl9YCArXG4gICAgICAgIGBcXG5Zb3Ugc2hvdWxkIGNyZWF0ZSB5b3VyIHZlcnNpb25zLmpzIGZpbGUgaW4gcGFnZXMvZW4gZGlyZWN0b3J5LmAgK1xuICAgICAgICBgXFxuUGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZG9jdXNhdXJ1cy5pby9kb2NzL2VuL3ZlcnNpb25pbmcuaHRtbC5gLFxuICAgICk7XG4gIH1cblxuICBsb2FkKCkge1xuICAgIGlmIChmcy5leGlzdHNTeW5jKHZlcnNpb25zSlNPTkZpbGUpKSB7XG4gICAgICB0aGlzLmVuYWJsZWQgPSB0cnVlO1xuICAgICAgdGhpcy52ZXJzaW9ucyA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKHZlcnNpb25zSlNPTkZpbGUsICd1dGY4JykpO1xuICAgICAgdGhpcy5sYXRlc3RWZXJzaW9uID0gdGhpcy52ZXJzaW9uc1swXTtcbiAgICAgIHRoaXMuZGVmYXVsdFZlcnNpb24gPSBzaXRlQ29uZmlnLmRlZmF1bHRWZXJzaW9uU2hvd25cbiAgICAgICAgPyBzaXRlQ29uZmlnLmRlZmF1bHRWZXJzaW9uU2hvd25cbiAgICAgICAgOiB0aGlzLmxhdGVzdFZlcnNpb247IC8vIG90aGVyd2lzZSBzaG93IHRoZSBsYXRlc3QgdmVyc2lvbiAob3RoZXIgdGhhbiBuZXh0L21hc3RlcilcbiAgICB9XG5cbiAgICBpZiAoIWZzLmV4aXN0c1N5bmModmVyc2lvbnNGaWxlKSkge1xuICAgICAgdGhpcy5taXNzaW5nVmVyc2lvbnNQYWdlID0gdHJ1ZTtcbiAgICB9XG4gIH1cbn1cblxuY29uc3QgZW52ID0ge1xuICB0cmFuc2xhdGlvbjogbmV3IFRyYW5zbGF0aW9uKCksXG4gIHZlcnNpb25pbmc6IG5ldyBWZXJzaW9uaW5nKCksXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVudjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "env.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "fs",
        "require",
        "path",
        "chalk",
        "siteConfig",
        "join",
        "languagesFile",
        "versionsJSONFile",
        "versionsFile",
        "Translation",
        "languages",
        "filter",
        "lang",
        "enabled",
        "name",
        "tag",
        "load",
        "existsSync",
        "Versioning",
        "latestVersion",
        "defaultVersion",
        "versions",
        "missingVersionsPage",
        "console",
        "error",
        "yellow",
        "JSON",
        "parse",
        "readFileSync",
        "defaultVersionShown",
        "env",
        "translation",
        "versioning",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;AAAA;;;;;;AAOA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMG,UAAU,GAAGH,OAAO,WAAIJ,GAAJ,oBAA1B;;AAEA,IAAMQ,IAAI,GAAGH,IAAI,CAACG,IAAlB;AAEA,IAAMC,aAAa,GAAGD,IAAI,CAACR,GAAD,EAAM,cAAN,CAA1B;AACA,IAAMU,gBAAgB,GAAGF,IAAI,CAACR,GAAD,EAAM,eAAN,CAA7B;AACA,IAAMW,YAAY,GAAGH,IAAI,CAACR,GAAD,EAAM,sBAAN,CAAzB;;IAEMY,W;;;AACJ,yBAAc;AAAA;;AAAA;;AAAA,8CAaK;AAAA,aAAM,KAAI,CAACC,SAAL,CAAeC,MAAf,CAAsB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,OAAT;AAAA,OAA1B,CAAN;AAAA,KAbL;;AACZ,SAAKA,OAAL,GAAe,KAAf;AACA,SAAKH,SAAL,GAAiB,CACf;AACEG,MAAAA,OAAO,EAAE,IADX;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,GAAG,EAAE;AAHP,KADe,CAAjB;AAQA,SAAKC,IAAL;AACD;;;;2BAIM;AACL,UAAIhB,EAAE,CAACiB,UAAH,CAAcX,aAAd,CAAJ,EAAkC;AAChC,aAAKO,OAAL,GAAe,IAAf;AACA,aAAKH,SAAL,GAAiBT,OAAO,CAACK,aAAD,CAAxB;AACD;AACF;;;;;;IAGGY,U;;;AACJ,wBAAc;AAAA;;AACZ,SAAKL,OAAL,GAAe,KAAf;AACA,SAAKM,aAAL,GAAqB,IAArB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,mBAAL,GAA2B,KAA3B;AAEA,SAAKN,IAAL;AACD;;;;oDAE+B;AAC9BO,MAAAA,OAAO,CAACC,KAAR,CACE,UAAGrB,KAAK,CAACsB,MAAN,CAAa,4BAAb,CAAH,2IADF;AAKD;;;2BAEM;AACL,UAAIzB,EAAE,CAACiB,UAAH,CAAcV,gBAAd,CAAJ,EAAqC;AACnC,aAAKM,OAAL,GAAe,IAAf;AACA,aAAKQ,QAAL,GAAgBK,IAAI,CAACC,KAAL,CAAW3B,EAAE,CAAC4B,YAAH,CAAgBrB,gBAAhB,EAAkC,MAAlC,CAAX,CAAhB;AACA,aAAKY,aAAL,GAAqB,KAAKE,QAAL,CAAc,CAAd,CAArB;AACA,aAAKD,cAAL,GAAsBhB,UAAU,CAACyB,mBAAX,GAClBzB,UAAU,CAACyB,mBADO,GAElB,KAAKV,aAFT,CAJmC,CAMX;AACzB;;AAED,UAAI,CAACnB,EAAE,CAACiB,UAAH,CAAcT,YAAd,CAAL,EAAkC;AAChC,aAAKc,mBAAL,GAA2B,IAA3B;AACD;AACF;;;;;;AAGH,IAAMQ,GAAG,GAAG;AACVC,EAAAA,WAAW,EAAE,IAAItB,WAAJ,EADH;AAEVuB,EAAAA,UAAU,EAAE,IAAId,UAAJ;AAFF,CAAZ;AAKAe,MAAM,CAACC,OAAP,GAAiBJ,GAAjB",
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst fs = require('fs-extra');\nconst path = require('path');\nconst chalk = require('chalk');\n\nconst siteConfig = require(`${CWD}/siteConfig.js`);\n\nconst join = path.join;\n\nconst languagesFile = join(CWD, 'languages.js');\nconst versionsJSONFile = join(CWD, 'versions.json');\nconst versionsFile = join(CWD, 'pages/en/versions.js');\n\nclass Translation {\n  constructor() {\n    this.enabled = false;\n    this.languages = [\n      {\n        enabled: true,\n        name: 'English',\n        tag: 'en',\n      },\n    ];\n\n    this.load();\n  }\n\n  enabledLanguages = () => this.languages.filter(lang => lang.enabled);\n\n  load() {\n    if (fs.existsSync(languagesFile)) {\n      this.enabled = true;\n      this.languages = require(languagesFile);\n    }\n  }\n}\n\nclass Versioning {\n  constructor() {\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n\n    this.load();\n  }\n\n  printMissingVersionsPageError() {\n    console.error(\n      `${chalk.yellow('No versions.js file found!')}` +\n        `\\nYou should create your versions.js file in pages/en directory.` +\n        `\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.`,\n    );\n  }\n\n  load() {\n    if (fs.existsSync(versionsJSONFile)) {\n      this.enabled = true;\n      this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n      this.latestVersion = this.versions[0];\n      this.defaultVersion = siteConfig.defaultVersionShown\n        ? siteConfig.defaultVersionShown\n        : this.latestVersion; // otherwise show the latest version (other than next/master)\n    }\n\n    if (!fs.existsSync(versionsFile)) {\n      this.missingVersionsPage = true;\n    }\n  }\n}\n\nconst env = {\n  translation: new Translation(),\n  versioning: new Versioning(),\n};\n\nmodule.exports = env;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"filename\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/start.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ballchang/Projects/BallChang/BDocs/website",
      "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/start.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/ballchang/Projects/BallChang/BDocs/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/start.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/start.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
        "sourceFileName": "start.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar program = require('commander');\n\nvar openBrowser = require('react-dev-utils/openBrowser');\n\nvar portFinder = require('portfinder');\n\nvar liveReloadServer = require('./liveReloadServer.js');\n\nvar server = require('./server.js');\n\nvar CWD = process.cwd();\n\nfunction startLiveReloadServer() {\n  var promise = portFinder.getPortPromise({\n    port: 35729\n  }).then(function (port) {\n    liveReloadServer.start(port);\n  });\n  return promise;\n}\n\nfunction startServer() {\n  var initialServerPort = parseInt(program.port, 10) || process.env.PORT || 3000;\n  var promise = portFinder.getPortPromise({\n    port: initialServerPort\n  }).then(function (port) {\n    server(port);\n\n    var _require = require(\"\".concat(CWD, \"/siteConfig.js\")),\n        baseUrl = _require.baseUrl;\n\n    var serverAddress = \"http://localhost:\".concat(port).concat(baseUrl);\n    console.log('Docusaurus server started on port %d', port);\n    openBrowser(serverAddress);\n  });\n  return promise;\n}\n\nfunction startDocusaurus() {\n  if (program.watch) {\n    return startLiveReloadServer()[\"catch\"](function (ex) {\n      return console.warn(\"Failed to start live reload server: \".concat(ex));\n    }).then(function () {\n      return startServer();\n    });\n  }\n\n  return startServer();\n}\n\nmodule.exports = {\n  startDocusaurus: startDocusaurus,\n  startServer: startServer,\n  startLiveReloadServer: startLiveReloadServer\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXJ0LmpzIl0sIm5hbWVzIjpbInByb2dyYW0iLCJyZXF1aXJlIiwib3BlbkJyb3dzZXIiLCJwb3J0RmluZGVyIiwibGl2ZVJlbG9hZFNlcnZlciIsInNlcnZlciIsIkNXRCIsInByb2Nlc3MiLCJjd2QiLCJzdGFydExpdmVSZWxvYWRTZXJ2ZXIiLCJwcm9taXNlIiwiZ2V0UG9ydFByb21pc2UiLCJwb3J0IiwidGhlbiIsInN0YXJ0Iiwic3RhcnRTZXJ2ZXIiLCJpbml0aWFsU2VydmVyUG9ydCIsInBhcnNlSW50IiwiZW52IiwiUE9SVCIsImJhc2VVcmwiLCJzZXJ2ZXJBZGRyZXNzIiwiY29uc29sZSIsImxvZyIsInN0YXJ0RG9jdXNhdXJ1cyIsIndhdGNoIiwiZXgiLCJ3YXJuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxXQUFXLEdBQUdELE9BQU8sQ0FBQyw2QkFBRCxDQUEzQjs7QUFDQSxJQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxZQUFELENBQTFCOztBQUNBLElBQU1HLGdCQUFnQixHQUFHSCxPQUFPLENBQUMsdUJBQUQsQ0FBaEM7O0FBQ0EsSUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsYUFBRCxDQUF0Qjs7QUFFQSxJQUFNSyxHQUFHLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixFQUFaOztBQUVBLFNBQVNDLHFCQUFULEdBQWlDO0FBQy9CLE1BQU1DLE9BQU8sR0FBR1AsVUFBVSxDQUFDUSxjQUFYLENBQTBCO0FBQUNDLElBQUFBLElBQUksRUFBRTtBQUFQLEdBQTFCLEVBQXlDQyxJQUF6QyxDQUE4QyxVQUFBRCxJQUFJLEVBQUk7QUFDcEVSLElBQUFBLGdCQUFnQixDQUFDVSxLQUFqQixDQUF1QkYsSUFBdkI7QUFDRCxHQUZlLENBQWhCO0FBR0EsU0FBT0YsT0FBUDtBQUNEOztBQUVELFNBQVNLLFdBQVQsR0FBdUI7QUFDckIsTUFBTUMsaUJBQWlCLEdBQ3JCQyxRQUFRLENBQUNqQixPQUFPLENBQUNZLElBQVQsRUFBZSxFQUFmLENBQVIsSUFBOEJMLE9BQU8sQ0FBQ1csR0FBUixDQUFZQyxJQUExQyxJQUFrRCxJQURwRDtBQUVBLE1BQU1ULE9BQU8sR0FBR1AsVUFBVSxDQUN2QlEsY0FEYSxDQUNFO0FBQUNDLElBQUFBLElBQUksRUFBRUk7QUFBUCxHQURGLEVBRWJILElBRmEsQ0FFUixVQUFBRCxJQUFJLEVBQUk7QUFDWlAsSUFBQUEsTUFBTSxDQUFDTyxJQUFELENBQU47O0FBRFksbUJBRU1YLE9BQU8sV0FBSUssR0FBSixvQkFGYjtBQUFBLFFBRUxjLE9BRkssWUFFTEEsT0FGSzs7QUFHWixRQUFNQyxhQUFhLDhCQUF1QlQsSUFBdkIsU0FBOEJRLE9BQTlCLENBQW5CO0FBQ0FFLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNDQUFaLEVBQW9EWCxJQUFwRDtBQUNBVixJQUFBQSxXQUFXLENBQUNtQixhQUFELENBQVg7QUFDRCxHQVJhLENBQWhCO0FBU0EsU0FBT1gsT0FBUDtBQUNEOztBQUVELFNBQVNjLGVBQVQsR0FBMkI7QUFDekIsTUFBSXhCLE9BQU8sQ0FBQ3lCLEtBQVosRUFBbUI7QUFDakIsV0FBT2hCLHFCQUFxQixXQUFyQixDQUNFLFVBQUFpQixFQUFFO0FBQUEsYUFBSUosT0FBTyxDQUFDSyxJQUFSLCtDQUFvREQsRUFBcEQsRUFBSjtBQUFBLEtBREosRUFFSmIsSUFGSSxDQUVDO0FBQUEsYUFBTUUsV0FBVyxFQUFqQjtBQUFBLEtBRkQsQ0FBUDtBQUdEOztBQUNELFNBQU9BLFdBQVcsRUFBbEI7QUFDRDs7QUFFRGEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZMLEVBQUFBLGVBQWUsRUFBZkEsZUFEZTtBQUVmVCxFQUFBQSxXQUFXLEVBQVhBLFdBRmU7QUFHZk4sRUFBQUEscUJBQXFCLEVBQXJCQTtBQUhlLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2JhbGxjaGFuZy9Qcm9qZWN0cy9CYWxsQ2hhbmcvQkRvY3Mvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBwcm9ncmFtID0gcmVxdWlyZSgnY29tbWFuZGVyJyk7XG5jb25zdCBvcGVuQnJvd3NlciA9IHJlcXVpcmUoJ3JlYWN0LWRldi11dGlscy9vcGVuQnJvd3NlcicpO1xuY29uc3QgcG9ydEZpbmRlciA9IHJlcXVpcmUoJ3BvcnRmaW5kZXInKTtcbmNvbnN0IGxpdmVSZWxvYWRTZXJ2ZXIgPSByZXF1aXJlKCcuL2xpdmVSZWxvYWRTZXJ2ZXIuanMnKTtcbmNvbnN0IHNlcnZlciA9IHJlcXVpcmUoJy4vc2VydmVyLmpzJyk7XG5cbmNvbnN0IENXRCA9IHByb2Nlc3MuY3dkKCk7XG5cbmZ1bmN0aW9uIHN0YXJ0TGl2ZVJlbG9hZFNlcnZlcigpIHtcbiAgY29uc3QgcHJvbWlzZSA9IHBvcnRGaW5kZXIuZ2V0UG9ydFByb21pc2Uoe3BvcnQ6IDM1NzI5fSkudGhlbihwb3J0ID0+IHtcbiAgICBsaXZlUmVsb2FkU2VydmVyLnN0YXJ0KHBvcnQpO1xuICB9KTtcbiAgcmV0dXJuIHByb21pc2U7XG59XG5cbmZ1bmN0aW9uIHN0YXJ0U2VydmVyKCkge1xuICBjb25zdCBpbml0aWFsU2VydmVyUG9ydCA9XG4gICAgcGFyc2VJbnQocHJvZ3JhbS5wb3J0LCAxMCkgfHwgcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xuICBjb25zdCBwcm9taXNlID0gcG9ydEZpbmRlclxuICAgIC5nZXRQb3J0UHJvbWlzZSh7cG9ydDogaW5pdGlhbFNlcnZlclBvcnR9KVxuICAgIC50aGVuKHBvcnQgPT4ge1xuICAgICAgc2VydmVyKHBvcnQpO1xuICAgICAgY29uc3Qge2Jhc2VVcmx9ID0gcmVxdWlyZShgJHtDV0R9L3NpdGVDb25maWcuanNgKTtcbiAgICAgIGNvbnN0IHNlcnZlckFkZHJlc3MgPSBgaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9JHtiYXNlVXJsfWA7XG4gICAgICBjb25zb2xlLmxvZygnRG9jdXNhdXJ1cyBzZXJ2ZXIgc3RhcnRlZCBvbiBwb3J0ICVkJywgcG9ydCk7XG4gICAgICBvcGVuQnJvd3NlcihzZXJ2ZXJBZGRyZXNzKTtcbiAgICB9KTtcbiAgcmV0dXJuIHByb21pc2U7XG59XG5cbmZ1bmN0aW9uIHN0YXJ0RG9jdXNhdXJ1cygpIHtcbiAgaWYgKHByb2dyYW0ud2F0Y2gpIHtcbiAgICByZXR1cm4gc3RhcnRMaXZlUmVsb2FkU2VydmVyKClcbiAgICAgIC5jYXRjaChleCA9PiBjb25zb2xlLndhcm4oYEZhaWxlZCB0byBzdGFydCBsaXZlIHJlbG9hZCBzZXJ2ZXI6ICR7ZXh9YCkpXG4gICAgICAudGhlbigoKSA9PiBzdGFydFNlcnZlcigpKTtcbiAgfVxuICByZXR1cm4gc3RhcnRTZXJ2ZXIoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHN0YXJ0RG9jdXNhdXJ1cyxcbiAgc3RhcnRTZXJ2ZXIsXG4gIHN0YXJ0TGl2ZVJlbG9hZFNlcnZlcixcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "start.js"
      ],
      "names": [
        "program",
        "require",
        "openBrowser",
        "portFinder",
        "liveReloadServer",
        "server",
        "CWD",
        "process",
        "cwd",
        "startLiveReloadServer",
        "promise",
        "getPortPromise",
        "port",
        "then",
        "start",
        "startServer",
        "initialServerPort",
        "parseInt",
        "env",
        "PORT",
        "baseUrl",
        "serverAddress",
        "console",
        "log",
        "startDocusaurus",
        "watch",
        "ex",
        "warn",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAMG,gBAAgB,GAAGH,OAAO,CAAC,uBAAD,CAAhC;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,aAAD,CAAtB;;AAEA,IAAMK,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AAEA,SAASC,qBAAT,GAAiC;AAC/B,MAAMC,OAAO,GAAGP,UAAU,CAACQ,cAAX,CAA0B;AAACC,IAAAA,IAAI,EAAE;AAAP,GAA1B,EAAyCC,IAAzC,CAA8C,UAAAD,IAAI,EAAI;AACpER,IAAAA,gBAAgB,CAACU,KAAjB,CAAuBF,IAAvB;AACD,GAFe,CAAhB;AAGA,SAAOF,OAAP;AACD;;AAED,SAASK,WAAT,GAAuB;AACrB,MAAMC,iBAAiB,GACrBC,QAAQ,CAACjB,OAAO,CAACY,IAAT,EAAe,EAAf,CAAR,IAA8BL,OAAO,CAACW,GAAR,CAAYC,IAA1C,IAAkD,IADpD;AAEA,MAAMT,OAAO,GAAGP,UAAU,CACvBQ,cADa,CACE;AAACC,IAAAA,IAAI,EAAEI;AAAP,GADF,EAEbH,IAFa,CAER,UAAAD,IAAI,EAAI;AACZP,IAAAA,MAAM,CAACO,IAAD,CAAN;;AADY,mBAEMX,OAAO,WAAIK,GAAJ,oBAFb;AAAA,QAELc,OAFK,YAELA,OAFK;;AAGZ,QAAMC,aAAa,8BAAuBT,IAAvB,SAA8BQ,OAA9B,CAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDX,IAApD;AACAV,IAAAA,WAAW,CAACmB,aAAD,CAAX;AACD,GARa,CAAhB;AASA,SAAOX,OAAP;AACD;;AAED,SAASc,eAAT,GAA2B;AACzB,MAAIxB,OAAO,CAACyB,KAAZ,EAAmB;AACjB,WAAOhB,qBAAqB,WAArB,CACE,UAAAiB,EAAE;AAAA,aAAIJ,OAAO,CAACK,IAAR,+CAAoDD,EAApD,EAAJ;AAAA,KADJ,EAEJb,IAFI,CAEC;AAAA,aAAME,WAAW,EAAjB;AAAA,KAFD,CAAP;AAGD;;AACD,SAAOA,WAAW,EAAlB;AACD;;AAEDa,MAAM,CAACC,OAAP,GAAiB;AACfL,EAAAA,eAAe,EAAfA,eADe;AAEfT,EAAAA,WAAW,EAAXA,WAFe;AAGfN,EAAAA,qBAAqB,EAArBA;AAHe,CAAjB",
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst program = require('commander');\nconst openBrowser = require('react-dev-utils/openBrowser');\nconst portFinder = require('portfinder');\nconst liveReloadServer = require('./liveReloadServer.js');\nconst server = require('./server.js');\n\nconst CWD = process.cwd();\n\nfunction startLiveReloadServer() {\n  const promise = portFinder.getPortPromise({port: 35729}).then(port => {\n    liveReloadServer.start(port);\n  });\n  return promise;\n}\n\nfunction startServer() {\n  const initialServerPort =\n    parseInt(program.port, 10) || process.env.PORT || 3000;\n  const promise = portFinder\n    .getPortPromise({port: initialServerPort})\n    .then(port => {\n      server(port);\n      const {baseUrl} = require(`${CWD}/siteConfig.js`);\n      const serverAddress = `http://localhost:${port}${baseUrl}`;\n      console.log('Docusaurus server started on port %d', port);\n      openBrowser(serverAddress);\n    });\n  return promise;\n}\n\nfunction startDocusaurus() {\n  if (program.watch) {\n    return startLiveReloadServer()\n      .catch(ex => console.warn(`Failed to start live reload server: ${ex}`))\n      .then(() => startServer());\n  }\n  return startServer();\n}\n\nmodule.exports = {\n  startDocusaurus,\n  startServer,\n  startLiveReloadServer,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"filename\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/liveReloadServer.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ballchang/Projects/BallChang/BDocs/website",
      "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/liveReloadServer.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/ballchang/Projects/BallChang/BDocs/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/liveReloadServer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/liveReloadServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
        "sourceFileName": "liveReloadServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar gaze = require('gaze');\n\nvar tinylr = require('tiny-lr');\n\nvar readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  var server = tinylr();\n  server.listen(port, function () {\n    console.log('LiveReload server started on port %d', port);\n  });\n  gaze([\"../\".concat(readMetadata.getDocsPath(), \"/**/*\"), '**/*', '!node_modules/**/*'], function () {\n    this.on('all', function () {\n      server.notifyClients(['/']);\n    });\n  });\n}\n\nvar getReloadScriptUrl = function getReloadScriptUrl() {\n  var port = process.env.LIVERELOAD_PORT;\n  return \"http://localhost:\".concat(port, \"/livereload.js\");\n};\n\nmodule.exports = {\n  start: start,\n  getReloadScriptUrl: getReloadScriptUrl\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpdmVSZWxvYWRTZXJ2ZXIuanMiXSwibmFtZXMiOlsiZ2F6ZSIsInJlcXVpcmUiLCJ0aW55bHIiLCJyZWFkTWV0YWRhdGEiLCJzdGFydCIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJMSVZFUkVMT0FEX1BPUlQiLCJzZXJ2ZXIiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwiZ2V0RG9jc1BhdGgiLCJvbiIsIm5vdGlmeUNsaWVudHMiLCJnZXRSZWxvYWRTY3JpcHRVcmwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBQ0EsSUFBTUUsWUFBWSxHQUFHRixPQUFPLENBQUMsbUJBQUQsQ0FBNUI7O0FBRUEsU0FBU0csS0FBVCxDQUFlQyxJQUFmLEVBQXFCO0FBQ25CQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixHQUF1QixhQUF2QjtBQUNBRixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsZUFBWixHQUE4QkosSUFBOUI7QUFDQSxNQUFNSyxNQUFNLEdBQUdSLE1BQU0sRUFBckI7QUFDQVEsRUFBQUEsTUFBTSxDQUFDQyxNQUFQLENBQWNOLElBQWQsRUFBb0IsWUFBTTtBQUN4Qk8sSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksc0NBQVosRUFBb0RSLElBQXBEO0FBQ0QsR0FGRDtBQUlBTCxFQUFBQSxJQUFJLENBQ0YsY0FBT0csWUFBWSxDQUFDVyxXQUFiLEVBQVAsWUFBMEMsTUFBMUMsRUFBa0Qsb0JBQWxELENBREUsRUFFRixZQUFXO0FBQ1QsU0FBS0MsRUFBTCxDQUFRLEtBQVIsRUFBZSxZQUFNO0FBQ25CTCxNQUFBQSxNQUFNLENBQUNNLGFBQVAsQ0FBcUIsQ0FBQyxHQUFELENBQXJCO0FBQ0QsS0FGRDtBQUdELEdBTkMsQ0FBSjtBQVFEOztBQUVELElBQU1DLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBcUIsR0FBTTtBQUMvQixNQUFNWixJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxlQUF6QjtBQUNBLG9DQUEyQkosSUFBM0I7QUFDRCxDQUhEOztBQUtBYSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZmYsRUFBQUEsS0FBSyxFQUFMQSxLQURlO0FBRWZhLEVBQUFBLGtCQUFrQixFQUFsQkE7QUFGZSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9iYWxsY2hhbmcvUHJvamVjdHMvQmFsbENoYW5nL0JEb2NzL3dlYnNpdGUvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL3NlcnZlciIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgZ2F6ZSA9IHJlcXVpcmUoJ2dhemUnKTtcbmNvbnN0IHRpbnlsciA9IHJlcXVpcmUoJ3RpbnktbHInKTtcbmNvbnN0IHJlYWRNZXRhZGF0YSA9IHJlcXVpcmUoJy4vcmVhZE1ldGFkYXRhLmpzJyk7XG5cbmZ1bmN0aW9uIHN0YXJ0KHBvcnQpIHtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPSAnZGV2ZWxvcG1lbnQnO1xuICBwcm9jZXNzLmVudi5MSVZFUkVMT0FEX1BPUlQgPSBwb3J0O1xuICBjb25zdCBzZXJ2ZXIgPSB0aW55bHIoKTtcbiAgc2VydmVyLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0xpdmVSZWxvYWQgc2VydmVyIHN0YXJ0ZWQgb24gcG9ydCAlZCcsIHBvcnQpO1xuICB9KTtcblxuICBnYXplKFxuICAgIFtgLi4vJHtyZWFkTWV0YWRhdGEuZ2V0RG9jc1BhdGgoKX0vKiovKmAsICcqKi8qJywgJyFub2RlX21vZHVsZXMvKiovKiddLFxuICAgIGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5vbignYWxsJywgKCkgPT4ge1xuICAgICAgICBzZXJ2ZXIubm90aWZ5Q2xpZW50cyhbJy8nXSk7XG4gICAgICB9KTtcbiAgICB9LFxuICApO1xufVxuXG5jb25zdCBnZXRSZWxvYWRTY3JpcHRVcmwgPSAoKSA9PiB7XG4gIGNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5MSVZFUkVMT0FEX1BPUlQ7XG4gIHJldHVybiBgaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9L2xpdmVyZWxvYWQuanNgO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHN0YXJ0LFxuICBnZXRSZWxvYWRTY3JpcHRVcmwsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "liveReloadServer.js"
      ],
      "names": [
        "gaze",
        "require",
        "tinylr",
        "readMetadata",
        "start",
        "port",
        "process",
        "env",
        "NODE_ENV",
        "LIVERELOAD_PORT",
        "server",
        "listen",
        "console",
        "log",
        "getDocsPath",
        "on",
        "notifyClients",
        "getReloadScriptUrl",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,mBAAD,CAA5B;;AAEA,SAASG,KAAT,CAAeC,IAAf,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,aAAvB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,eAAZ,GAA8BJ,IAA9B;AACA,MAAMK,MAAM,GAAGR,MAAM,EAArB;AACAQ,EAAAA,MAAM,CAACC,MAAP,CAAcN,IAAd,EAAoB,YAAM;AACxBO,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDR,IAApD;AACD,GAFD;AAIAL,EAAAA,IAAI,CACF,cAAOG,YAAY,CAACW,WAAb,EAAP,YAA0C,MAA1C,EAAkD,oBAAlD,CADE,EAEF,YAAW;AACT,SAAKC,EAAL,CAAQ,KAAR,EAAe,YAAM;AACnBL,MAAAA,MAAM,CAACM,aAAP,CAAqB,CAAC,GAAD,CAArB;AACD,KAFD;AAGD,GANC,CAAJ;AAQD;;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,MAAMZ,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYE,eAAzB;AACA,oCAA2BJ,IAA3B;AACD,CAHD;;AAKAa,MAAM,CAACC,OAAP,GAAiB;AACff,EAAAA,KAAK,EAALA,KADe;AAEfa,EAAAA,kBAAkB,EAAlBA;AAFe,CAAjB",
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst gaze = require('gaze');\nconst tinylr = require('tiny-lr');\nconst readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  const server = tinylr();\n  server.listen(port, () => {\n    console.log('LiveReload server started on port %d', port);\n  });\n\n  gaze(\n    [`../${readMetadata.getDocsPath()}/**/*`, '**/*', '!node_modules/**/*'],\n    function() {\n      this.on('all', () => {\n        server.notifyClients(['/']);\n      });\n    },\n  );\n}\n\nconst getReloadScriptUrl = () => {\n  const port = process.env.LIVERELOAD_PORT;\n  return `http://localhost:${port}/livereload.js`;\n};\n\nmodule.exports = {\n  start,\n  getReloadScriptUrl,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"filename\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/readMetadata.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ballchang/Projects/BallChang/BDocs/website",
      "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/readMetadata.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/ballchang/Projects/BallChang/BDocs/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/readMetadata.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/readMetadata.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
        "sourceFileName": "readMetadata.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar glob = require('glob');\n\nvar program = require('commander');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar blog = require('./blog.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar versionFallback = require('./versionFallback.js');\n\nvar utils = require('./utils.js');\n\nvar docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\nvar SupportedHeaderFields = new Set(['id', 'title', 'author', 'authorURL', 'authorFBID', 'sidebar_label', 'original_id', 'hide_title', 'layout', 'custom_edit_url']);\nprogram.option('--skip-next-release').parse(process.argv);\nvar allSidebars;\n\nif (fs.existsSync(\"\".concat(CWD, \"/sidebars.json\"))) {\n  allSidebars = require(\"\".concat(CWD, \"/sidebars.json\"));\n} else {\n  allSidebars = {};\n} // Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\n\n\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.name() === 'docusaurus-build' && program.skipNextRelease);\n} // returns map from id to object containing sidebar ordering info\n\n\nfunction readSidebar() {\n  var sidebars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  Object.assign(sidebars, versionFallback.sidebarData());\n  var items = {};\n  Object.keys(sidebars).forEach(function (sidebar) {\n    var categories = sidebars[sidebar];\n    var sidebarItems = [];\n    Object.keys(categories).forEach(function (category) {\n      var categoryItems = categories[category];\n      categoryItems.forEach(function (categoryItem) {\n        if (_typeof(categoryItem) === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach(function (subcategoryItem) {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category: category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1\n                });\n              });\n              return;\n\n            default:\n              return;\n          }\n        } // Is a regular id value.\n\n\n        sidebarItems.push({\n          id: categoryItem,\n          category: category,\n          subcategory: null,\n          order: sidebarItems.length + 1\n        });\n      });\n    });\n\n    for (var i = 0; i < sidebarItems.length; i++) {\n      var item = sidebarItems[i];\n      var previous = null;\n      var next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous: previous,\n        next: next,\n        sidebar: sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order\n      };\n    }\n  });\n  return items;\n} // process the metadata for a document found in either 'docs' or 'translated_docs'\n\n\nfunction processMetadata(file, refDir) {\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var language = utils.getLanguage(file, refDir) || 'en';\n  var metadata = {};\n  Object.keys(result.metadata).forEach(function (fieldName) {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(\"Header field \\\"\".concat(fieldName, \"\\\" in \").concat(file, \" is not supported.\"));\n    }\n  });\n  var rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.basename(file, path.extname(file));\n  }\n\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  } // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n\n\n  var subDir = utils.getSubDir(file, refDir);\n\n  if (subDir) {\n    metadata.id = \"\".concat(subDir, \"/\").concat(metadata.id);\n  } // Example: `docs/projectA/test.md` source is `projectA/test.md`\n\n\n  metadata.source = subDir ? \"\".concat(subDir, \"/\").concat(path.basename(file)) : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  var langPart = env.translation.enabled || siteConfig.useEnglishUrl ? \"\".concat(language, \"/\") : '';\n  var versionPart = '';\n\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = \"\".concat(docsPart).concat(langPart).concat(versionPart).concat(metadata.id, \".html\"); // change ids previous, next\n\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n  var items = readSidebar(allSidebars);\n  var id = metadata.localized_id;\n  var item = items[id];\n\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.next;\n    }\n\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.previous;\n    }\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: rawContent\n  };\n} // process metadata for all docs and save into core/metadata.js\n\n\nfunction generateMetadataDocs() {\n  var order;\n\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n    return language.tag;\n  });\n  var metadatas = {};\n  var defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    var docsDir = path.join(CWD, '../', getDocsPath());\n    var files = glob.sync(\"\".concat(docsDir, \"/**\"));\n    files.forEach(function (file) {\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n        metadatas[metadata.id] = metadata; // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n\n        enabledLanguages.filter(function (currentLanguage) {\n          return currentLanguage !== 'en';\n        }).forEach(function (currentLanguage) {\n          var baseMetadata = Object.assign({}, metadata);\n          baseMetadata.id = baseMetadata.id.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n\n          if (baseMetadata.permalink) {\n            baseMetadata.permalink = baseMetadata.permalink.toString().replace(new RegExp(\"^\".concat(docsPart, \"en/\")), \"\".concat(docsPart).concat(currentLanguage, \"/\"));\n          }\n\n          if (baseMetadata.next) {\n            baseMetadata.next = baseMetadata.next.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          if (baseMetadata.previous) {\n            baseMetadata.previous = baseMetadata.previous.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          baseMetadata.language = currentLanguage;\n          defaultMetadatas[baseMetadata.id] = baseMetadata;\n        });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    }); // metadata for non-english docs\n\n    var translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(\"\".concat(CWD, \"/translated_docs/**\"));\n    files.forEach(function (file) {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, translatedDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  } // metadata for versioned docs\n\n\n  var versionData = versionFallback.docData();\n  versionData.forEach(function (metadata) {\n    var id = metadata.localized_id;\n\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.next = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].next;\n      }\n\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.previous = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].previous;\n      }\n    }\n\n    metadatas[metadata.id] = metadata;\n  }); // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n\n  Object.keys(metadatas).forEach(function (metadata) {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title = metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title = metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/metadata.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(metadatas, null, 2), \";\\n\"));\n} // process metadata for blog posts and save into core/MetadataBlog.js\n\n\nfunction generateMetadataBlog() {\n  var metadatas = [];\n  var files = glob.sync(\"\".concat(CWD, \"/blog/**/*.*\"));\n  files.sort().reverse().forEach(function (file) {\n    var extension = path.extname(file);\n\n    if (extension !== '.md' && extension !== '.markdown') {\n      return;\n    }\n\n    var metadata = blog.getMetadata(file); // Extract, YYYY, MM, DD from the file name\n\n    var filePathDateArr = path.basename(file).toString().split('-');\n    metadata.date = new Date(\"\".concat(filePathDateArr[0], \"-\").concat(filePathDateArr[1], \"-\").concat(filePathDateArr[2], \"T06:00:00.000Z\")); // allow easier sorting of blog by providing seconds since epoch\n\n    metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n    metadatas.push(metadata);\n  });\n  var sortedMetadatas = metadatas.sort(function (a, b) {\n    return parseInt(b.seconds, 10) - parseInt(a.seconds, 10);\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/MetadataBlog.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(sortedMetadatas, null, 2), \";\\n\"));\n}\n\nmodule.exports = {\n  getDocsPath: getDocsPath,\n  readSidebar: readSidebar,\n  processMetadata: processMetadata,\n  generateMetadataDocs: generateMetadataDocs,\n  generateMetadataBlog: generateMetadataBlog\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWRNZXRhZGF0YS5qcyJdLCJuYW1lcyI6WyJDV0QiLCJwcm9jZXNzIiwiY3dkIiwicGF0aCIsInJlcXVpcmUiLCJmcyIsImdsb2IiLCJwcm9ncmFtIiwibWV0YWRhdGFVdGlscyIsImVudiIsImJsb2ciLCJsb2FkQ29uZmlnIiwic2l0ZUNvbmZpZyIsInZlcnNpb25GYWxsYmFjayIsInV0aWxzIiwiZG9jc1BhcnQiLCJkb2NzVXJsIiwiU3VwcG9ydGVkSGVhZGVyRmllbGRzIiwiU2V0Iiwib3B0aW9uIiwicGFyc2UiLCJhcmd2IiwiYWxsU2lkZWJhcnMiLCJleGlzdHNTeW5jIiwiZ2V0RG9jc1BhdGgiLCJjdXN0b21Eb2NzUGF0aCIsInNob3VsZEdlbmVyYXRlTmV4dFJlbGVhc2VEb2NzIiwidmVyc2lvbmluZyIsImVuYWJsZWQiLCJuYW1lIiwic2tpcE5leHRSZWxlYXNlIiwicmVhZFNpZGViYXIiLCJzaWRlYmFycyIsIk9iamVjdCIsImFzc2lnbiIsInNpZGViYXJEYXRhIiwiaXRlbXMiLCJrZXlzIiwiZm9yRWFjaCIsInNpZGViYXIiLCJjYXRlZ29yaWVzIiwic2lkZWJhckl0ZW1zIiwiY2F0ZWdvcnkiLCJjYXRlZ29yeUl0ZW1zIiwiY2F0ZWdvcnlJdGVtIiwidHlwZSIsImlkcyIsInN1YmNhdGVnb3J5SXRlbSIsInB1c2giLCJpZCIsInN1YmNhdGVnb3J5IiwibGFiZWwiLCJvcmRlciIsImxlbmd0aCIsImkiLCJpdGVtIiwicHJldmlvdXMiLCJuZXh0IiwicHJvY2Vzc01ldGFkYXRhIiwiZmlsZSIsInJlZkRpciIsInJlc3VsdCIsImV4dHJhY3RNZXRhZGF0YSIsInJlYWRGaWxlU3luYyIsImxhbmd1YWdlIiwiZ2V0TGFuZ3VhZ2UiLCJtZXRhZGF0YSIsImZpZWxkTmFtZSIsImhhcyIsImNvbnNvbGUiLCJ3YXJuIiwicmF3Q29udGVudCIsImJhc2VuYW1lIiwiZXh0bmFtZSIsImluY2x1ZGVzIiwiRXJyb3IiLCJzdWJEaXIiLCJnZXRTdWJEaXIiLCJzb3VyY2UiLCJ0aXRsZSIsImxhbmdQYXJ0IiwidHJhbnNsYXRpb24iLCJ1c2VFbmdsaXNoVXJsIiwidmVyc2lvblBhcnQiLCJ2ZXJzaW9uIiwicGVybWFsaW5rIiwibG9jYWxpemVkX2lkIiwibmV4dF9pZCIsInByZXZpb3VzX2lkIiwiZ2VuZXJhdGVNZXRhZGF0YURvY3MiLCJlIiwiZXJyb3IiLCJleGl0IiwiZW5hYmxlZExhbmd1YWdlcyIsIm1hcCIsInRhZyIsIm1ldGFkYXRhcyIsImRlZmF1bHRNZXRhZGF0YXMiLCJkb2NzRGlyIiwiam9pbiIsImZpbGVzIiwic3luYyIsImV4dGVuc2lvbiIsInJlcyIsImZpbHRlciIsImN1cnJlbnRMYW5ndWFnZSIsImJhc2VNZXRhZGF0YSIsInRvU3RyaW5nIiwicmVwbGFjZSIsIlJlZ0V4cCIsInRyYW5zbGF0ZWREaXIiLCJ2ZXJzaW9uRGF0YSIsImRvY0RhdGEiLCJwcmV2aW91c190aXRsZSIsIm5leHRfdGl0bGUiLCJ3cml0ZUZpbGVTeW5jIiwiX19kaXJuYW1lIiwiSlNPTiIsInN0cmluZ2lmeSIsImdlbmVyYXRlTWV0YWRhdGFCbG9nIiwic29ydCIsInJldmVyc2UiLCJnZXRNZXRhZGF0YSIsImZpbGVQYXRoRGF0ZUFyciIsInNwbGl0IiwiZGF0ZSIsIkRhdGUiLCJzZWNvbmRzIiwiTWF0aCIsInJvdW5kIiwiZ2V0VGltZSIsInNvcnRlZE1ldGFkYXRhcyIsImEiLCJiIiwicGFyc2VJbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7OztBQU9BLElBQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLEVBQVo7O0FBRUEsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUcsT0FBTyxHQUFHSCxPQUFPLENBQUMsV0FB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QjtBQUNmaEgsRUFBQUEsV0FBVyxFQUFYQSxXQURlO0FBRWZPLEVBQUFBLFdBQVcsRUFBWEEsV0FGZTtBQUdmMkIsRUFBQUEsZUFBZSxFQUFmQSxlQUhlO0FBSWYrQixFQUFBQSxvQkFBb0IsRUFBcEJBLG9CQUplO0FBS2Y4QixFQUFBQSxvQkFBb0IsRUFBcEJBO0FBTGUsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYmFsbGNoYW5nL1Byb2plY3RzL0JhbGxDaGFuZy9CRG9jcy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IENXRCA9IHByb2Nlc3MuY3dkKCk7XG5cbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBnbG9iID0gcmVxdWlyZSgnZ2xvYicpO1xuY29uc3QgcHJvZ3JhbSA9IHJlcXVpcmUoJ2NvbW1hbmRlcicpO1xuXG5jb25zdCBtZXRhZGF0YVV0aWxzID0gcmVxdWlyZSgnLi9tZXRhZGF0YVV0aWxzJyk7XG5cbmNvbnN0IGVudiA9IHJlcXVpcmUoJy4vZW52LmpzJyk7XG5jb25zdCBibG9nID0gcmVxdWlyZSgnLi9ibG9nLmpzJyk7XG5cbmNvbnN0IGxvYWRDb25maWcgPSByZXF1aXJlKCcuL2NvbmZpZycpO1xuXG5jb25zdCBzaXRlQ29uZmlnID0gbG9hZENvbmZpZyhgJHtDV0R9L3NpdGVDb25maWcuanNgKTtcbmNvbnN0IHZlcnNpb25GYWxsYmFjayA9IHJlcXVpcmUoJy4vdmVyc2lvbkZhbGxiYWNrLmpzJyk7XG5jb25zdCB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMuanMnKTtcblxuY29uc3QgZG9jc1BhcnQgPSBgJHtzaXRlQ29uZmlnLmRvY3NVcmwgPyBgJHtzaXRlQ29uZmlnLmRvY3NVcmx9L2AgOiAnJ31gO1xuXG5jb25zdCBTdXBwb3J0ZWRIZWFkZXJGaWVsZHMgPSBuZXcgU2V0KFtcbiAgJ2lkJyxcbiAgJ3RpdGxlJyxcbiAgJ2F1dGhvcicsXG4gICdhdXRob3JVUkwnLFxuICAnYXV0aG9yRkJJRCcsXG4gICdzaWRlYmFyX2xhYmVsJyxcbiAgJ29yaWdpbmFsX2lkJyxcbiAgJ2hpZGVfdGl0bGUnLFxuICAnbGF5b3V0JyxcbiAgJ2N1c3RvbV9lZGl0X3VybCcsXG5dKTtcblxucHJvZ3JhbS5vcHRpb24oJy0tc2tpcC1uZXh0LXJlbGVhc2UnKS5wYXJzZShwcm9jZXNzLmFyZ3YpO1xuXG5sZXQgYWxsU2lkZWJhcnM7XG5pZiAoZnMuZXhpc3RzU3luYyhgJHtDV0R9L3NpZGViYXJzLmpzb25gKSkge1xuICBhbGxTaWRlYmFycyA9IHJlcXVpcmUoYCR7Q1dEfS9zaWRlYmFycy5qc29uYCk7XG59IGVsc2Uge1xuICBhbGxTaWRlYmFycyA9IHt9O1xufVxuXG4vLyBDYW4gaGF2ZSBhIGN1c3RvbSBkb2NzIHBhdGguIFRvcCBsZXZlbCBmb2xkZXIgc3RpbGwgbmVlZHMgdG8gYmUgaW4gZGlyZWN0b3J5XG4vLyBhdCB0aGUgc2FtZSBsZXZlbCBhcyBgd2Vic2l0ZWAsIG5vdCBpbnNpZGUgYHdlYnNpdGVgLlxuLy8gICBlLmcuLCBkb2NzL3doZXJlRG9jc1JlYWxseUV4aXN0XG4vLyAgICAgICAgIHdlYnNpdGUtZG9jcy9cbi8vIEFsbCAubWQgZG9jcyBzdGlsbCAoY3VycmVudGx5KSBtdXN0IGJlIGluIG9uZSBmbGF0IGRpcmVjdG9yeSBoaWVyYXJjaHkuXG4vLyAgIGUuZy4sIGRvY3Mvd2hlcmVEb2NzUmVhbGx5RXhpc3QvKi5tZCAoYWxsIC5tZCBmaWxlcyBpbiB0aGlzIGRpcilcbmZ1bmN0aW9uIGdldERvY3NQYXRoKCkge1xuICByZXR1cm4gc2l0ZUNvbmZpZy5jdXN0b21Eb2NzUGF0aCA/IHNpdGVDb25maWcuY3VzdG9tRG9jc1BhdGggOiAnZG9jcyc7XG59XG5cbmZ1bmN0aW9uIHNob3VsZEdlbmVyYXRlTmV4dFJlbGVhc2VEb2NzKCkge1xuICByZXR1cm4gIShcbiAgICBlbnYudmVyc2lvbmluZy5lbmFibGVkICYmXG4gICAgcHJvZ3JhbS5uYW1lKCkgPT09ICdkb2N1c2F1cnVzLWJ1aWxkJyAmJlxuICAgIHByb2dyYW0uc2tpcE5leHRSZWxlYXNlXG4gICk7XG59XG5cbi8vIHJldHVybnMgbWFwIGZyb20gaWQgdG8gb2JqZWN0IGNvbnRhaW5pbmcgc2lkZWJhciBvcmRlcmluZyBpbmZvXG5mdW5jdGlvbiByZWFkU2lkZWJhcihzaWRlYmFycyA9IHt9KSB7XG4gIE9iamVjdC5hc3NpZ24oc2lkZWJhcnMsIHZlcnNpb25GYWxsYmFjay5zaWRlYmFyRGF0YSgpKTtcblxuICBjb25zdCBpdGVtcyA9IHt9O1xuXG4gIE9iamVjdC5rZXlzKHNpZGViYXJzKS5mb3JFYWNoKHNpZGViYXIgPT4ge1xuICAgIGNvbnN0IGNhdGVnb3JpZXMgPSBzaWRlYmFyc1tzaWRlYmFyXTtcbiAgICBjb25zdCBzaWRlYmFySXRlbXMgPSBbXTtcblxuICAgIE9iamVjdC5rZXlzKGNhdGVnb3JpZXMpLmZvckVhY2goY2F0ZWdvcnkgPT4ge1xuICAgICAgY29uc3QgY2F0ZWdvcnlJdGVtcyA9IGNhdGVnb3JpZXNbY2F0ZWdvcnldO1xuICAgICAgY2F0ZWdvcnlJdGVtcy5mb3JFYWNoKGNhdGVnb3J5SXRlbSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgY2F0ZWdvcnlJdGVtID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgIHN3aXRjaCAoY2F0ZWdvcnlJdGVtLnR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgJ3N1YmNhdGVnb3J5JzpcbiAgICAgICAgICAgICAgY2F0ZWdvcnlJdGVtLmlkcy5mb3JFYWNoKHN1YmNhdGVnb3J5SXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgc2lkZWJhckl0ZW1zLnB1c2goe1xuICAgICAgICAgICAgICAgICAgaWQ6IHN1YmNhdGVnb3J5SXRlbSxcbiAgICAgICAgICAgICAgICAgIGNhdGVnb3J5LFxuICAgICAgICAgICAgICAgICAgc3ViY2F0ZWdvcnk6IGNhdGVnb3J5SXRlbS5sYWJlbCxcbiAgICAgICAgICAgICAgICAgIG9yZGVyOiBzaWRlYmFySXRlbXMubGVuZ3RoICsgMSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBJcyBhIHJlZ3VsYXIgaWQgdmFsdWUuXG4gICAgICAgIHNpZGViYXJJdGVtcy5wdXNoKHtcbiAgICAgICAgICBpZDogY2F0ZWdvcnlJdGVtLFxuICAgICAgICAgIGNhdGVnb3J5LFxuICAgICAgICAgIHN1YmNhdGVnb3J5OiBudWxsLFxuICAgICAgICAgIG9yZGVyOiBzaWRlYmFySXRlbXMubGVuZ3RoICsgMSxcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2lkZWJhckl0ZW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBpdGVtID0gc2lkZWJhckl0ZW1zW2ldO1xuICAgICAgbGV0IHByZXZpb3VzID0gbnVsbDtcbiAgICAgIGxldCBuZXh0ID0gbnVsbDtcblxuICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgIHByZXZpb3VzID0gc2lkZWJhckl0ZW1zW2kgLSAxXS5pZDtcbiAgICAgIH1cblxuICAgICAgaWYgKGkgPCBzaWRlYmFySXRlbXMubGVuZ3RoIC0gMSkge1xuICAgICAgICBuZXh0ID0gc2lkZWJhckl0ZW1zW2kgKyAxXS5pZDtcbiAgICAgIH1cblxuICAgICAgaXRlbXNbaXRlbS5pZF0gPSB7XG4gICAgICAgIHByZXZpb3VzLFxuICAgICAgICBuZXh0LFxuICAgICAgICBzaWRlYmFyLFxuICAgICAgICBjYXRlZ29yeTogaXRlbS5jYXRlZ29yeSxcbiAgICAgICAgc3ViY2F0ZWdvcnk6IGl0ZW0uc3ViY2F0ZWdvcnksXG4gICAgICAgIG9yZGVyOiBpdGVtLm9yZGVyLFxuICAgICAgfTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBpdGVtcztcbn1cblxuLy8gcHJvY2VzcyB0aGUgbWV0YWRhdGEgZm9yIGEgZG9jdW1lbnQgZm91bmQgaW4gZWl0aGVyICdkb2NzJyBvciAndHJhbnNsYXRlZF9kb2NzJ1xuZnVuY3Rpb24gcHJvY2Vzc01ldGFkYXRhKGZpbGUsIHJlZkRpcikge1xuICBjb25zdCByZXN1bHQgPSBtZXRhZGF0YVV0aWxzLmV4dHJhY3RNZXRhZGF0YShmcy5yZWFkRmlsZVN5bmMoZmlsZSwgJ3V0ZjgnKSk7XG4gIGNvbnN0IGxhbmd1YWdlID0gdXRpbHMuZ2V0TGFuZ3VhZ2UoZmlsZSwgcmVmRGlyKSB8fCAnZW4nO1xuXG4gIGNvbnN0IG1ldGFkYXRhID0ge307XG4gIE9iamVjdC5rZXlzKHJlc3VsdC5tZXRhZGF0YSkuZm9yRWFjaChmaWVsZE5hbWUgPT4ge1xuICAgIGlmIChTdXBwb3J0ZWRIZWFkZXJGaWVsZHMuaGFzKGZpZWxkTmFtZSkpIHtcbiAgICAgIG1ldGFkYXRhW2ZpZWxkTmFtZV0gPSByZXN1bHQubWV0YWRhdGFbZmllbGROYW1lXTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS53YXJuKGBIZWFkZXIgZmllbGQgXCIke2ZpZWxkTmFtZX1cIiBpbiAke2ZpbGV9IGlzIG5vdCBzdXBwb3J0ZWQuYCk7XG4gICAgfVxuICB9KTtcblxuICBjb25zdCByYXdDb250ZW50ID0gcmVzdWx0LnJhd0NvbnRlbnQ7XG5cbiAgaWYgKCFtZXRhZGF0YS5pZCkge1xuICAgIG1ldGFkYXRhLmlkID0gcGF0aC5iYXNlbmFtZShmaWxlLCBwYXRoLmV4dG5hbWUoZmlsZSkpO1xuICB9XG4gIGlmIChtZXRhZGF0YS5pZC5pbmNsdWRlcygnLycpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdEb2N1bWVudCBpZCBjYW5ub3QgaW5jbHVkZSBcIi9cIi4nKTtcbiAgfVxuXG4gIC8vIElmIGEgZmlsZSBpcyBsb2NhdGVkIGluIGEgc3ViZGlyZWN0b3J5LCBwcmVwZW5kIHRoZSBzdWJkaXIgdG8gaXQncyBJRFxuICAvLyBFeGFtcGxlOlxuICAvLyAgKGZpbGU6ICdkb2N1c2F1cnVzL2RvY3MvcHJvamVjdEEvdGVzdC5tZCcsIElEICd0ZXN0JywgcmVmRGlyOiAnZG9jdXNhdXJ1cy9kb2NzJylcbiAgLy8gIHJldHVybnMgJ3Byb2plY3RBL3Rlc3QnXG4gIGNvbnN0IHN1YkRpciA9IHV0aWxzLmdldFN1YkRpcihmaWxlLCByZWZEaXIpO1xuICBpZiAoc3ViRGlyKSB7XG4gICAgbWV0YWRhdGEuaWQgPSBgJHtzdWJEaXJ9LyR7bWV0YWRhdGEuaWR9YDtcbiAgfVxuXG4gIC8vIEV4YW1wbGU6IGBkb2NzL3Byb2plY3RBL3Rlc3QubWRgIHNvdXJjZSBpcyBgcHJvamVjdEEvdGVzdC5tZGBcbiAgbWV0YWRhdGEuc291cmNlID0gc3ViRGlyXG4gICAgPyBgJHtzdWJEaXJ9LyR7cGF0aC5iYXNlbmFtZShmaWxlKX1gXG4gICAgOiBwYXRoLmJhc2VuYW1lKGZpbGUpO1xuXG4gIGlmICghbWV0YWRhdGEudGl0bGUpIHtcbiAgICBtZXRhZGF0YS50aXRsZSA9IG1ldGFkYXRhLmlkO1xuICB9XG5cbiAgY29uc3QgbGFuZ1BhcnQgPVxuICAgIGVudi50cmFuc2xhdGlvbi5lbmFibGVkIHx8IHNpdGVDb25maWcudXNlRW5nbGlzaFVybCA/IGAke2xhbmd1YWdlfS9gIDogJyc7XG4gIGxldCB2ZXJzaW9uUGFydCA9ICcnO1xuICBpZiAoZW52LnZlcnNpb25pbmcuZW5hYmxlZCkge1xuICAgIG1ldGFkYXRhLnZlcnNpb24gPSAnbmV4dCc7XG4gICAgdmVyc2lvblBhcnQgPSAnbmV4dC8nO1xuICB9XG5cbiAgbWV0YWRhdGEucGVybWFsaW5rID0gYCR7ZG9jc1BhcnR9JHtsYW5nUGFydH0ke3ZlcnNpb25QYXJ0fSR7XG4gICAgbWV0YWRhdGEuaWRcbiAgfS5odG1sYDtcblxuICAvLyBjaGFuZ2UgaWRzIHByZXZpb3VzLCBuZXh0XG4gIG1ldGFkYXRhLmxvY2FsaXplZF9pZCA9IG1ldGFkYXRhLmlkO1xuICBtZXRhZGF0YS5pZCA9IChlbnYudHJhbnNsYXRpb24uZW5hYmxlZCA/IGAke2xhbmd1YWdlfS1gIDogJycpICsgbWV0YWRhdGEuaWQ7XG4gIG1ldGFkYXRhLmxhbmd1YWdlID0gZW52LnRyYW5zbGF0aW9uLmVuYWJsZWQgPyBsYW5ndWFnZSA6ICdlbic7XG5cbiAgY29uc3QgaXRlbXMgPSByZWFkU2lkZWJhcihhbGxTaWRlYmFycyk7XG4gIGNvbnN0IGlkID0gbWV0YWRhdGEubG9jYWxpemVkX2lkO1xuICBjb25zdCBpdGVtID0gaXRlbXNbaWRdO1xuICBpZiAoaXRlbSkge1xuICAgIG1ldGFkYXRhLnNpZGViYXIgPSBpdGVtLnNpZGViYXI7XG4gICAgbWV0YWRhdGEuY2F0ZWdvcnkgPSBpdGVtLmNhdGVnb3J5O1xuICAgIG1ldGFkYXRhLnN1YmNhdGVnb3J5ID0gaXRlbS5zdWJjYXRlZ29yeTtcbiAgICBtZXRhZGF0YS5vcmRlciA9IGl0ZW0ub3JkZXI7XG5cbiAgICBpZiAoaXRlbS5uZXh0KSB7XG4gICAgICBtZXRhZGF0YS5uZXh0X2lkID0gaXRlbS5uZXh0O1xuICAgICAgbWV0YWRhdGEubmV4dCA9XG4gICAgICAgIChlbnYudHJhbnNsYXRpb24uZW5hYmxlZCA/IGAke2xhbmd1YWdlfS1gIDogJycpICsgaXRlbS5uZXh0O1xuICAgIH1cbiAgICBpZiAoaXRlbS5wcmV2aW91cykge1xuICAgICAgbWV0YWRhdGEucHJldmlvdXNfaWQgPSBpdGVtLnByZXZpb3VzO1xuICAgICAgbWV0YWRhdGEucHJldmlvdXMgPVxuICAgICAgICAoZW52LnRyYW5zbGF0aW9uLmVuYWJsZWQgPyBgJHtsYW5ndWFnZX0tYCA6ICcnKSArIGl0ZW0ucHJldmlvdXM7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHttZXRhZGF0YSwgcmF3Q29udGVudH07XG59XG5cbi8vIHByb2Nlc3MgbWV0YWRhdGEgZm9yIGFsbCBkb2NzIGFuZCBzYXZlIGludG8gY29yZS9tZXRhZGF0YS5qc1xuZnVuY3Rpb24gZ2VuZXJhdGVNZXRhZGF0YURvY3MoKSB7XG4gIGxldCBvcmRlcjtcbiAgdHJ5IHtcbiAgICBvcmRlciA9IHJlYWRTaWRlYmFyKGFsbFNpZGViYXJzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgcHJvY2Vzcy5leGl0KDEpO1xuICB9XG5cbiAgY29uc3QgZW5hYmxlZExhbmd1YWdlcyA9IGVudi50cmFuc2xhdGlvblxuICAgIC5lbmFibGVkTGFuZ3VhZ2VzKClcbiAgICAubWFwKGxhbmd1YWdlID0+IGxhbmd1YWdlLnRhZyk7XG5cbiAgY29uc3QgbWV0YWRhdGFzID0ge307XG4gIGNvbnN0IGRlZmF1bHRNZXRhZGF0YXMgPSB7fTtcblxuICBpZiAoc2hvdWxkR2VuZXJhdGVOZXh0UmVsZWFzZURvY3MoKSkge1xuICAgIC8vIG1ldGFkYXRhIGZvciBlbmdsaXNoIGZpbGVzXG4gICAgY29uc3QgZG9jc0RpciA9IHBhdGguam9pbihDV0QsICcuLi8nLCBnZXREb2NzUGF0aCgpKTtcbiAgICBsZXQgZmlsZXMgPSBnbG9iLnN5bmMoYCR7ZG9jc0Rpcn0vKipgKTtcbiAgICBmaWxlcy5mb3JFYWNoKGZpbGUgPT4ge1xuICAgICAgY29uc3QgZXh0ZW5zaW9uID0gcGF0aC5leHRuYW1lKGZpbGUpO1xuXG4gICAgICBpZiAoZXh0ZW5zaW9uID09PSAnLm1kJyB8fCBleHRlbnNpb24gPT09ICcubWFya2Rvd24nKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IHByb2Nlc3NNZXRhZGF0YShmaWxlLCBkb2NzRGlyKTtcblxuICAgICAgICBpZiAoIXJlcykge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBtZXRhZGF0YSA9IHJlcy5tZXRhZGF0YTtcbiAgICAgICAgbWV0YWRhdGFzW21ldGFkYXRhLmlkXSA9IG1ldGFkYXRhO1xuXG4gICAgICAgIC8vIGNyZWF0ZSBhIGRlZmF1bHQgbGlzdCBvZiBkb2N1bWVudHMgZm9yIGVhY2ggZW5hYmxlZCBsYW5ndWFnZSBiYXNlZCBvbiBkb2NzIGluIEVuZ2xpc2hcbiAgICAgICAgLy8gdGhlc2Ugd2lsbCBnZXQgcmVwbGFjZWQgaWYvd2hlbiB0aGUgbG9jYWxpemVkIGZpbGUgaXMgZG93bmxvYWRlZCBmcm9tIGNyb3dkaW5cbiAgICAgICAgZW5hYmxlZExhbmd1YWdlc1xuICAgICAgICAgIC5maWx0ZXIoY3VycmVudExhbmd1YWdlID0+IGN1cnJlbnRMYW5ndWFnZSAhPT0gJ2VuJylcbiAgICAgICAgICAuZm9yRWFjaChjdXJyZW50TGFuZ3VhZ2UgPT4ge1xuICAgICAgICAgICAgY29uc3QgYmFzZU1ldGFkYXRhID0gT2JqZWN0LmFzc2lnbih7fSwgbWV0YWRhdGEpO1xuICAgICAgICAgICAgYmFzZU1ldGFkYXRhLmlkID0gYmFzZU1ldGFkYXRhLmlkXG4gICAgICAgICAgICAgIC50b1N0cmluZygpXG4gICAgICAgICAgICAgIC5yZXBsYWNlKC9eZW4tLywgYCR7Y3VycmVudExhbmd1YWdlfS1gKTtcbiAgICAgICAgICAgIGlmIChiYXNlTWV0YWRhdGEucGVybWFsaW5rKSB7XG4gICAgICAgICAgICAgIGJhc2VNZXRhZGF0YS5wZXJtYWxpbmsgPSBiYXNlTWV0YWRhdGEucGVybWFsaW5rXG4gICAgICAgICAgICAgICAgLnRvU3RyaW5nKClcbiAgICAgICAgICAgICAgICAucmVwbGFjZShcbiAgICAgICAgICAgICAgICAgIG5ldyBSZWdFeHAoYF4ke2RvY3NQYXJ0fWVuL2ApLFxuICAgICAgICAgICAgICAgICAgYCR7ZG9jc1BhcnR9JHtjdXJyZW50TGFuZ3VhZ2V9L2AsXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChiYXNlTWV0YWRhdGEubmV4dCkge1xuICAgICAgICAgICAgICBiYXNlTWV0YWRhdGEubmV4dCA9IGJhc2VNZXRhZGF0YS5uZXh0XG4gICAgICAgICAgICAgICAgLnRvU3RyaW5nKClcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvXmVuLS8sIGAke2N1cnJlbnRMYW5ndWFnZX0tYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYmFzZU1ldGFkYXRhLnByZXZpb3VzKSB7XG4gICAgICAgICAgICAgIGJhc2VNZXRhZGF0YS5wcmV2aW91cyA9IGJhc2VNZXRhZGF0YS5wcmV2aW91c1xuICAgICAgICAgICAgICAgIC50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL15lbi0vLCBgJHtjdXJyZW50TGFuZ3VhZ2V9LWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYmFzZU1ldGFkYXRhLmxhbmd1YWdlID0gY3VycmVudExhbmd1YWdlO1xuICAgICAgICAgICAgZGVmYXVsdE1ldGFkYXRhc1tiYXNlTWV0YWRhdGEuaWRdID0gYmFzZU1ldGFkYXRhO1xuICAgICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuYXNzaWduKG1ldGFkYXRhcywgZGVmYXVsdE1ldGFkYXRhcyk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBtZXRhZGF0YSBmb3Igbm9uLWVuZ2xpc2ggZG9jc1xuICAgIGNvbnN0IHRyYW5zbGF0ZWREaXIgPSBwYXRoLmpvaW4oQ1dELCAndHJhbnNsYXRlZF9kb2NzJyk7XG4gICAgZmlsZXMgPSBnbG9iLnN5bmMoYCR7Q1dEfS90cmFuc2xhdGVkX2RvY3MvKipgKTtcbiAgICBmaWxlcy5mb3JFYWNoKGZpbGUgPT4ge1xuICAgICAgaWYgKCF1dGlscy5nZXRMYW5ndWFnZShmaWxlLCB0cmFuc2xhdGVkRGlyKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGV4dGVuc2lvbiA9IHBhdGguZXh0bmFtZShmaWxlKTtcblxuICAgICAgaWYgKGV4dGVuc2lvbiA9PT0gJy5tZCcgfHwgZXh0ZW5zaW9uID09PSAnLm1hcmtkb3duJykge1xuICAgICAgICBjb25zdCByZXMgPSBwcm9jZXNzTWV0YWRhdGEoZmlsZSwgdHJhbnNsYXRlZERpcik7XG4gICAgICAgIGlmICghcmVzKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1ldGFkYXRhID0gcmVzLm1ldGFkYXRhO1xuICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGEuaWRdID0gbWV0YWRhdGE7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvLyBtZXRhZGF0YSBmb3IgdmVyc2lvbmVkIGRvY3NcbiAgY29uc3QgdmVyc2lvbkRhdGEgPSB2ZXJzaW9uRmFsbGJhY2suZG9jRGF0YSgpO1xuICB2ZXJzaW9uRGF0YS5mb3JFYWNoKG1ldGFkYXRhID0+IHtcbiAgICBjb25zdCBpZCA9IG1ldGFkYXRhLmxvY2FsaXplZF9pZDtcbiAgICBpZiAob3JkZXJbaWRdKSB7XG4gICAgICBtZXRhZGF0YS5zaWRlYmFyID0gb3JkZXJbaWRdLnNpZGViYXI7XG4gICAgICBtZXRhZGF0YS5jYXRlZ29yeSA9IG9yZGVyW2lkXS5jYXRlZ29yeTtcbiAgICAgIG1ldGFkYXRhLnN1YmNhdGVnb3J5ID0gb3JkZXJbaWRdLnN1YmNhdGVnb3J5O1xuICAgICAgbWV0YWRhdGEub3JkZXIgPSBvcmRlcltpZF0ub3JkZXI7XG5cbiAgICAgIGlmIChvcmRlcltpZF0ubmV4dCkge1xuICAgICAgICBtZXRhZGF0YS5uZXh0X2lkID0gb3JkZXJbaWRdLm5leHQucmVwbGFjZShcbiAgICAgICAgICBgdmVyc2lvbi0ke21ldGFkYXRhLnZlcnNpb259LWAsXG4gICAgICAgICAgJycsXG4gICAgICAgICk7XG4gICAgICAgIG1ldGFkYXRhLm5leHQgPVxuICAgICAgICAgIChlbnYudHJhbnNsYXRpb24uZW5hYmxlZCA/IGAke21ldGFkYXRhLmxhbmd1YWdlfS1gIDogJycpICtcbiAgICAgICAgICBvcmRlcltpZF0ubmV4dDtcbiAgICAgIH1cbiAgICAgIGlmIChvcmRlcltpZF0ucHJldmlvdXMpIHtcbiAgICAgICAgbWV0YWRhdGEucHJldmlvdXNfaWQgPSBvcmRlcltpZF0ucHJldmlvdXMucmVwbGFjZShcbiAgICAgICAgICBgdmVyc2lvbi0ke21ldGFkYXRhLnZlcnNpb259LWAsXG4gICAgICAgICAgJycsXG4gICAgICAgICk7XG4gICAgICAgIG1ldGFkYXRhLnByZXZpb3VzID1cbiAgICAgICAgICAoZW52LnRyYW5zbGF0aW9uLmVuYWJsZWQgPyBgJHttZXRhZGF0YS5sYW5ndWFnZX0tYCA6ICcnKSArXG4gICAgICAgICAgb3JkZXJbaWRdLnByZXZpb3VzO1xuICAgICAgfVxuICAgIH1cbiAgICBtZXRhZGF0YXNbbWV0YWRhdGEuaWRdID0gbWV0YWRhdGE7XG4gIH0pO1xuXG4gIC8vIEdldCB0aGUgdGl0bGVzIG9mIHRoZSBwcmV2aW91cyBhbmQgbmV4dCBpZHMgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW5cbiAgLy8gbmF2aWdhdGlvbiBidXR0b25zIGluIERvY3NMYXlvdXQuanNcbiAgT2JqZWN0LmtleXMobWV0YWRhdGFzKS5mb3JFYWNoKG1ldGFkYXRhID0+IHtcbiAgICBpZiAobWV0YWRhdGFzW21ldGFkYXRhXS5wcmV2aW91cykge1xuICAgICAgaWYgKG1ldGFkYXRhc1ttZXRhZGF0YXNbbWV0YWRhdGFdLnByZXZpb3VzXSkge1xuICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGFdLnByZXZpb3VzX3RpdGxlID1cbiAgICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGFzW21ldGFkYXRhXS5wcmV2aW91c10udGl0bGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGFdLnByZXZpb3VzX3RpdGxlID0gJ1ByZXZpb3VzJztcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG1ldGFkYXRhc1ttZXRhZGF0YV0ubmV4dCkge1xuICAgICAgaWYgKG1ldGFkYXRhc1ttZXRhZGF0YXNbbWV0YWRhdGFdLm5leHRdKSB7XG4gICAgICAgIG1ldGFkYXRhc1ttZXRhZGF0YV0ubmV4dF90aXRsZSA9XG4gICAgICAgICAgbWV0YWRhdGFzW21ldGFkYXRhc1ttZXRhZGF0YV0ubmV4dF0udGl0bGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtZXRhZGF0YXNbbWV0YWRhdGFdLm5leHRfdGl0bGUgPSAnTmV4dCc7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICBmcy53cml0ZUZpbGVTeW5jKFxuICAgIHBhdGguam9pbihfX2Rpcm5hbWUsICcvLi4vY29yZS9tZXRhZGF0YS5qcycpLFxuICAgIGAkeycvKipcXG4nICtcbiAgICAnICogQCcgK1xuICAgICdnZW5lcmF0ZWRcXG4nICsgLy8gc2VwYXJhdGUgdGhpcyBvdXQgZm9yIE51Y2xpZGUgdHJlYXRpbmcgQGdlbmVyYXRlZCBhcyByZWFkb25seVxuICAgICAgJyAqL1xcbicgK1xuICAgICAgJ21vZHVsZS5leHBvcnRzID0gJ30ke0pTT04uc3RyaW5naWZ5KG1ldGFkYXRhcywgbnVsbCwgMil9O1xcbmAsXG4gICk7XG59XG5cbi8vIHByb2Nlc3MgbWV0YWRhdGEgZm9yIGJsb2cgcG9zdHMgYW5kIHNhdmUgaW50byBjb3JlL01ldGFkYXRhQmxvZy5qc1xuZnVuY3Rpb24gZ2VuZXJhdGVNZXRhZGF0YUJsb2coKSB7XG4gIGNvbnN0IG1ldGFkYXRhcyA9IFtdO1xuXG4gIGNvbnN0IGZpbGVzID0gZ2xvYi5zeW5jKGAke0NXRH0vYmxvZy8qKi8qLipgKTtcbiAgZmlsZXNcbiAgICAuc29ydCgpXG4gICAgLnJldmVyc2UoKVxuICAgIC5mb3JFYWNoKGZpbGUgPT4ge1xuICAgICAgY29uc3QgZXh0ZW5zaW9uID0gcGF0aC5leHRuYW1lKGZpbGUpO1xuICAgICAgaWYgKGV4dGVuc2lvbiAhPT0gJy5tZCcgJiYgZXh0ZW5zaW9uICE9PSAnLm1hcmtkb3duJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBtZXRhZGF0YSA9IGJsb2cuZ2V0TWV0YWRhdGEoZmlsZSk7XG4gICAgICAvLyBFeHRyYWN0LCBZWVlZLCBNTSwgREQgZnJvbSB0aGUgZmlsZSBuYW1lXG4gICAgICBjb25zdCBmaWxlUGF0aERhdGVBcnIgPSBwYXRoXG4gICAgICAgIC5iYXNlbmFtZShmaWxlKVxuICAgICAgICAudG9TdHJpbmcoKVxuICAgICAgICAuc3BsaXQoJy0nKTtcbiAgICAgIG1ldGFkYXRhLmRhdGUgPSBuZXcgRGF0ZShcbiAgICAgICAgYCR7ZmlsZVBhdGhEYXRlQXJyWzBdfS0ke2ZpbGVQYXRoRGF0ZUFyclsxXX0tJHtcbiAgICAgICAgICBmaWxlUGF0aERhdGVBcnJbMl1cbiAgICAgICAgfVQwNjowMDowMC4wMDBaYCxcbiAgICAgICk7XG4gICAgICAvLyBhbGxvdyBlYXNpZXIgc29ydGluZyBvZiBibG9nIGJ5IHByb3ZpZGluZyBzZWNvbmRzIHNpbmNlIGVwb2NoXG4gICAgICBtZXRhZGF0YS5zZWNvbmRzID0gTWF0aC5yb3VuZChtZXRhZGF0YS5kYXRlLmdldFRpbWUoKSAvIDEwMDApO1xuXG4gICAgICBtZXRhZGF0YXMucHVzaChtZXRhZGF0YSk7XG4gICAgfSk7XG5cbiAgY29uc3Qgc29ydGVkTWV0YWRhdGFzID0gbWV0YWRhdGFzLnNvcnQoXG4gICAgKGEsIGIpID0+IHBhcnNlSW50KGIuc2Vjb25kcywgMTApIC0gcGFyc2VJbnQoYS5zZWNvbmRzLCAxMCksXG4gICk7XG5cbiAgZnMud3JpdGVGaWxlU3luYyhcbiAgICBwYXRoLmpvaW4oX19kaXJuYW1lLCAnLy4uL2NvcmUvTWV0YWRhdGFCbG9nLmpzJyksXG4gICAgYCR7Jy8qKlxcbicgK1xuICAgICcgKiBAJyArXG4gICAgJ2dlbmVyYXRlZFxcbicgKyAvLyBzZXBhcmF0ZSB0aGlzIG91dCBmb3IgTnVjbGlkZSB0cmVhdGluZyBAZ2VuZXJhdGVkIGFzIHJlYWRvbmx5XG4gICAgICAnICovXFxuJyArXG4gICAgICAnbW9kdWxlLmV4cG9ydHMgPSAnfSR7SlNPTi5zdHJpbmdpZnkoc29ydGVkTWV0YWRhdGFzLCBudWxsLCAyKX07XFxuYCxcbiAgKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldERvY3NQYXRoLFxuICByZWFkU2lkZWJhcixcbiAgcHJvY2Vzc01ldGFkYXRhLFxuICBnZW5lcmF0ZU1ldGFkYXRhRG9jcyxcbiAgZ2VuZXJhdGVNZXRhZGF0YUJsb2csXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "readMetadata.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "path",
        "require",
        "fs",
        "glob",
        "program",
        "metadataUtils",
        "env",
        "blog",
        "loadConfig",
        "siteConfig",
        "versionFallback",
        "utils",
        "docsPart",
        "docsUrl",
        "SupportedHeaderFields",
        "Set",
        "option",
        "parse",
        "argv",
        "allSidebars",
        "existsSync",
        "getDocsPath",
        "customDocsPath",
        "shouldGenerateNextReleaseDocs",
        "versioning",
        "enabled",
        "name",
        "skipNextRelease",
        "readSidebar",
        "sidebars",
        "Object",
        "assign",
        "sidebarData",
        "items",
        "keys",
        "forEach",
        "sidebar",
        "categories",
        "sidebarItems",
        "category",
        "categoryItems",
        "categoryItem",
        "type",
        "ids",
        "subcategoryItem",
        "push",
        "id",
        "subcategory",
        "label",
        "order",
        "length",
        "i",
        "item",
        "previous",
        "next",
        "processMetadata",
        "file",
        "refDir",
        "result",
        "extractMetadata",
        "readFileSync",
        "language",
        "getLanguage",
        "metadata",
        "fieldName",
        "has",
        "console",
        "warn",
        "rawContent",
        "basename",
        "extname",
        "includes",
        "Error",
        "subDir",
        "getSubDir",
        "source",
        "title",
        "langPart",
        "translation",
        "useEnglishUrl",
        "versionPart",
        "version",
        "permalink",
        "localized_id",
        "next_id",
        "previous_id",
        "generateMetadataDocs",
        "e",
        "error",
        "exit",
        "enabledLanguages",
        "map",
        "tag",
        "metadatas",
        "defaultMetadatas",
        "docsDir",
        "join",
        "files",
        "sync",
        "extension",
        "res",
        "filter",
        "currentLanguage",
        "baseMetadata",
        "toString",
        "replace",
        "RegExp",
        "translatedDir",
        "versionData",
        "docData",
        "previous_title",
        "next_title",
        "writeFileSync",
        "__dirname",
        "JSON",
        "stringify",
        "generateMetadataBlog",
        "sort",
        "reverse",
        "getMetadata",
        "filePathDateArr",
        "split",
        "date",
        "Date",
        "seconds",
        "Math",
        "round",
        "getTime",
        "sortedMetadatas",
        "a",
        "b",
        "parseInt",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\n\nconst path = require('path');\nconst fs = require('fs');\nconst glob = require('glob');\nconst program = require('commander');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst blog = require('./blog.js');\n\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\nconst versionFallback = require('./versionFallback.js');\nconst utils = require('./utils.js');\n\nconst docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n\nconst SupportedHeaderFields = new Set([\n  'id',\n  'title',\n  'author',\n  'authorURL',\n  'authorFBID',\n  'sidebar_label',\n  'original_id',\n  'hide_title',\n  'layout',\n  'custom_edit_url',\n]);\n\nprogram.option('--skip-next-release').parse(process.argv);\n\nlet allSidebars;\nif (fs.existsSync(`${CWD}/sidebars.json`)) {\n  allSidebars = require(`${CWD}/sidebars.json`);\n} else {\n  allSidebars = {};\n}\n\n// Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(\n    env.versioning.enabled &&\n    program.name() === 'docusaurus-build' &&\n    program.skipNextRelease\n  );\n}\n\n// returns map from id to object containing sidebar ordering info\nfunction readSidebar(sidebars = {}) {\n  Object.assign(sidebars, versionFallback.sidebarData());\n\n  const items = {};\n\n  Object.keys(sidebars).forEach(sidebar => {\n    const categories = sidebars[sidebar];\n    const sidebarItems = [];\n\n    Object.keys(categories).forEach(category => {\n      const categoryItems = categories[category];\n      categoryItems.forEach(categoryItem => {\n        if (typeof categoryItem === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach(subcategoryItem => {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1,\n                });\n              });\n              return;\n            default:\n              return;\n          }\n        }\n\n        // Is a regular id value.\n        sidebarItems.push({\n          id: categoryItem,\n          category,\n          subcategory: null,\n          order: sidebarItems.length + 1,\n        });\n      });\n    });\n\n    for (let i = 0; i < sidebarItems.length; i++) {\n      const item = sidebarItems[i];\n      let previous = null;\n      let next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous,\n        next,\n        sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order,\n      };\n    }\n  });\n\n  return items;\n}\n\n// process the metadata for a document found in either 'docs' or 'translated_docs'\nfunction processMetadata(file, refDir) {\n  const result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const language = utils.getLanguage(file, refDir) || 'en';\n\n  const metadata = {};\n  Object.keys(result.metadata).forEach(fieldName => {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(`Header field \"${fieldName}\" in ${file} is not supported.`);\n    }\n  });\n\n  const rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.basename(file, path.extname(file));\n  }\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  }\n\n  // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n  const subDir = utils.getSubDir(file, refDir);\n  if (subDir) {\n    metadata.id = `${subDir}/${metadata.id}`;\n  }\n\n  // Example: `docs/projectA/test.md` source is `projectA/test.md`\n  metadata.source = subDir\n    ? `${subDir}/${path.basename(file)}`\n    : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  const langPart =\n    env.translation.enabled || siteConfig.useEnglishUrl ? `${language}/` : '';\n  let versionPart = '';\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = `${docsPart}${langPart}${versionPart}${\n    metadata.id\n  }.html`;\n\n  // change ids previous, next\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n\n  const items = readSidebar(allSidebars);\n  const id = metadata.localized_id;\n  const item = items[id];\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next =\n        (env.translation.enabled ? `${language}-` : '') + item.next;\n    }\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous =\n        (env.translation.enabled ? `${language}-` : '') + item.previous;\n    }\n  }\n\n  return {metadata, rawContent};\n}\n\n// process metadata for all docs and save into core/metadata.js\nfunction generateMetadataDocs() {\n  let order;\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  const enabledLanguages = env.translation\n    .enabledLanguages()\n    .map(language => language.tag);\n\n  const metadatas = {};\n  const defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    const docsDir = path.join(CWD, '../', getDocsPath());\n    let files = glob.sync(`${docsDir}/**`);\n    files.forEach(file => {\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        metadatas[metadata.id] = metadata;\n\n        // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n        enabledLanguages\n          .filter(currentLanguage => currentLanguage !== 'en')\n          .forEach(currentLanguage => {\n            const baseMetadata = Object.assign({}, metadata);\n            baseMetadata.id = baseMetadata.id\n              .toString()\n              .replace(/^en-/, `${currentLanguage}-`);\n            if (baseMetadata.permalink) {\n              baseMetadata.permalink = baseMetadata.permalink\n                .toString()\n                .replace(\n                  new RegExp(`^${docsPart}en/`),\n                  `${docsPart}${currentLanguage}/`,\n                );\n            }\n            if (baseMetadata.next) {\n              baseMetadata.next = baseMetadata.next\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            if (baseMetadata.previous) {\n              baseMetadata.previous = baseMetadata.previous\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            baseMetadata.language = currentLanguage;\n            defaultMetadatas[baseMetadata.id] = baseMetadata;\n          });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    });\n\n    // metadata for non-english docs\n    const translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(`${CWD}/translated_docs/**`);\n    files.forEach(file => {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, translatedDir);\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  }\n\n  // metadata for versioned docs\n  const versionData = versionFallback.docData();\n  versionData.forEach(metadata => {\n    const id = metadata.localized_id;\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.next =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].next;\n      }\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.previous =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].previous;\n      }\n    }\n    metadatas[metadata.id] = metadata;\n  });\n\n  // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n  Object.keys(metadatas).forEach(metadata => {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title =\n          metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title =\n          metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/metadata.js'),\n    `${'/**\\n' +\n    ' * @' +\n    'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '}${JSON.stringify(metadatas, null, 2)};\\n`,\n  );\n}\n\n// process metadata for blog posts and save into core/MetadataBlog.js\nfunction generateMetadataBlog() {\n  const metadatas = [];\n\n  const files = glob.sync(`${CWD}/blog/**/*.*`);\n  files\n    .sort()\n    .reverse()\n    .forEach(file => {\n      const extension = path.extname(file);\n      if (extension !== '.md' && extension !== '.markdown') {\n        return;\n      }\n      const metadata = blog.getMetadata(file);\n      // Extract, YYYY, MM, DD from the file name\n      const filePathDateArr = path\n        .basename(file)\n        .toString()\n        .split('-');\n      metadata.date = new Date(\n        `${filePathDateArr[0]}-${filePathDateArr[1]}-${\n          filePathDateArr[2]\n        }T06:00:00.000Z`,\n      );\n      // allow easier sorting of blog by providing seconds since epoch\n      metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n\n      metadatas.push(metadata);\n    });\n\n  const sortedMetadatas = metadatas.sort(\n    (a, b) => parseInt(b.seconds, 10) - parseInt(a.seconds, 10),\n  );\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/MetadataBlog.js'),\n    `${'/**\\n' +\n    ' * @' +\n    'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '}${JSON.stringify(sortedMetadatas, null, 2)};\\n`,\n  );\n}\n\nmodule.exports = {\n  getDocsPath,\n  readSidebar,\n  processMetadata,\n  generateMetadataDocs,\n  generateMetadataBlog,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"filename\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/metadataUtils.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ballchang/Projects/BallChang/BDocs/website",
      "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/metadataUtils.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/ballchang/Projects/BallChang/BDocs/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/metadataUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/metadataUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
        "sourceFileName": "metadataUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  var lines = content.split(/\\r?\\n/);\n\n  if (lines[0] !== '---') {\n    return {};\n  }\n\n  var i = 1;\n\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n')\n  };\n} // Extract markdown metadata header\n\n\nfunction extractMetadata(content) {\n  var metadata = {};\n  var both = splitHeader(content); // if no content returned, then that means there was no header, and both.header is the content\n\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {\n        metadata: metadata,\n        rawContent: content\n      };\n    }\n\n    return {\n      metadata: metadata,\n      rawContent: both.header\n    };\n  } // New line characters => to handle all operating systems.\n\n\n  var lines = both.header.split(/\\r?\\n/); // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n\n  for (var i = 0; i < lines.length - 1; ++i) {\n    var keyvalue = lines[i].split(':');\n    var key = keyvalue[0].trim();\n    var value = keyvalue.slice(1).join(':').trim();\n\n    try {\n      value = JSON.parse(value);\n    } catch (err) {// Ignore the error as it means it's not a JSON value.\n    }\n\n    metadata[key] = value;\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: both.content\n  };\n} // mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\n\n\nfunction mdToHtml(Metadata, siteConfig) {\n  var baseUrl = siteConfig.baseUrl,\n      docsUrl = siteConfig.docsUrl;\n  var result = {};\n  Object.keys(Metadata).forEach(function (id) {\n    var metadata = Metadata[id];\n\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n\n    var htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n    var baseDocsPart = \"\".concat(baseUrl).concat(docsUrl ? \"\".concat(docsUrl, \"/\") : '');\n    var i18nDocsRegex = new RegExp(\"^\".concat(baseDocsPart, \"en/\"));\n    var docsRegex = new RegExp(\"^\".concat(baseDocsPart));\n\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, \"\".concat(baseDocsPart, \"en/VERSION/\"));\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, \"\".concat(baseDocsPart, \"VERSION/\"));\n    }\n\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata: extractMetadata,\n  mdToHtml: mdToHtml\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ldGFkYXRhVXRpbHMuanMiXSwibmFtZXMiOlsic3BsaXRIZWFkZXIiLCJjb250ZW50IiwibGluZXMiLCJzcGxpdCIsImkiLCJsZW5ndGgiLCJoZWFkZXIiLCJzbGljZSIsImpvaW4iLCJleHRyYWN0TWV0YWRhdGEiLCJtZXRhZGF0YSIsImJvdGgiLCJyYXdDb250ZW50Iiwia2V5dmFsdWUiLCJrZXkiLCJ0cmltIiwidmFsdWUiLCJKU09OIiwicGFyc2UiLCJlcnIiLCJtZFRvSHRtbCIsIk1ldGFkYXRhIiwic2l0ZUNvbmZpZyIsImJhc2VVcmwiLCJkb2NzVXJsIiwicmVzdWx0IiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJpZCIsImxhbmd1YWdlIiwib3JpZ2luYWxfaWQiLCJodG1sTGluayIsInBlcm1hbGluayIsInJlcGxhY2UiLCJiYXNlRG9jc1BhcnQiLCJpMThuRG9jc1JlZ2V4IiwiUmVnRXhwIiwiZG9jc1JlZ2V4IiwidGVzdCIsInNvdXJjZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BO0FBQ0EsU0FBU0EsV0FBVCxDQUFxQkMsT0FBckIsRUFBOEI7QUFDNUI7QUFDQSxNQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQ0UsS0FBUixDQUFjLE9BQWQsQ0FBZDs7QUFDQSxNQUFJRCxLQUFLLENBQUMsQ0FBRCxDQUFMLEtBQWEsS0FBakIsRUFBd0I7QUFDdEIsV0FBTyxFQUFQO0FBQ0Q7O0FBQ0QsTUFBSUUsQ0FBQyxHQUFHLENBQVI7O0FBQ0EsU0FBT0EsQ0FBQyxHQUFHRixLQUFLLENBQUNHLE1BQU4sR0FBZSxDQUExQixFQUE2QixFQUFFRCxDQUEvQixFQUFrQztBQUNoQyxRQUFJRixLQUFLLENBQUNFLENBQUQsQ0FBTCxLQUFhLEtBQWpCLEVBQXdCO0FBQ3RCO0FBQ0Q7QUFDRjs7QUFDRCxTQUFPO0FBQ0xFLElBQUFBLE1BQU0sRUFBRUosS0FBSyxDQUFDSyxLQUFOLENBQVksQ0FBWixFQUFlSCxD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RyxTQUFTLEdBQUcsSUFBSUQsTUFBSixZQUFlRixZQUFmLEVBQWxCOztBQUNBLFFBQUlDLGFBQWEsQ0FBQ0csSUFBZCxDQUFtQlAsUUFBbkIsQ0FBSixFQUFrQztBQUNoQ0EsTUFBQUEsUUFBUSxHQUFHQSxRQUFRLENBQUNFLE9BQVQsQ0FBaUJFLGFBQWpCLFlBQW1DRCxZQUFuQyxpQkFBWDtBQUNELEtBRkQsTUFFTztBQUNMSCxNQUFBQSxRQUFRLEdBQUdBLFFBQVEsQ0FBQ0UsT0FBVCxDQUFpQkksU0FBakIsWUFBK0JILFlBQS9CLGNBQVg7QUFDRDs7QUFDRFYsSUFBQUEsTUFBTSxDQUFDZixRQUFRLENBQUM4QixNQUFWLENBQU4sR0FBMEJSLFFBQTFCO0FBQ0QsR0FqQkQ7QUFrQkEsU0FBT1AsTUFBUDtBQUNEOztBQUVEZ0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZqQyxFQUFBQSxlQUFlLEVBQWZBLGVBRGU7QUFFZlcsRUFBQUEsUUFBUSxFQUFSQTtBQUZlLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2JhbGxjaGFuZy9Qcm9qZWN0cy9CYWxsQ2hhbmcvQkRvY3Mvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vLyBzcGxpdCBtYXJrZG93biBoZWFkZXJcbmZ1bmN0aW9uIHNwbGl0SGVhZGVyKGNvbnRlbnQpIHtcbiAgLy8gTmV3IGxpbmUgY2hhcmFjdGVycyBuZWVkIHRvIGhhbmRsZSBhbGwgb3BlcmF0aW5nIHN5c3RlbXMuXG4gIGNvbnN0IGxpbmVzID0gY29udGVudC5zcGxpdCgvXFxyP1xcbi8pO1xuICBpZiAobGluZXNbMF0gIT09ICctLS0nKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9XG4gIGxldCBpID0gMTtcbiAgZm9yICg7IGkgPCBsaW5lcy5sZW5ndGggLSAxOyArK2kpIHtcbiAgICBpZiAobGluZXNbaV0gPT09ICctLS0nKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBoZWFkZXI6IGxpbmVzLnNsaWNlKDEsIGkgKyAxKS5qb2luKCdcXG4nKSxcbiAgICBjb250ZW50OiBsaW5lcy5zbGljZShpICsgMSkuam9pbignXFxuJyksXG4gIH07XG59XG5cbi8vIEV4dHJhY3QgbWFya2Rvd24gbWV0YWRhdGEgaGVhZGVyXG5mdW5jdGlvbiBleHRyYWN0TWV0YWRhdGEoY29udGVudCkge1xuICBjb25zdCBtZXRhZGF0YSA9IHt9O1xuICBjb25zdCBib3RoID0gc3BsaXRIZWFkZXIoY29udGVudCk7XG5cbiAgLy8gaWYgbm8gY29udGVudCByZXR1cm5lZCwgdGhlbiB0aGF0IG1lYW5zIHRoZXJlIHdhcyBubyBoZWFkZXIsIGFuZCBib3RoLmhlYWRlciBpcyB0aGUgY29udGVudFxuICBpZiAoIWJvdGguY29udGVudCkge1xuICAgIGlmICghYm90aC5oZWFkZXIpIHtcbiAgICAgIC8vIGlmIG5vIGJvdGggcmV0dXJuZWQsIHRoZW4gdGhhdCBtZWFucyB0aGVyZSB3YXMgbm8gaGVhZGVyIGFuZCBubyBjb250ZW50ID0+IHdlIHJldHVybiB0aGUgY3VycmVudCBjb250ZW50IG9mIHRoZSBmaWxlXG4gICAgICByZXR1cm4ge21ldGFkYXRhLCByYXdDb250ZW50OiBjb250ZW50fTtcbiAgICB9XG4gICAgcmV0dXJuIHttZXRhZGF0YSwgcmF3Q29udGVudDogYm90aC5oZWFkZXJ9O1xuICB9XG5cbiAgLy8gTmV3IGxpbmUgY2hhcmFjdGVycyA9PiB0byBoYW5kbGUgYWxsIG9wZXJhdGluZyBzeXN0ZW1zLlxuICBjb25zdCBsaW5lcyA9IGJvdGguaGVhZGVyLnNwbGl0KC9cXHI/XFxuLyk7XG5cbiAgLy8gTG9vcCB0aGF0IGFkZCB0byBtZXRhZGF0YSB0aGUgY3VycmVudCBjb250ZW50IG9mIHRoZSBmaWVsZHMgb2YgdGhlIGhlYWRlclxuICAvLyBMaWtlIHRoZSBmb3JtYXQ6XG4gIC8vIGlkOlxuICAvLyB0aXRsZTpcbiAgLy8gb3JpZ2luYWxfaWQ6XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGluZXMubGVuZ3RoIC0gMTsgKytpKSB7XG4gICAgY29uc3Qga2V5dmFsdWUgPSBsaW5lc1tpXS5zcGxpdCgnOicpO1xuICAgIGNvbnN0IGtleSA9IGtleXZhbHVlWzBdLnRyaW0oKTtcbiAgICBsZXQgdmFsdWUgPSBrZXl2YWx1ZVxuICAgICAgLnNsaWNlKDEpXG4gICAgICAuam9pbignOicpXG4gICAgICAudHJpbSgpO1xuICAgIHRyeSB7XG4gICAgICB2YWx1ZSA9IEpTT04ucGFyc2UodmFsdWUpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgLy8gSWdub3JlIHRoZSBlcnJvciBhcyBpdCBtZWFucyBpdCdzIG5vdCBhIEpTT04gdmFsdWUuXG4gICAgfVxuICAgIG1ldGFkYXRhW2tleV0gPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4ge21ldGFkYXRhLCByYXdDb250ZW50OiBib3RoLmNvbnRlbnR9O1xufVxuXG4vLyBtZFRvSHRtbCBpcyBhIG1hcCBmcm9tIGEgbWFya2Rvd24gZmlsZSBuYW1lIHRvIGl0cyBodG1sIGxpbmssIHVzZWQgdG9cbi8vIGNoYW5nZSByZWxhdGl2ZSBtYXJrZG93biBsaW5rcyB0aGF0IHdvcmsgb24gR2l0SHViIGludG8gYWN0dWFsIHNpdGUgbGlua3NcbmZ1bmN0aW9uIG1kVG9IdG1sKE1ldGFkYXRhLCBzaXRlQ29uZmlnKSB7XG4gIGNvbnN0IHtiYXNlVXJsLCBkb2NzVXJsfSA9IHNpdGVDb25maWc7XG4gIGNvbnN0IHJlc3VsdCA9IHt9O1xuICBPYmplY3Qua2V5cyhNZXRhZGF0YSkuZm9yRWFjaChpZCA9PiB7XG4gICAgY29uc3QgbWV0YWRhdGEgPSBNZXRhZGF0YVtpZF07XG4gICAgaWYgKG1ldGFkYXRhLmxhbmd1YWdlICE9PSAnZW4nIHx8IG1ldGFkYXRhLm9yaWdpbmFsX2lkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCBodG1sTGluayA9IGJhc2VVcmwgKyBtZXRhZGF0YS5wZXJtYWxpbmsucmVwbGFjZSgnL25leHQvJywgJy8nKTtcblxuICAgIGNvbnN0IGJhc2VEb2NzUGFydCA9IGAke2Jhc2VVcmx9JHtkb2NzVXJsID8gYCR7ZG9jc1VybH0vYCA6ICcnfWA7XG5cbiAgICBjb25zdCBpMThuRG9jc1JlZ2V4ID0gbmV3IFJlZ0V4cChgXiR7YmFzZURvY3NQYXJ0fWVuL2ApO1xuICAgIGNvbnN0IGRvY3NSZWdleCA9IG5ldyBSZWdFeHAoYF4ke2Jhc2VEb2NzUGFydH1gKTtcbiAgICBpZiAoaTE4bkRvY3NSZWdleC50ZXN0KGh0bWxMaW5rKSkge1xuICAgICAgaHRtbExpbmsgPSBodG1sTGluay5yZXBsYWNlKGkxOG5Eb2NzUmVnZXgsIGAke2Jhc2VEb2NzUGFydH1lbi9WRVJTSU9OL2ApO1xuICAgIH0gZWxzZSB7XG4gICAgICBodG1sTGluayA9IGh0bWxMaW5rLnJlcGxhY2UoZG9jc1JlZ2V4LCBgJHtiYXNlRG9jc1BhcnR9VkVSU0lPTi9gKTtcbiAgICB9XG4gICAgcmVzdWx0W21ldGFkYXRhLnNvdXJjZV0gPSBodG1sTGluaztcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBleHRyYWN0TWV0YWRhdGEsXG4gIG1kVG9IdG1sLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "metadataUtils.js"
      ],
      "names": [
        "splitHeader",
        "content",
        "lines",
        "split",
        "i",
        "length",
        "header",
        "slice",
        "join",
        "extractMetadata",
        "metadata",
        "both",
        "rawContent",
        "keyvalue",
        "key",
        "trim",
        "value",
        "JSON",
        "parse",
        "err",
        "mdToHtml",
        "Metadata",
        "siteConfig",
        "baseUrl",
        "docsUrl",
        "result",
        "Object",
        "keys",
        "forEach",
        "id",
        "language",
        "original_id",
        "htmlLink",
        "permalink",
        "replace",
        "baseDocsPart",
        "i18nDocsRegex",
        "RegExp",
        "docsRegex",
        "test",
        "source",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  const lines = content.split(/\\r?\\n/);\n  if (lines[0] !== '---') {\n    return {};\n  }\n  let i = 1;\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n'),\n  };\n}\n\n// Extract markdown metadata header\nfunction extractMetadata(content) {\n  const metadata = {};\n  const both = splitHeader(content);\n\n  // if no content returned, then that means there was no header, and both.header is the content\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {metadata, rawContent: content};\n    }\n    return {metadata, rawContent: both.header};\n  }\n\n  // New line characters => to handle all operating systems.\n  const lines = both.header.split(/\\r?\\n/);\n\n  // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n  for (let i = 0; i < lines.length - 1; ++i) {\n    const keyvalue = lines[i].split(':');\n    const key = keyvalue[0].trim();\n    let value = keyvalue\n      .slice(1)\n      .join(':')\n      .trim();\n    try {\n      value = JSON.parse(value);\n    } catch (err) {\n      // Ignore the error as it means it's not a JSON value.\n    }\n    metadata[key] = value;\n  }\n  return {metadata, rawContent: both.content};\n}\n\n// mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\nfunction mdToHtml(Metadata, siteConfig) {\n  const {baseUrl, docsUrl} = siteConfig;\n  const result = {};\n  Object.keys(Metadata).forEach(id => {\n    const metadata = Metadata[id];\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n    let htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n\n    const baseDocsPart = `${baseUrl}${docsUrl ? `${docsUrl}/` : ''}`;\n\n    const i18nDocsRegex = new RegExp(`^${baseDocsPart}en/`);\n    const docsRegex = new RegExp(`^${baseDocsPart}`);\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, `${baseDocsPart}en/VERSION/`);\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, `${baseDocsPart}VERSION/`);\n    }\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata,\n  mdToHtml,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"filename\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/blog.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ballchang/Projects/BallChang/BDocs/website",
      "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/blog.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/ballchang/Projects/BallChang/BDocs/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/blog.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/blog.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
        "sourceFileName": "blog.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar React = require('react');\n\nvar path = require('path');\n\nvar fs = require('fs-extra');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar _require = require('./utils.js'),\n    replaceAssetsLink = _require.replaceAssetsLink;\n\nvar _require2 = require('./renderUtils'),\n    renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  return url.replace(/\\/index.html$/, '.md').replace(/\\.html$/, '.md').replace(new RegExp('/', 'g'), '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n\n  return path.basename(file).replace('-', '/').replace('-', '/').replace('-', '/').replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, config) {\n  var BlogPageLayout = require('../core/BlogPageLayout.js');\n\n  var blogPages = {};\n  var perPage = 10;\n\n  for (var page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    var metadata = {\n      page: page,\n      perPage: perPage\n    };\n    var blogPageComp = React.createElement(BlogPageLayout, {\n      metadata: metadata,\n      language: \"en\",\n      config: config\n    });\n    var str = renderToStaticMarkupWithDoctype(blogPageComp);\n    var pagePath = \"\".concat(page > 0 ? \"page\".concat(page + 1) : '', \"/index.html\");\n    blogPages[pagePath] = str;\n  }\n\n  return blogPages;\n}\n\nfunction getMetadata(file) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, {\n    encoding: 'utf8'\n  }));\n  var metadata = Object.assign({\n    path: fileToUrl(file),\n    content: replaceAssetsLink(result.rawContent, \"\".concat(siteConfig.baseUrl, \"blog\"))\n  }, result.metadata);\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, config) {\n  var metadata = getMetadata(file);\n\n  if (!metadata) {\n    return null;\n  }\n\n  var BlogPostLayout = require('../core/BlogPostLayout.js');\n\n  var blogPostComp = React.createElement(BlogPostLayout, {\n    metadata: metadata,\n    language: \"en\",\n    config: config\n  }, metadata.content);\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl: fileToUrl,\n  getMetadata: getMetadata,\n  getPagesMarkup: getPagesMarkup,\n  getPostMarkup: getPostMarkup,\n  urlToSource: urlToSource\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "blog.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "React",
        "require",
        "path",
        "fs",
        "metadataUtils",
        "replaceAssetsLink",
        "renderToStaticMarkupWithDoctype",
        "loadConfig",
        "siteConfig",
        "urlToSource",
        "url",
        "replace",
        "RegExp",
        "fileToUrl",
        "file",
        "existsSync",
        "basename",
        "getPagesMarkup",
        "numOfBlog",
        "config",
        "BlogPageLayout",
        "blogPages",
        "perPage",
        "page",
        "Math",
        "ceil",
        "metadata",
        "blogPageComp",
        "str",
        "pagePath",
        "getMetadata",
        "result",
        "extractMetadata",
        "readFileSync",
        "encoding",
        "Object",
        "assign",
        "content",
        "rawContent",
        "baseUrl",
        "id",
        "title",
        "getPostMarkup",
        "BlogPostLayout",
        "blogPostComp",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAMA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMG,aAAa,GAAGH,OAAO,CAAC,iBAAD,CAA7B;;eAC4BA,OAAO,CAAC,YAAD,C;IAA5BI,iB,YAAAA,iB;;gBACmCJ,OAAO,CAAC,eAAD,C;IAA1CK,+B,aAAAA,+B;;AACP,IAAMC,UAAU,GAAGN,OAAO,CAAC,UAAD,CAA1B;;AAEA,IAAMO,UAAU,GAAGD,UAAU,WAAIV,GAAJ,oBAA7B;;AAEA,SAASY,WAAT,CAAqBC,GAArB,EAA0B;AACxB,MAAI,CAACA,GAAD,IAAQ,OAAOA,GAAP,KAAe,QAA3B,EAAqC;AACnC,WAAO,IAAP;AACD;;AACD,SAAOA,GAAG,CACPC,OADI,CACI,eADJ,EACqB,KADrB,EAEJA,OAFI,CAEI,SAFJ,EAEe,KAFf,EAGJA,OAHI,CAGI,IAAIC,MAAJ,CAAW,GAAX,EAAgB,GAAhB,CAHJ,EAG0B,GAH1B,CAAP;AAID;;AAED,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,MAAI,CAACA,IAAD,IAAS,CAACX,EAAE,CAACY,UAAH,CAAcD,IAAd,CAAV,IAAiC,OAAOA,IAAP,KAAgB,QAArD,EAA+D;AAC7D,WAAO,IAAP;AACD;;AACD,SAAOZ,IAAI,CACRc,QADI,CACKF,IADL,EAEJH,OAFI,CAEI,GAFJ,EAES,GAFT,EAGJA,OAHI,CAGI,GAHJ,EAGS,GAHT,EAIJA,OAJI,CAII,GAJJ,EAIS,GAJT,EAKJA,OALI,CAKI,OALJ,EAKa,OALb,CAAP;AAMD;;AAED,SAASM,cAAT,CAAwBC,SAAxB,EAAmCC,MAAnC,EAA2C;AACzC,MAAMC,cAAc,GAAGnB,OAAO,CAAC,2BAAD,CAA9B;;AACA,MAAMoB,SAAS,GAAG,EAAlB;AACA,MAAMC,OAAO,GAAG,EAAhB;;AACA,OAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGC,IAAI,CAACC,IAAL,CAAUP,SAAS,GAAGI,OAAtB,CAA1B,EAA0DC,IAAI,EAA9D,EAAkE;AAChE,QAAMG,QAAQ,GAAG;AAACH,MAAAA,IAAI,EAAJA,IAAD;AAAOD,MAAAA,OAAO,EAAPA;AAAP,KAAjB;AACA,QAAMK,YAAY,GAChB,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAED,QAA1B;AAAoC,MAAA,QAAQ,EAAC,IAA7C;AAAkD,MAAA,MAAM,EAAEP;AAA1D,MADF;AAGA,QAAMS,GAAG,GAAGtB,+BAA+B,CAACqB,YAAD,CAA3C;AACA,QAAME,QAAQ,aAAMN,IAAI,GAAG,CAAP,iBAAkBA,IAAI,GAAG,CAAzB,IAA+B,EAArC,gBAAd;AACAF,IAAAA,SAAS,CAACQ,QAAD,CAAT,GAAsBD,GAAtB;AACD;;AACD,SAAOP,SAAP;AACD;;AAED,SAASS,WAAT,CAAqBhB,IAArB,EAA2B;AACzB,MAAI,CAACA,IAAD,IAAS,CAACX,EAAE,CAACY,UAAH,CAAcD,IAAd,CAAd,EAAmC;AACjC,WAAO,IAAP;AACD;;AACD,MAAMiB,MAAM,GAAG3B,aAAa,CAAC4B,eAAd,CACb7B,EAAE,CAAC8B,YAAH,CAAgBnB,IAAhB,EAAsB;AAACoB,IAAAA,QAAQ,EAAE;AAAX,GAAtB,CADa,CAAf;AAGA,MAAMR,QAAQ,GAAGS,MAAM,CAACC,MAAP,CACf;AACElC,IAAAA,IAAI,EAAEW,SAAS,CAACC,IAAD,CADjB;AAEEuB,IAAAA,OAAO,EAAEhC,iBAAiB,CACxB0B,MAAM,CAACO,UADiB,YAErB9B,UAAU,CAAC+B,OAFU;AAF5B,GADe,EAQfR,MAAM,CAACL,QARQ,CAAjB;AAUAA,EAAAA,QAAQ,CAACc,EAAT,GAAcd,QAAQ,CAACe,KAAvB;AACA,SAAOf,QAAP;AACD;;AAED,SAASgB,aAAT,CAAuB5B,IAAvB,EAA6BK,MAA7B,EAAqC;AACnC,MAAMO,QAAQ,GAAGI,WAAW,CAAChB,IAAD,CAA5B;;AACA,MAAI,CAACY,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AACD,MAAMiB,cAAc,GAAG1C,OAAO,CAAC,2BAAD,CAA9B;;AACA,MAAM2C,YAAY,GAChB,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAElB,QAA1B;AAAoC,IAAA,QAAQ,EAAC,IAA7C;AAAkD,IAAA,MAAM,EAAEP;AAA1D,KACGO,QAAQ,CAACW,OADZ,CADF;AAKA,SAAO/B,+BAA+B,CAACsC,YAAD,CAAtC;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACfjC,EAAAA,SAAS,EAATA,SADe;AAEfiB,EAAAA,WAAW,EAAXA,WAFe;AAGfb,EAAAA,cAAc,EAAdA,cAHe;AAIfyB,EAAAA,aAAa,EAAbA,aAJe;AAKfjC,EAAAA,WAAW,EAAXA;AALe,CAAjB",
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst CWD = process.cwd();\nconst React = require('react');\nconst path = require('path');\nconst fs = require('fs-extra');\nconst metadataUtils = require('./metadataUtils');\nconst {replaceAssetsLink} = require('./utils.js');\nconst {renderToStaticMarkupWithDoctype} = require('./renderUtils');\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n  return url\n    .replace(/\\/index.html$/, '.md')\n    .replace(/\\.html$/, '.md')\n    .replace(new RegExp('/', 'g'), '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n  return path\n    .basename(file)\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, config) {\n  const BlogPageLayout = require('../core/BlogPageLayout.js');\n  const blogPages = {};\n  const perPage = 10;\n  for (let page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    const metadata = {page, perPage};\n    const blogPageComp = (\n      <BlogPageLayout metadata={metadata} language=\"en\" config={config} />\n    );\n    const str = renderToStaticMarkupWithDoctype(blogPageComp);\n    const pagePath = `${page > 0 ? `page${page + 1}` : ''}/index.html`;\n    blogPages[pagePath] = str;\n  }\n  return blogPages;\n}\n\nfunction getMetadata(file) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n  const result = metadataUtils.extractMetadata(\n    fs.readFileSync(file, {encoding: 'utf8'}),\n  );\n  const metadata = Object.assign(\n    {\n      path: fileToUrl(file),\n      content: replaceAssetsLink(\n        result.rawContent,\n        `${siteConfig.baseUrl}blog`,\n      ),\n    },\n    result.metadata,\n  );\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, config) {\n  const metadata = getMetadata(file);\n  if (!metadata) {\n    return null;\n  }\n  const BlogPostLayout = require('../core/BlogPostLayout.js');\n  const blogPostComp = (\n    <BlogPostLayout metadata={metadata} language=\"en\" config={config}>\n      {metadata.content}\n    </BlogPostLayout>\n  );\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl,\n  getMetadata,\n  getPagesMarkup,\n  getPostMarkup,\n  urlToSource,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"filename\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/utils.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ballchang/Projects/BallChang/BDocs/website",
      "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/utils.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/ballchang/Projects/BallChang/BDocs/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/utils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar cssnano = require('cssnano');\n\nvar autoprefixer = require('autoprefixer');\n\nvar postcss = require('postcss');\n\nvar path = require('path');\n\nvar escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  var subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  var separator = escapeStringRegexp(path.sep);\n  var baseDir = escapeStringRegexp(path.basename(refDir));\n  var regexSubFolder = new RegExp(\"\".concat(baseDir).concat(separator, \"(.*?)\").concat(separator, \".*\"));\n  var match = regexSubFolder.exec(file); // Avoid misinterpreting subdirectory as language\n\n  var env = require('./env.js');\n\n  if (match && env.translation.enabled) {\n    var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n      return language.tag;\n    });\n\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n\n  for (var i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano.process(cssContent, {\n    preset: 'default',\n    zindex: false\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer]).process(cssContent, {\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  var fencedBlock = false;\n  var lines = oldContent.split('\\n').map(function (line) {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n\n    return fencedBlock ? line : line.replace(/\\]\\(assets\\//g, \"](\".concat(location, \"/assets/\"));\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir: getSubDir,\n  getLanguage: getLanguage,\n  isSeparateCss: isSeparateCss,\n  minifyCss: minifyCss,\n  autoPrefixCss: autoPrefixCss,\n  replaceAssetsLink: replaceAssetsLink\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImNzc25hbm8iLCJyZXF1aXJlIiwiYXV0b3ByZWZpeGVyIiwicG9zdGNzcyIsInBhdGgiLCJlc2NhcGVTdHJpbmdSZWdleHAiLCJnZXRTdWJEaXIiLCJmaWxlIiwicmVmRGlyIiwic3ViRGlyIiwiZGlybmFtZSIsInJlbGF0aXZlIiwicmVwbGFjZSIsImluY2x1ZGVzIiwiZ2V0TGFuZ3VhZ2UiLCJzZXBhcmF0b3IiLCJzZXAiLCJiYXNlRGlyIiwiYmFzZW5hbWUiLCJyZWdleFN1YkZvbGRlciIsIlJlZ0V4cCIsIm1hdGNoIiwiZXhlYyIsImVudiIsInRyYW5zbGF0aW9uIiwiZW5hYmxlZCIsImVuYWJsZWRMYW5ndWFnZXMiLCJtYXAiLCJsYW5ndWFnZSIsInRhZyIsImluZGV4T2YiLCJpc1NlcGFyYXRlQ3NzIiwic2VwYXJhdGVEaXJzIiwiaSIsImxlbmd0aCIsIm1pbmlmeUNzcyIsImNzc0NvbnRlbnQiLCJwcm9jZXNzIiwicHJlc2V0IiwiemluZGV4IiwidGhlbiIsInJlc3VsdCIsImNzcyIsImF1dG9QcmVmaXhDc3MiLCJmcm9tIiwidW5kZWZpbmVkIiwicmVwbGFjZUFzc2V0c0xpbmsiLCJvbGRDb250ZW50IiwibG9jYXRpb24iLCJmZW5jZWRCbG9jayIsImxpbmVzIiwic3BsaXQiLCJsaW5lIiwidHJpbSIsInN0YXJ0c1dpdGgiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBTUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxZQUFZLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQTVCOztBQUNBLElBQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSSxrQkFBa0IsR0FBR0osT0FBTyxDQUFDLHNCQUFELENBQWxD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S0FBbEI7QUFDQSxNQUFNQyxLQUFLLEdBQUdILFVBQVUsQ0FBQ0ksS0FBWCxDQUFpQixJQUFqQixFQUF1QnhCLEdBQXZCLENBQTJCLFVBQUF5QixJQUFJLEVBQUk7QUFDL0MsUUFBSUEsSUFBSSxDQUFDQyxJQUFMLEdBQVlDLFVBQVosQ0FBdUIsS0FBdkIsQ0FBSixFQUFtQztBQUNqQ0wsTUFBQUEsV0FBVyxHQUFHLENBQUNBLFdBQWY7QUFDRDs7QUFDRCxXQUFPQSxXQUFXLEdBQ2RHLElBRGMsR0FFZEEsSUFBSSxDQUFDeEMsT0FBTCxDQUFhLGVBQWIsY0FBbUNvQyxRQUFuQyxjQUZKO0FBR0QsR0FQYSxDQUFkO0FBUUEsU0FBT0UsS0FBSyxDQUFDSyxJQUFOLENBQVcsSUFBWCxDQUFQO0FBQ0Q7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmbkQsRUFBQUEsU0FBUyxFQUFUQSxTQURlO0FBRWZRLEVBQUFBLFdBQVcsRUFBWEEsV0FGZTtBQUdmaUIsRUFBQUEsYUFBYSxFQUFiQSxhQUhlO0FBSWZJLEVBQUFBLFNBQVMsRUFBVEEsU0FKZTtBQUtmUSxFQUFBQSxhQUFhLEVBQWJBLGFBTGU7QUFNZkcsRUFBQUEsaUJBQWlCLEVBQWpCQTtBQU5lLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2JhbGxjaGFuZy9Qcm9qZWN0cy9CYWxsQ2hhbmcvQkRvY3Mvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuY29uc3QgY3NzbmFubyA9IHJlcXVpcmUoJ2Nzc25hbm8nKTtcbmNvbnN0IGF1dG9wcmVmaXhlciA9IHJlcXVpcmUoJ2F1dG9wcmVmaXhlcicpO1xuY29uc3QgcG9zdGNzcyA9IHJlcXVpcmUoJ3Bvc3Rjc3MnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBlc2NhcGVTdHJpbmdSZWdleHAgPSByZXF1aXJlKCdlc2NhcGUtc3RyaW5nLXJlZ2V4cCcpO1xuXG5mdW5jdGlvbiBnZXRTdWJEaXIoZmlsZSwgcmVmRGlyKSB7XG4gIGNvbnN0IHN1YkRpciA9IHBhdGguZGlybmFtZShwYXRoLnJlbGF0aXZlKHJlZkRpciwgZmlsZSkpLnJlcGxhY2UoL1xcXFwvZywgJy8nKTtcbiAgcmV0dXJuIHN1YkRpciAhPT0gJy4nICYmICFzdWJEaXIuaW5jbHVkZXMoJy4uJykgPyBzdWJEaXIgOiBudWxsO1xufVxuXG5mdW5jdGlvbiBnZXRMYW5ndWFnZShmaWxlLCByZWZEaXIpIHtcbiAgY29uc3Qgc2VwYXJhdG9yID0gZXNjYXBlU3RyaW5nUmVnZXhwKHBhdGguc2VwKTtcbiAgY29uc3QgYmFzZURpciA9IGVzY2FwZVN0cmluZ1JlZ2V4cChwYXRoLmJhc2VuYW1lKHJlZkRpcikpO1xuICBjb25zdCByZWdleFN1YkZvbGRlciA9IG5ldyBSZWdFeHAoXG4gICAgYCR7YmFzZURpcn0ke3NlcGFyYXRvcn0oLio/KSR7c2VwYXJhdG9yfS4qYCxcbiAgKTtcbiAgY29uc3QgbWF0Y2ggPSByZWdleFN1YkZvbGRlci5leGVjKGZpbGUpO1xuXG4gIC8vIEF2b2lkIG1pc2ludGVycHJldGluZyBzdWJkaXJlY3RvcnkgYXMgbGFuZ3VhZ2VcbiAgY29uc3QgZW52ID0gcmVxdWlyZSgnLi9lbnYuanMnKTtcbiAgaWYgKG1hdGNoICYmIGVudi50cmFuc2xhdGlvbi5lbmFibGVkKSB7XG4gICAgY29uc3QgZW5hYmxlZExhbmd1YWdlcyA9IGVudi50cmFuc2xhdGlvblxuICAgICAgLmVuYWJsZWRMYW5ndWFnZXMoKVxuICAgICAgLm1hcChsYW5ndWFnZSA9PiBsYW5ndWFnZS50YWcpO1xuICAgIGlmIChlbmFibGVkTGFuZ3VhZ2VzLmluZGV4T2YobWF0Y2hbMV0pICE9PSAtMSkge1xuICAgICAgcmV0dXJuIG1hdGNoWzFdO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNTZXBhcmF0ZUNzcyhmaWxlLCBzZXBhcmF0ZURpcnMpIHtcbiAgaWYgKCFzZXBhcmF0ZURpcnMpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZXBhcmF0ZURpcnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoZmlsZS5pbmNsdWRlcyhzZXBhcmF0ZURpcnNbaV0pKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBtaW5pZnlDc3MoY3NzQ29udGVudCkge1xuICByZXR1cm4gY3NzbmFub1xuICAgIC5wcm9jZXNzKGNzc0NvbnRlbnQsIHtcbiAgICAgIHByZXNldDogJ2RlZmF1bHQnLFxuICAgICAgemluZGV4OiBmYWxzZSxcbiAgICB9KVxuICAgIC50aGVuKHJlc3VsdCA9PiByZXN1bHQuY3NzKTtcbn1cblxuZnVuY3Rpb24gYXV0b1ByZWZpeENzcyhjc3NDb250ZW50KSB7XG4gIHJldHVybiBwb3N0Y3NzKFthdXRvcHJlZml4ZXJdKVxuICAgIC5wcm9jZXNzKGNzc0NvbnRlbnQsIHtcbiAgICAgIGZyb206IHVuZGVmaW5lZCxcbiAgICB9KVxuICAgIC50aGVuKHJlc3VsdCA9PiByZXN1bHQuY3NzKTtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUFzc2V0c0xpbmsob2xkQ29udGVudCwgbG9jYXRpb24pIHtcbiAgbGV0IGZlbmNlZEJsb2NrID0gZmFsc2U7XG4gIGNvbnN0IGxpbmVzID0gb2xkQ29udGVudC5zcGxpdCgnXFxuJykubWFwKGxpbmUgPT4ge1xuICAgIGlmIChsaW5lLnRyaW0oKS5zdGFydHNXaXRoKCdgYGAnKSkge1xuICAgICAgZmVuY2VkQmxvY2sgPSAhZmVuY2VkQmxvY2s7XG4gICAgfVxuICAgIHJldHVybiBmZW5jZWRCbG9ja1xuICAgICAgPyBsaW5lXG4gICAgICA6IGxpbmUucmVwbGFjZSgvXFxdXFwoYXNzZXRzXFwvL2csIGBdKCR7bG9jYXRpb259L2Fzc2V0cy9gKTtcbiAgfSk7XG4gIHJldHVybiBsaW5lcy5qb2luKCdcXG4nKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldFN1YkRpcixcbiAgZ2V0TGFuZ3VhZ2UsXG4gIGlzU2VwYXJhdGVDc3MsXG4gIG1pbmlmeUNzcyxcbiAgYXV0b1ByZWZpeENzcyxcbiAgcmVwbGFjZUFzc2V0c0xpbmssXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "cssnano",
        "require",
        "autoprefixer",
        "postcss",
        "path",
        "escapeStringRegexp",
        "getSubDir",
        "file",
        "refDir",
        "subDir",
        "dirname",
        "relative",
        "replace",
        "includes",
        "getLanguage",
        "separator",
        "sep",
        "baseDir",
        "basename",
        "regexSubFolder",
        "RegExp",
        "match",
        "exec",
        "env",
        "translation",
        "enabled",
        "enabledLanguages",
        "map",
        "language",
        "tag",
        "indexOf",
        "isSeparateCss",
        "separateDirs",
        "i",
        "length",
        "minifyCss",
        "cssContent",
        "process",
        "preset",
        "zindex",
        "then",
        "result",
        "css",
        "autoPrefixCss",
        "from",
        "undefined",
        "replaceAssetsLink",
        "oldContent",
        "location",
        "fencedBlock",
        "lines",
        "split",
        "line",
        "trim",
        "startsWith",
        "join",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst cssnano = require('cssnano');\nconst autoprefixer = require('autoprefixer');\nconst postcss = require('postcss');\nconst path = require('path');\nconst escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  const subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  const separator = escapeStringRegexp(path.sep);\n  const baseDir = escapeStringRegexp(path.basename(refDir));\n  const regexSubFolder = new RegExp(\n    `${baseDir}${separator}(.*?)${separator}.*`,\n  );\n  const match = regexSubFolder.exec(file);\n\n  // Avoid misinterpreting subdirectory as language\n  const env = require('./env.js');\n  if (match && env.translation.enabled) {\n    const enabledLanguages = env.translation\n      .enabledLanguages()\n      .map(language => language.tag);\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n  for (let i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano\n    .process(cssContent, {\n      preset: 'default',\n      zindex: false,\n    })\n    .then(result => result.css);\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer])\n    .process(cssContent, {\n      from: undefined,\n    })\n    .then(result => result.css);\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  let fencedBlock = false;\n  const lines = oldContent.split('\\n').map(line => {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n    return fencedBlock\n      ? line\n      : line.replace(/\\]\\(assets\\//g, `](${location}/assets/`);\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir,\n  getLanguage,\n  isSeparateCss,\n  minifyCss,\n  autoPrefixCss,\n  replaceAssetsLink,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"filename\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/renderUtils.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ballchang/Projects/BallChang/BDocs/website",
      "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/renderUtils.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/ballchang/Projects/BallChang/BDocs/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/renderUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/renderUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
        "sourceFileName": "renderUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar renderToStaticMarkup = require('react-dom/server').renderToStaticMarkup;\n/**\n * Custom function that wraps renderToStaticMarkup so that we can inject\n * doctype before React renders the contents. All instance of full-page\n * rendering within Docusaurus should use this function instead.\n */\n\n\nfunction renderToStaticMarkupWithDoctype() {\n  return \"<!DOCTYPE html>\".concat(renderToStaticMarkup.apply(void 0, arguments));\n}\n\nmodule.exports = {\n  renderToStaticMarkupWithDoctype: renderToStaticMarkupWithDoctype\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbmRlclV0aWxzLmpzIl0sIm5hbWVzIjpbInJlbmRlclRvU3RhdGljTWFya3VwIiwicmVxdWlyZSIsInJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxvQkFBb0IsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQVAsQ0FBNEJELG9CQUF6RDtBQUVBOzs7Ozs7O0FBS0EsU0FBU0UsK0JBQVQsR0FBa0Q7QUFDaEQsa0NBQXlCRixvQkFBb0IsTUFBcEIsbUJBQXpCO0FBQ0Q7O0FBRURHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmRixFQUFBQSwrQkFBK0IsRUFBL0JBO0FBRGUsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYmFsbGNoYW5nL1Byb2plY3RzL0JhbGxDaGFuZy9CRG9jcy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IHJlbmRlclRvU3RhdGljTWFya3VwID0gcmVxdWlyZSgncmVhY3QtZG9tL3NlcnZlcicpLnJlbmRlclRvU3RhdGljTWFya3VwO1xuXG4vKipcbiAqIEN1c3RvbSBmdW5jdGlvbiB0aGF0IHdyYXBzIHJlbmRlclRvU3RhdGljTWFya3VwIHNvIHRoYXQgd2UgY2FuIGluamVjdFxuICogZG9jdHlwZSBiZWZvcmUgUmVhY3QgcmVuZGVycyB0aGUgY29udGVudHMuIEFsbCBpbnN0YW5jZSBvZiBmdWxsLXBhZ2VcbiAqIHJlbmRlcmluZyB3aXRoaW4gRG9jdXNhdXJ1cyBzaG91bGQgdXNlIHRoaXMgZnVuY3Rpb24gaW5zdGVhZC5cbiAqL1xuZnVuY3Rpb24gcmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZSguLi5hcmdzKSB7XG4gIHJldHVybiBgPCFET0NUWVBFIGh0bWw+JHtyZW5kZXJUb1N0YXRpY01hcmt1cCguLi5hcmdzKX1gO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "renderUtils.js"
      ],
      "names": [
        "renderToStaticMarkup",
        "require",
        "renderToStaticMarkupWithDoctype",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,oBAAoB,GAAGC,OAAO,CAAC,kBAAD,CAAP,CAA4BD,oBAAzD;AAEA;;;;;;;AAKA,SAASE,+BAAT,GAAkD;AAChD,kCAAyBF,oBAAoB,MAApB,mBAAzB;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfF,EAAAA,+BAA+B,EAA/BA;AADe,CAAjB",
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst renderToStaticMarkup = require('react-dom/server').renderToStaticMarkup;\n\n/**\n * Custom function that wraps renderToStaticMarkup so that we can inject\n * doctype before React renders the contents. All instance of full-page\n * rendering within Docusaurus should use this function instead.\n */\nfunction renderToStaticMarkupWithDoctype(...args) {\n  return `<!DOCTYPE html>${renderToStaticMarkup(...args)}`;\n}\n\nmodule.exports = {\n  renderToStaticMarkupWithDoctype,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"filename\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/config.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ballchang/Projects/BallChang/BDocs/website",
      "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/config.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/ballchang/Projects/BallChang/BDocs/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/config.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath) {\n  var deleteCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n\n  var config = {};\n\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n  /* Fill default value */\n\n\n  var defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs'\n  };\n  Object.keys(defaultConfig).forEach(function (field) {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n  return config;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibG9hZENvbmZpZyIsImNvbmZpZ1BhdGgiLCJkZWxldGVDYWNoZSIsImNhY2hlIiwiY29uZmlnIiwiZXhpc3RzU3luYyIsImRlZmF1bHRDb25maWciLCJjdXN0b21Eb2NzUGF0aCIsImRvY3NVcmwiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImZpZWxkIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0MsVUFBVCxDQUFvQkMsVUFBcEIsRUFBb0Q7QUFBQSxNQUFwQkMsV0FBb0IsdUVBQU4sSUFBTTs7QUFDbkUsTUFBSUEsV0FBSixFQUFpQjtBQUNmLFdBQU9MLE9BQU8sQ0FBQ00sS0FBUixDQUFjRixVQUFkLENBQVA7QUFDRDs7QUFDRCxNQUFJRyxNQUFNLEdBQUcsRUFBYjs7QUFDQSxNQUFJUixFQUFFLENBQUNTLFVBQUgsQ0FBY0osVUFBZCxDQUFKLEVBQStCO0FBQzdCRyxJQUFBQSxNQUFNLEdBQUdQLE9BQU8sQ0FBQ0ksVUFBRCxDQUFoQixDQUQ2QixDQUNDO0FBQy9CO0FBRUQ7OztBQUNBLE1BQU1LLGFBQWEsR0FBRztBQUNwQkMsSUFBQUEsY0FBYyxFQUFFLE1BREk7QUFFcEJDLElBQUFBLE9BQU8sRUFBRTtBQUZXLEdBQXRCO0FBSUFDLEVBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixhQUFaLEVBQTJCSyxPQUEzQixDQUFtQyxVQUFBQyxLQUFLLEVBQUk7QUFDMUMsUUFBSSxFQUFFQSxLQUFLLElBQUlSLE1BQVgsQ0FBSixFQUF3QjtBQUN0QkEsTUFBQUEsTUFBTSxDQUFDUSxLQUFELENBQU4sR0FBZ0JOLGFBQWEsQ0FBQ00sS0FBRCxDQUE3QjtBQUNEO0FBQ0YsR0FKRDtBQU1BLFNBQU9SLE1BQVA7QUFDRCxDQXJCRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9iYWxsY2hhbmcvUHJvamVjdHMvQmFsbENoYW5nL0JEb2NzL3dlYnNpdGUvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL3NlcnZlciIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcy1leHRyYScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGxvYWRDb25maWcoY29uZmlnUGF0aCwgZGVsZXRlQ2FjaGUgPSB0cnVlKSB7XG4gIGlmIChkZWxldGVDYWNoZSkge1xuICAgIGRlbGV0ZSByZXF1aXJlLmNhY2hlW2NvbmZpZ1BhdGhdO1xuICB9XG4gIGxldCBjb25maWcgPSB7fTtcbiAgaWYgKGZzLmV4aXN0c1N5bmMoY29uZmlnUGF0aCkpIHtcbiAgICBjb25maWcgPSByZXF1aXJlKGNvbmZpZ1BhdGgpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIH1cblxuICAvKiBGaWxsIGRlZmF1bHQgdmFsdWUgKi9cbiAgY29uc3QgZGVmYXVsdENvbmZpZyA9IHtcbiAgICBjdXN0b21Eb2NzUGF0aDogJ2RvY3MnLFxuICAgIGRvY3NVcmw6ICdkb2NzJyxcbiAgfTtcbiAgT2JqZWN0LmtleXMoZGVmYXVsdENvbmZpZykuZm9yRWFjaChmaWVsZCA9PiB7XG4gICAgaWYgKCEoZmllbGQgaW4gY29uZmlnKSkge1xuICAgICAgY29uZmlnW2ZpZWxkXSA9IGRlZmF1bHRDb25maWdbZmllbGRdO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGNvbmZpZztcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "loadConfig",
        "configPath",
        "deleteCache",
        "cache",
        "config",
        "existsSync",
        "defaultConfig",
        "customDocsPath",
        "docsUrl",
        "Object",
        "keys",
        "forEach",
        "field"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,UAApB,EAAoD;AAAA,MAApBC,WAAoB,uEAAN,IAAM;;AACnE,MAAIA,WAAJ,EAAiB;AACf,WAAOL,OAAO,CAACM,KAAR,CAAcF,UAAd,CAAP;AACD;;AACD,MAAIG,MAAM,GAAG,EAAb;;AACA,MAAIR,EAAE,CAACS,UAAH,CAAcJ,UAAd,CAAJ,EAA+B;AAC7BG,IAAAA,MAAM,GAAGP,OAAO,CAACI,UAAD,CAAhB,CAD6B,CACC;AAC/B;AAED;;;AACA,MAAMK,aAAa,GAAG;AACpBC,IAAAA,cAAc,EAAE,MADI;AAEpBC,IAAAA,OAAO,EAAE;AAFW,GAAtB;AAIAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,OAA3B,CAAmC,UAAAC,KAAK,EAAI;AAC1C,QAAI,EAAEA,KAAK,IAAIR,MAAX,CAAJ,EAAwB;AACtBA,MAAAA,MAAM,CAACQ,KAAD,CAAN,GAAgBN,aAAa,CAACM,KAAD,CAA7B;AACD;AACF,GAJD;AAMA,SAAOR,MAAP;AACD,CArBD",
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath, deleteCache = true) {\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n  let config = {};\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n\n  /* Fill default value */\n  const defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs',\n  };\n  Object.keys(defaultConfig).forEach(field => {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n\n  return config;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"filename\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/versionFallback.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ballchang/Projects/BallChang/BDocs/website",
      "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/versionFallback.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/ballchang/Projects/BallChang/BDocs/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/versionFallback.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/versionFallback.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
        "sourceFileName": "versionFallback.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar glob = require('glob');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar utils = require('./utils.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\nvar ENABLE_TRANSLATION = fs.existsSync(\"\".concat(CWD, \"/languages.js\"));\nvar versions;\n\nif (fs.existsSync(\"\".concat(CWD, \"/versions.json\"))) {\n  versions = require(\"\".concat(CWD, \"/versions.json\"));\n} else {\n  versions = [];\n}\n\nvar languages;\n\nif (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n  languages = require(\"\".concat(CWD, \"/languages.js\"));\n} else {\n  languages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }];\n}\n\nvar versionFolder = \"\".concat(CWD, \"/versioned_docs/\"); // available stores doc ids of documents that are available for\n// each version\n\nvar available = {}; // versionFiles is used to keep track of what file to use with a\n// given version/id of a document\n\nvar versionFiles = {};\nvar files = glob.sync(\"\".concat(versionFolder, \"**\"));\nfiles.forEach(function (file) {\n  var ext = path.extname(file);\n\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n\n  var res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  }\n\n  if (!metadata.id) {\n    console.error(\"No 'id' field found in \".concat(file, \".\"));\n    throw new Error(\"No 'id' field found in \".concat(file, \".\"));\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  } // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n\n\n  var version = metadata.id.substring(metadata.id.indexOf('version-') + 8, // version- is 8 characters\n  metadata.id.lastIndexOf(\"-\".concat(metadata.original_id))); // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n\n  var subDir = utils.getSubDir(file, path.join(versionFolder, \"version-\".concat(version)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n\n  versionFiles[version][metadata.original_id] = file;\n}); // returns the version to use for a document based on its id and\n// what the requested version is\n\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  } // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n\n\n  var requestedFound = false;\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound && available[id].has(versions[i])) {\n      return versions[i];\n    }\n  }\n\n  return null;\n} // returns whether a given file has content that differ from the\n// document with the given id\n\n\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version;\n\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  if (!version) {\n    return true;\n  }\n\n  var latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return metadataUtils.extractMetadata(fs.readFileSync(latestFile, 'utf8')).rawContent.trim() !== metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).rawContent.trim();\n} // return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\n\n\nfunction processVersionMetadata(file, version, useVersion, language) {\n  var metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).metadata; // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n\n  var subDir = utils.getSubDir(file, path.join(CWD, 'versioned_docs', \"version-\".concat(useVersion)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n    metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(useVersion, \"-\").concat(subDir, \"/\"));\n  }\n\n  metadata.source = subDir ? \"version-\".concat(useVersion, \"/\").concat(subDir, \"/\").concat(path.basename(file)) : \"version-\".concat(useVersion, \"/\").concat(path.basename(file));\n  var latestVersion = versions[0];\n  var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n  var versionPart = \"\".concat(version !== latestVersion ? \"\".concat(version, \"/\") : '');\n\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = \"\".concat(docsPart).concat(versionPart).concat(metadata.original_id, \".html\");\n  } else {\n    metadata.permalink = \"\".concat(docsPart).concat(language, \"/\").concat(versionPart).concat(metadata.original_id, \".html\");\n  }\n\n  metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(version, \"-\"));\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n  return metadata;\n} // return all metadata of versioned documents\n\n\nfunction docData() {\n  var allIds = new Set();\n  Object.keys(versionFiles).forEach(function (version) {\n    Object.keys(versionFiles[version]).forEach(function (id) {\n      allIds.add(id);\n    });\n  });\n  var metadatas = [];\n  languages.filter(function (language) {\n    return language.enabled;\n  }).forEach(function (language) {\n    versions.forEach(function (version) {\n      allIds.forEach(function (id) {\n        var useVersion;\n\n        try {\n          useVersion = docVersion(id, version);\n        } catch (e) {\n          console.log(e);\n          process.exit(1);\n        }\n\n        if (!useVersion) {\n          return;\n        }\n\n        var file = versionFiles[useVersion][id];\n        metadatas.push(processVersionMetadata(file, version, useVersion, language.tag));\n      });\n    });\n  });\n  return metadatas;\n} // return the version of the sidebar to use given a requested version\n\n\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  var requestedFound = false;\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound && fs.existsSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(versions[i], \"-sidebars.json\"))) {\n      return versions[i];\n    }\n  }\n\n  throw new Error(\"No sidebar file available to use for version \".concat(reqVersion, \". Verify that 'version-\").concat(reqVersion, \"-sidebars.json' exists.\"));\n} // return whether or not the current sidebars.json file differs from the\n// latest versioned one\n\n\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version = sidebarVersion(latest);\n  var latestSidebar = \"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\");\n\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n\n  var currentSidebar = \"\".concat(CWD, \"/sidebars.json\"); // if no current sidebar file, return false so no sidebar file gets copied\n\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  } // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n\n\n  return JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), '') !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')));\n} // return all versioned sidebar data\n\n\nfunction sidebarData() {\n  var allSidebars = {};\n\n  for (var i = 0; i < versions.length; i++) {\n    var version = sidebarVersion(versions[i]);\n    var sidebar = JSON.parse(fs.readFileSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\"), 'utf8').replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), \"version-\".concat(versions[i], \"-\")));\n    Object.assign(allSidebars, sidebar);\n  }\n\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion: docVersion,\n  diffLatestDoc: diffLatestDoc,\n  processVersionMetadata: processVersionMetadata,\n  docData: docData,\n  sidebarVersion: sidebarVersion,\n  diffLatestSidebar: diffLatestSidebar,\n  sidebarData: sidebarData\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "versionFallback.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "glob",
        "require",
        "fs",
        "path",
        "metadataUtils",
        "env",
        "utils",
        "loadConfig",
        "siteConfig",
        "ENABLE_TRANSLATION",
        "existsSync",
        "versions",
        "languages",
        "enabled",
        "name",
        "tag",
        "versionFolder",
        "available",
        "versionFiles",
        "files",
        "sync",
        "forEach",
        "file",
        "ext",
        "extname",
        "res",
        "extractMetadata",
        "readFileSync",
        "metadata",
        "original_id",
        "console",
        "error",
        "Error",
        "id",
        "indexOf",
        "version",
        "substring",
        "lastIndexOf",
        "subDir",
        "getSubDir",
        "join",
        "Set",
        "add",
        "docVersion",
        "reqVersion",
        "requestedFound",
        "i",
        "length",
        "has",
        "diffLatestDoc",
        "latest",
        "e",
        "exit",
        "latestFile",
        "rawContent",
        "trim",
        "processVersionMetadata",
        "useVersion",
        "language",
        "replace",
        "source",
        "basename",
        "latestVersion",
        "docsPart",
        "docsUrl",
        "versionPart",
        "useEnglishUrl",
        "permalink",
        "localized_id",
        "translation",
        "docData",
        "allIds",
        "Object",
        "keys",
        "metadatas",
        "filter",
        "log",
        "push",
        "sidebarVersion",
        "diffLatestSidebar",
        "latestSidebar",
        "currentSidebar",
        "JSON",
        "stringify",
        "parse",
        "RegExp",
        "sidebarData",
        "allSidebars",
        "sidebar",
        "assign",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst glob = require('glob');\nconst fs = require('fs');\nconst path = require('path');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst utils = require('./utils.js');\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\n\nconst ENABLE_TRANSLATION = fs.existsSync(`${CWD}/languages.js`);\n\nlet versions;\nif (fs.existsSync(`${CWD}/versions.json`)) {\n  versions = require(`${CWD}/versions.json`);\n} else {\n  versions = [];\n}\n\nlet languages;\nif (fs.existsSync(`${CWD}/languages.js`)) {\n  languages = require(`${CWD}/languages.js`);\n} else {\n  languages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n}\n\nconst versionFolder = `${CWD}/versioned_docs/`;\n\n// available stores doc ids of documents that are available for\n// each version\nconst available = {};\n// versionFiles is used to keep track of what file to use with a\n// given version/id of a document\nconst versionFiles = {};\nconst files = glob.sync(`${versionFolder}**`);\nfiles.forEach(file => {\n  const ext = path.extname(file);\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n  const res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n  if (!metadata.id) {\n    console.error(`No 'id' field found in ${file}.`);\n    throw new Error(`No 'id' field found in ${file}.`);\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n\n  // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n  const version = metadata.id.substring(\n    metadata.id.indexOf('version-') + 8, // version- is 8 characters\n    metadata.id.lastIndexOf(`-${metadata.original_id}`),\n  );\n\n  // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n  const subDir = utils.getSubDir(\n    file,\n    path.join(versionFolder, `version-${version}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n  versionFiles[version][metadata.original_id] = file;\n});\n\n// returns the version to use for a document based on its id and\n// what the requested version is\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  }\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (requestedFound && available[id].has(versions[i])) {\n      return versions[i];\n    }\n  }\n  return null;\n}\n\n// returns whether a given file has content that differ from the\n// document with the given id\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  const latest = versions[0];\n\n  let version;\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n  if (!version) {\n    return true;\n  }\n  const latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return (\n    metadataUtils\n      .extractMetadata(fs.readFileSync(latestFile, 'utf8'))\n      .rawContent.trim() !==\n    metadataUtils\n      .extractMetadata(fs.readFileSync(file, 'utf8'))\n      .rawContent.trim()\n  );\n}\n\n// return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\nfunction processVersionMetadata(file, version, useVersion, language) {\n  const metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'))\n    .metadata;\n\n  // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n  const subDir = utils.getSubDir(\n    file,\n    path.join(CWD, 'versioned_docs', `version-${useVersion}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n    metadata.id = metadata.id.replace(\n      `version-${useVersion}-`,\n      `version-${useVersion}-${subDir}/`,\n    );\n  }\n\n  metadata.source = subDir\n    ? `version-${useVersion}/${subDir}/${path.basename(file)}`\n    : `version-${useVersion}/${path.basename(file)}`;\n\n  const latestVersion = versions[0];\n\n  const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n  const versionPart = `${version !== latestVersion ? `${version}/` : ''}`;\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = `${docsPart}${versionPart}${\n      metadata.original_id\n    }.html`;\n  } else {\n    metadata.permalink = `${docsPart}${language}/${versionPart}${\n      metadata.original_id\n    }.html`;\n  }\n  metadata.id = metadata.id.replace(\n    `version-${useVersion}-`,\n    `version-${version}-`,\n  );\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n\n  return metadata;\n}\n\n// return all metadata of versioned documents\nfunction docData() {\n  const allIds = new Set();\n  Object.keys(versionFiles).forEach(version => {\n    Object.keys(versionFiles[version]).forEach(id => {\n      allIds.add(id);\n    });\n  });\n\n  const metadatas = [];\n\n  languages\n    .filter(language => language.enabled)\n    .forEach(language => {\n      versions.forEach(version => {\n        allIds.forEach(id => {\n          let useVersion;\n          try {\n            useVersion = docVersion(id, version);\n          } catch (e) {\n            console.log(e);\n            process.exit(1);\n          }\n          if (!useVersion) {\n            return;\n          }\n          const file = versionFiles[useVersion][id];\n\n          metadatas.push(\n            processVersionMetadata(file, version, useVersion, language.tag),\n          );\n        });\n      });\n    });\n\n  return metadatas;\n}\n\n// return the version of the sidebar to use given a requested version\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (\n      requestedFound &&\n      fs.existsSync(\n        `${CWD}/versioned_sidebars/version-${versions[i]}-sidebars.json`,\n      )\n    ) {\n      return versions[i];\n    }\n  }\n  throw new Error(\n    `No sidebar file available to use for version ${reqVersion}. Verify that 'version-${reqVersion}-sidebars.json' exists.`,\n  );\n}\n\n// return whether or not the current sidebars.json file differs from the\n// latest versioned one\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n  const latest = versions[0];\n\n  const version = sidebarVersion(latest);\n  const latestSidebar = `${CWD}/versioned_sidebars/version-${version}-sidebars.json`;\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n  const currentSidebar = `${CWD}/sidebars.json`;\n  // if no current sidebar file, return false so no sidebar file gets copied\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  }\n\n  // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n  return (\n    JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(\n      new RegExp(`version-${version}-`, 'g'),\n      '',\n    ) !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')))\n  );\n}\n\n// return all versioned sidebar data\nfunction sidebarData() {\n  const allSidebars = {};\n\n  for (let i = 0; i < versions.length; i++) {\n    const version = sidebarVersion(versions[i]);\n    const sidebar = JSON.parse(\n      fs\n        .readFileSync(\n          `${CWD}/versioned_sidebars/version-${version}-sidebars.json`,\n          'utf8',\n        )\n        .replace(\n          new RegExp(`version-${version}-`, 'g'),\n          `version-${versions[i]}-`,\n        ),\n    );\n    Object.assign(allSidebars, sidebar);\n  }\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion,\n  diffLatestDoc,\n  processVersionMetadata,\n  docData,\n  sidebarVersion,\n  diffLatestSidebar,\n  sidebarData,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"filename\":\"/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/server.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ballchang/Projects/BallChang/BDocs/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ballchang/Projects/BallChang/BDocs/website",
      "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/server.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/ballchang/Projects/BallChang/BDocs/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable no-cond-assign */\nfunction execute(port) {\n  var extractTranslations = require('../write-translations');\n\n  var metadataUtils = require('./metadataUtils');\n\n  var blog = require('./blog');\n\n  var docs = require('./docs');\n\n  var env = require('./env.js');\n\n  var express = require('express');\n\n  var React = require('react');\n\n  var request = require('request');\n\n  var fs = require('fs-extra');\n\n  var path = require('path');\n\n  var _require = require('./utils'),\n      isSeparateCss = _require.isSeparateCss;\n\n  var mkdirp = require('mkdirp');\n\n  var glob = require('glob');\n\n  var chalk = require('chalk');\n\n  var translate = require('./translate');\n\n  var _require2 = require('./renderUtils'),\n      renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n\n  var feed = require('./feed');\n\n  var sitemap = require('./sitemap');\n\n  var routing = require('./routing');\n\n  var loadConfig = require('./config');\n\n  var CWD = process.cwd();\n  var join = path.join;\n  var sep = path.sep;\n\n  function removeModulePathFromCache(moduleName) {\n    /* eslint-disable no-underscore-dangle */\n    Object.keys(module.constructor._pathCache).forEach(function (cacheKey) {\n      if (cacheKey.indexOf(moduleName) > 0) {\n        delete module.constructor._pathCache[cacheKey];\n      }\n    });\n  } // Remove a module and child modules from require cache, so server\n  // does not have to be restarted.\n\n\n  function removeModuleAndChildrenFromCache(moduleName) {\n    var mod = require.resolve(moduleName);\n\n    if (mod && (mod = require.cache[mod])) {\n      mod.children.forEach(function (child) {\n        delete require.cache[child.id];\n        removeModulePathFromCache(mod.id);\n      });\n      delete require.cache[mod.id];\n      removeModulePathFromCache(mod.id);\n    }\n  }\n\n  var readMetadata = require('./readMetadata.js');\n\n  var Metadata;\n  var MetadataBlog;\n  var siteConfig;\n\n  function reloadMetadata() {\n    removeModuleAndChildrenFromCache('./readMetadata.js');\n    readMetadata.generateMetadataDocs();\n    removeModuleAndChildrenFromCache('../core/metadata.js');\n    Metadata = require('../core/metadata.js');\n  }\n\n  function reloadMetadataBlog() {\n    if (fs.existsSync(join(__dirname, '..', 'core', 'MetadataBlog.js'))) {\n      removeModuleAndChildrenFromCache(join('..', 'core', 'MetadataBlog.js'));\n      fs.removeSync(join(__dirname, '..', 'core', 'MetadataBlog.js'));\n    }\n\n    readMetadata.generateMetadataBlog();\n    MetadataBlog = require(join('..', 'core', 'MetadataBlog.js'));\n  }\n\n  function reloadSiteConfig() {\n    var siteConfigPath = join(CWD, 'siteConfig.js');\n    removeModuleAndChildrenFromCache(siteConfigPath);\n    siteConfig = loadConfig(siteConfigPath);\n  }\n\n  function requestFile(url, res, notFoundCallback) {\n    request.get(url, function (error, response, body) {\n      if (!error) {\n        if (response) {\n          if (response.statusCode === 404 && notFoundCallback) {\n            notFoundCallback();\n          } else {\n            res.status(response.statusCode).send(body);\n          }\n        } else {\n          console.error('No response');\n        }\n      } else {\n        console.error('Request failed:', error);\n      }\n    });\n  }\n\n  reloadMetadata();\n  reloadMetadataBlog();\n  extractTranslations();\n  reloadSiteConfig();\n  var app = express();\n  app.get(routing.docs(siteConfig), function (req, res, next) {\n    var url = decodeURI(req.path.toString().replace(siteConfig.baseUrl, ''));\n    var metadata = Metadata[Object.keys(Metadata).find(function (id) {\n      return Metadata[id].permalink === url;\n    })];\n    var file = docs.getFile(metadata);\n\n    if (!file) {\n      next();\n      return;\n    }\n\n    var rawContent = metadataUtils.extractMetadata(file).rawContent;\n    removeModuleAndChildrenFromCache('../core/DocsLayout.js');\n    var mdToHtml = metadataUtils.mdToHtml(Metadata, siteConfig);\n    res.send(docs.getMarkup(rawContent, mdToHtml, metadata));\n  });\n  app.get(routing.sitemap(siteConfig), function (req, res) {\n    sitemap(function (err, xml) {\n      if (err) {\n        res.status(500).send('Sitemap error');\n      } else {\n        res.set('Content-Type', 'application/xml');\n        res.send(xml);\n      }\n    });\n  });\n  app.get(routing.feed(siteConfig), function (req, res, next) {\n    res.set('Content-Type', 'application/rss+xml');\n    var file = req.path.toString().split('blog/')[1].toLowerCase();\n\n    if (file === 'atom.xml') {\n      res.send(feed('atom'));\n    } else if (file === 'feed.xml') {\n      res.send(feed('rss'));\n    }\n\n    next();\n  });\n  app.get(routing.blog(siteConfig), function (req, res, next) {\n    // Regenerate the blog metadata in case it has changed. Consider improving\n    // this to regenerate on file save rather than on page request.\n    reloadMetadataBlog();\n    removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPageLayout.js'));\n    var blogPages = blog.getPagesMarkup(MetadataBlog.length, siteConfig);\n    var urlPath = req.path.toString().split('blog/')[1];\n\n    if (urlPath === 'index.html') {\n      res.send(blogPages['/index.html']);\n    } else if (urlPath.endsWith('/index.html') && blogPages[urlPath]) {\n      res.send(blogPages[urlPath]);\n    } else if (urlPath.match(/page([0-9]+)/)) {\n      res.send(blogPages[\"\".concat(urlPath.replace(/\\/$/, ''), \"/index.html\")]);\n    } else {\n      var file = join(CWD, 'blog', blog.urlToSource(urlPath));\n      removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPostLayout.js'));\n      var blogPost = blog.getPostMarkup(file, siteConfig);\n\n      if (!blogPost) {\n        next();\n        return;\n      }\n\n      res.send(blogPost);\n    }\n  });\n  app.get(routing.page(siteConfig), function (req, res, next) {\n    // Look for user-provided HTML file first.\n    var htmlFile = req.path.toString().replace(siteConfig.baseUrl, '');\n    htmlFile = join(CWD, 'pages', htmlFile);\n\n    if (fs.existsSync(htmlFile) || fs.existsSync(htmlFile = htmlFile.replace(path.basename(htmlFile), join('en', path.basename(htmlFile))))) {\n      if (siteConfig.wrapPagesHTML) {\n        removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n\n        var Site = require(join('..', 'core', 'Site.js'));\n\n        var str = renderToStaticMarkupWithDoctype(React.createElement(Site, {\n          language: \"en\",\n          config: siteConfig,\n          metadata: {\n            id: path.basename(htmlFile, '.html')\n          }\n        }, React.createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: fs.readFileSync(htmlFile, {\n              encoding: 'utf8'\n            })\n          }\n        })));\n        res.send(str);\n      } else {\n        res.send(fs.readFileSync(htmlFile, {\n          encoding: 'utf8'\n        }));\n      }\n\n      next();\n      return;\n    } // look for user provided react file either in specified path or in path for english files\n\n\n    var file = req.path.toString().replace(/\\.html$/, '.js');\n    file = file.replace(siteConfig.baseUrl, '');\n    var userFile = join(CWD, 'pages', file);\n    var language = env.translation.enabled ? 'en' : '';\n    var regexLang = /(.*)\\/.*\\.html$/;\n    var match = regexLang.exec(req.path);\n    var parts = match[1].split('/');\n    var enabledLangTags = env.translation.enabledLanguages().map(function (lang) {\n      return lang.tag;\n    });\n\n    for (var i = 0; i < parts.length; i++) {\n      if (enabledLangTags.indexOf(parts[i]) !== -1) {\n        language = parts[i];\n      }\n    }\n\n    var englishFile = join(CWD, 'pages', file);\n\n    if (language && language !== 'en') {\n      englishFile = englishFile.replace(sep + language + sep, \"\".concat(sep, \"en\").concat(sep));\n    } // check for: a file for the page, an english file for page with unspecified language, or an\n    // english file for the page\n\n\n    if (fs.existsSync(userFile) || fs.existsSync(userFile = userFile.replace(path.basename(userFile), \"en\".concat(sep).concat(path.basename(userFile)))) || fs.existsSync(userFile = englishFile)) {\n      // copy into docusaurus so require paths work\n      var userFileParts = userFile.split(\"pages\".concat(sep));\n      var tempFile = join(__dirname, '..', 'pages', userFileParts[1]);\n      tempFile = tempFile.replace(path.basename(file), \"temp\".concat(path.basename(file)));\n      mkdirp.sync(path.dirname(tempFile));\n      fs.copySync(userFile, tempFile); // render into a string\n\n      removeModuleAndChildrenFromCache(tempFile);\n\n      var ReactComp = require(tempFile);\n\n      removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n\n      var _Site = require(join('..', 'core', 'Site.js'));\n\n      translate.setLanguage(language);\n\n      var _str = renderToStaticMarkupWithDoctype(React.createElement(_Site, {\n        language: language,\n        config: siteConfig,\n        title: ReactComp.title,\n        description: ReactComp.description,\n        metadata: {\n          id: path.basename(userFile, '.js')\n        }\n      }, React.createElement(ReactComp, {\n        config: siteConfig,\n        language: language\n      })));\n\n      fs.removeSync(tempFile);\n      res.send(_str);\n    } else {\n      next();\n    }\n  });\n  app.get(\"\".concat(siteConfig.baseUrl, \"css/main.css\"), function (req, res) {\n    var mainCssPath = join(__dirname, '..', 'static', req.path.toString().replace(siteConfig.baseUrl, '/'));\n    var cssContent = fs.readFileSync(mainCssPath, {\n      encoding: 'utf8'\n    });\n    var files = glob.sync(join(CWD, 'static', '**', '*.css'));\n    files.forEach(function (file) {\n      if (isSeparateCss(file, siteConfig.separateCss)) {\n        return;\n      }\n\n      cssContent = \"\".concat(cssContent, \"\\n\").concat(fs.readFileSync(file, {\n        encoding: 'utf8'\n      }));\n    });\n\n    if (!siteConfig.colors || !siteConfig.colors.primaryColor || !siteConfig.colors.secondaryColor) {\n      console.error(\"\".concat(chalk.yellow('Missing color configuration.'), \" Make sure siteConfig.colors includes primaryColor and secondaryColor fields.\"));\n    }\n\n    Object.keys(siteConfig.colors).forEach(function (key) {\n      var color = siteConfig.colors[key];\n      cssContent = cssContent.replace(new RegExp(\"\\\\$\".concat(key), 'g'), color);\n    });\n\n    if (siteConfig.fonts) {\n      Object.keys(siteConfig.fonts).forEach(function (key) {\n        var fontString = siteConfig.fonts[key].map(function (font) {\n          return \"\\\"\".concat(font, \"\\\"\");\n        }).join(', ');\n        cssContent = cssContent.replace(new RegExp(\"\\\\$\".concat(key), 'g'), fontString);\n      });\n    }\n\n    res.header('Content-Type', 'text/css');\n    res.send(cssContent);\n  }); // serve static assets from these locations\n\n  app.use(\"\".concat(siteConfig.baseUrl).concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '', \"assets\"), express[\"static\"](join(CWD, '..', readMetadata.getDocsPath(), 'assets')));\n  app.use(\"\".concat(siteConfig.baseUrl, \"blog/assets\"), express[\"static\"](join(CWD, 'blog', 'assets')));\n  app.use(siteConfig.baseUrl, express[\"static\"](join(CWD, 'static')));\n  app.use(siteConfig.baseUrl, express[\"static\"](join(__dirname, '..', 'static'))); // \"redirect\" requests to pages ending with \"/\" or no extension so that,\n  // for example, request to \"blog\" returns \"blog/index.html\" or \"blog.html\"\n\n  app.get(routing.noExtension(), function (req, res, next) {\n    var slash = req.path.toString().endsWith('/') ? '' : '/';\n    var requestUrl = \"http://localhost:\".concat(port).concat(req.path);\n    requestFile(\"\".concat(requestUrl + slash, \"index.html\"), res, function () {\n      requestFile(slash === '/' ? \"\".concat(requestUrl, \".html\") : requestUrl.replace(/\\/$/, '.html'), res, next);\n    });\n  }); // handle special cleanUrl case like '/blog/1.2.3' & '/blog.robots.hai'\n  // where we should try to serve '/blog/1.2.3.html' & '/blog.robots.hai.html'\n\n  app.get(routing.dotfiles(), function (req, res, next) {\n    if (!siteConfig.cleanUrl) {\n      next();\n      return;\n    }\n\n    requestFile(\"http://localhost:\".concat(port).concat(req.path, \".html\"), res, next);\n  });\n  app.listen(port);\n}\n\nmodule.exports = execute;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleGVjdXRlIiwicG9ydCIsImV4dHJhY3RUcmFuc2xhdGlvbnMiLCJyZXF1aXJlIiwibWV0YWRhdGFVdGlscyIsImJsb2ciLCJkb2NzIiwiZW52IiwiZXhwcmVzcyIsIlJlYWN0IiwicmVxdWVzdCIsImZzIiwicGF0aCIsImlzU2VwYXJhdGVDc3MiLCJta2RpcnAiLCJnbG9iIiwiY2hhbGsiLCJ0cmFuc2xhdGUiLCJyZW5kZXJUb1N0YXRpY01hcmt1cFdpdGhEb2N0eXBlIiwiZmVlZCIsInNpdGVtYXAiLCJyb3V0aW5nIiwibG9hZENvbmZpZyIsIkNXRCIsInByb2Nlc3MiLCJjd2QiLCJqb2luIiwic2VwIiwicmVtb3ZlTW9kdWxlUGF0aEZyb21DYWNoZSIsIm1vZHVsZU5hbWUiLCJPYmplY3QiLCJrZXlzIiwibW9kdWxlIiwiY29uc3RydWN0b3IiLCJfcGF0aENhY2hlIiwiZm9yRWFjaCIsImNhY2hlS2V5IiwiaW5kZXhPZiIsInJlbW92ZU1vZHVsZUFuZENoaWxkcmVuRnJvbUNhY2hlIiwibW9kIiwicmVzb2x2ZSIsImNhY2hlIiwiY2hpbGRyZW4iLCJjaGlsZCIsImlkIiwicmVhZE1ldGFkYXRhIiwiTWV0YWRhdGEiLCJNZXRhZGF0YUJsb2ciLCJzaXRlQ29uZmlnIiwicmVsb2FkTWV0YWRhdGEiLCJnZW5lcmF0ZU1ldGFkYXRhRG9jcyIsInJlbG9hZE1ldGFkYXRhQmxvZyIsImV4aXN0c1N5bmMiLCJfX2Rpcm5hbWUiLCJyZW1vdmVTeW5jIiwiZ2VuZXJhdGVNZXRhZGF0YUJsb2ciLCJyZWxvYWRTaXRlQ29uZmlnIiwic2l0ZUNvbmZpZ1BhdGgiLCJyZXF1ZXN0RmlsZSIsInVybCIsInJlcyIsIm5vdEZvdW5kQ2FsbGJhY2siLCJnZXQiLCJlcnJvciIsInJlc3BvbnNlIiwiYm9keSIsInN0YXR1c0NvZGUiLCJzdGF0dXMiLCJzZW5kIiwiY29uc29sZSIsImFwcCIsInJlcSIsIm5leHQiLCJkZWNvZGVVUkkiLCJ0b1N0cmluZyIsInJlcGxhY2UiLCJiYXNlVXJsIiwibWV0YWRhdGEiLCJmaW5kIiwicGVybWFsaW5rIiwiZmlsZSIsImdldEZpbGUiLCJyYXdDb250ZW50IiwiZXh0cmFjdE1ldGFkYXRhIiwibWRUb0h0bWwiLCJnZXRNYXJrdXAiLCJlcnIiLCJ4bWwiLCJzZXQiLCJzcGxpdCIsInRvTG93ZXJDYXNlIiwiYmxvZ1BhZ2VzIiwiZ2V0UGFnZXNNYXJrdXAiLCJsZW5ndGgiLCJ1cmxQYXRoIiwiZW5kc1dpdGgiLCJtYXRjaCIsInVybFRvU291cmNlIiwiYmxvZ1Bvc3QiLCJnZXRQb3N0TWFya3VwIiwicGFnZSIsImh0bWxGaWxlIiwiYmFzZW5hbWUiLCJ3cmFwUGFnZXNIVE1MIiwiU2l0ZSIsInN0ciIsIl9faHRtbCIsInJlYWRGaWxlU3luYyIsImVuY29kaW5nIiwidXNlckZpbGUiLCJsYW5ndWFnZSIsInRyYW5zbGF0aW9uIiwiZW5hYmxlZCIsInJlZ2V4TGFuZyIsImV4ZWMiLCJwYXJ0cyIsImVuYWJsZWRMYW5nVGFncyIsImVuYWJsZWRMYW5ndWFnZXMiLCJtYXAiLCJsYW5nIiwidGFnIiwiaSIsImVuZ2xpc2hGaWxlIiwidXNlckZpbGVQYXJ0cyIsInRlbXBGaWxlIiwic3luYyIsImRpcm5hbWUiLCJjb3B5U3luYyIsIlJlYWN0Q29tcCIsInNldExhbmd1YWdlIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsIm1haW5Dc3NQYXRoIiwiY3NzQ29udGVudCIsImZpbGVzIiwic2VwYXJhdGVDc3MiLCJjb2xvcnMiLCJwcmltYXJ5Q29sb3IiLCJzZWNvbmRhcnlDb2xvciIsInllbGxvdyIsImtleSIsImNvbG9yIiwiUmVnRXhwIiwiZm9udHMiLCJmb250U3RyaW5nIiwiZm9udCIsImhlYWRlciIsInVzZSIsImRvY3NVcmwiLCJnZXREb2NzUGF0aCIsIm5vRXh0ZW5zaW9uIiwic2xhc2giLCJyZXF1ZXN0VXJsIiwiZG90ZmlsZXMiLCJjbGVhblVybCIsImxpc3RlbiIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7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QU15RCxVQUFVLDhCQUF1QnZKLElBQXZCLFNBQThCc0UsR0FBRyxDQUFDM0QsSUFBbEMsQ0FBaEI7QUFDQThDLElBQUFBLFdBQVcsV0FBSThGLFVBQVUsR0FBR0QsS0FBakIsaUJBQW9DM0YsR0FBcEMsRUFBeUMsWUFBTTtBQUN4REYsTUFBQUEsV0FBVyxDQUNUNkYsS0FBSyxLQUFLLEdBQVYsYUFDT0MsVUFEUCxhQUVJQSxVQUFVLENBQUM3RSxPQUFYLENBQW1CLEtBQW5CLEVBQTBCLE9BQTFCLENBSEssRUFJVGYsR0FKUyxFQUtUWSxJQUxTLENBQVg7QUFPRCxLQVJVLENBQVg7QUFTRCxHQVpELEVBMVZxQixDQXdXckI7QUFDQTs7QUFDQUYsRUFBQUEsR0FBRyxDQUFDUixHQUFKLENBQVF6QyxPQUFPLENBQUNvSSxRQUFSLEVBQVIsRUFBNEIsVUFBQ2xGLEdBQUQsRUFBTVgsR0FBTixFQUFXWSxJQUFYLEVBQW9CO0FBQzlDLFFBQUksQ0FBQ3hCLFVBQVUsQ0FBQzBHLFFBQWhCLEVBQTBCO0FBQ3hCbEYsTUFBQUEsSUFBSTtBQUNKO0FBQ0Q7O0FBQ0RkLElBQUFBLFdBQVcsNEJBQXFCekQsSUFBckIsU0FBNEJzRSxHQUFHLENBQUMzRCxJQUFoQyxZQUE2Q2dELEdBQTdDLEVBQWtEWSxJQUFsRCxDQUFYO0FBQ0QsR0FORDtBQVFBRixFQUFBQSxHQUFHLENBQUNxRixNQUFKLENBQVcxSixJQUFYO0FBQ0Q7O0FBRUQrQixNQUFNLENBQUM0SCxPQUFQLEdBQWlCNUosT0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYmFsbGNoYW5nL1Byb2plY3RzL0JhbGxDaGFuZy9CRG9jcy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbmQtYXNzaWduICovXG5cbmZ1bmN0aW9uIGV4ZWN1dGUocG9ydCkge1xuICBjb25zdCBleHRyYWN0VHJhbnNsYXRpb25zID0gcmVxdWlyZSgnLi4vd3JpdGUtdHJhbnNsYXRpb25zJyk7XG4gIGNvbnN0IG1ldGFkYXRhVXRpbHMgPSByZXF1aXJlKCcuL21ldGFkYXRhVXRpbHMnKTtcbiAgY29uc3QgYmxvZyA9IHJlcXVpcmUoJy4vYmxvZycpO1xuICBjb25zdCBkb2NzID0gcmVxdWlyZSgnLi9kb2NzJyk7XG4gIGNvbnN0IGVudiA9IHJlcXVpcmUoJy4vZW52LmpzJyk7XG4gIGNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgcmVxdWVzdCA9IHJlcXVpcmUoJ3JlcXVlc3QnKTtcbiAgY29uc3QgZnMgPSByZXF1aXJlKCdmcy1leHRyYScpO1xuICBjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuICBjb25zdCB7aXNTZXBhcmF0ZUNzc30gPSByZXF1aXJlKCcuL3V0aWxzJyk7XG4gIGNvbnN0IG1rZGlycCA9IHJlcXVpcmUoJ21rZGlycCcpO1xuICBjb25zdCBnbG9iID0gcmVxdWlyZSgnZ2xvYicpO1xuICBjb25zdCBjaGFsayA9IHJlcXVpcmUoJ2NoYWxrJyk7XG4gIGNvbnN0IHRyYW5zbGF0ZSA9IHJlcXVpcmUoJy4vdHJhbnNsYXRlJyk7XG4gIGNvbnN0IHtyZW5kZXJUb1N0YXRpY01hcmt1cFdpdGhEb2N0eXBlfSA9IHJlcXVpcmUoJy4vcmVuZGVyVXRpbHMnKTtcbiAgY29uc3QgZmVlZCA9IHJlcXVpcmUoJy4vZmVlZCcpO1xuICBjb25zdCBzaXRlbWFwID0gcmVxdWlyZSgnLi9zaXRlbWFwJyk7XG4gIGNvbnN0IHJvdXRpbmcgPSByZXF1aXJlKCcuL3JvdXRpbmcnKTtcbiAgY29uc3QgbG9hZENvbmZpZyA9IHJlcXVpcmUoJy4vY29uZmlnJyk7XG4gIGNvbnN0IENXRCA9IHByb2Nlc3MuY3dkKCk7XG4gIGNvbnN0IGpvaW4gPSBwYXRoLmpvaW47XG4gIGNvbnN0IHNlcCA9IHBhdGguc2VwO1xuXG4gIGZ1bmN0aW9uIHJlbW92ZU1vZHVsZVBhdGhGcm9tQ2FjaGUobW9kdWxlTmFtZSkge1xuICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVyc2NvcmUtZGFuZ2xlICovXG4gICAgT2JqZWN0LmtleXMobW9kdWxlLmNvbnN0cnVjdG9yLl9wYXRoQ2FjaGUpLmZvckVhY2goY2FjaGVLZXkgPT4ge1xuICAgICAgaWYgKGNhY2hlS2V5LmluZGV4T2YobW9kdWxlTmFtZSkgPiAwKSB7XG4gICAgICAgIGRlbGV0ZSBtb2R1bGUuY29uc3RydWN0b3IuX3BhdGhDYWNoZVtjYWNoZUtleV07XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvLyBSZW1vdmUgYSBtb2R1bGUgYW5kIGNoaWxkIG1vZHVsZXMgZnJvbSByZXF1aXJlIGNhY2hlLCBzbyBzZXJ2ZXJcbiAgLy8gZG9lcyBub3QgaGF2ZSB0byBiZSByZXN0YXJ0ZWQuXG4gIGZ1bmN0aW9uIHJlbW92ZU1vZHVsZUFuZENoaWxkcmVuRnJvbUNhY2hlKG1vZHVsZU5hbWUpIHtcbiAgICBsZXQgbW9kID0gcmVxdWlyZS5yZXNvbHZlKG1vZHVsZU5hbWUpO1xuICAgIGlmIChtb2QgJiYgKG1vZCA9IHJlcXVpcmUuY2FjaGVbbW9kXSkpIHtcbiAgICAgIG1vZC5jaGlsZHJlbi5mb3JFYWNoKGNoaWxkID0+IHtcbiAgICAgICAgZGVsZXRlIHJlcXVpcmUuY2FjaGVbY2hpbGQuaWRdO1xuICAgICAgICByZW1vdmVNb2R1bGVQYXRoRnJvbUNhY2hlKG1vZC5pZCk7XG4gICAgICB9KTtcbiAgICAgIGRlbGV0ZSByZXF1aXJlLmNhY2hlW21vZC5pZF07XG4gICAgICByZW1vdmVNb2R1bGVQYXRoRnJvbUNhY2hlKG1vZC5pZCk7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgcmVhZE1ldGFkYXRhID0gcmVxdWlyZSgnLi9yZWFkTWV0YWRhdGEuanMnKTtcbiAgbGV0IE1ldGFkYXRhO1xuICBsZXQgTWV0YWRhdGFCbG9nO1xuICBsZXQgc2l0ZUNvbmZpZztcblxuICBmdW5jdGlvbiByZWxvYWRNZXRhZGF0YSgpIHtcbiAgICByZW1vdmVNb2R1bGVBbmRDaGlsZHJlbkZyb21DYWNoZSgnLi9yZWFkTWV0YWRhdGEuanMnKTtcbiAgICByZWFkTWV0YWRhdGEuZ2VuZXJhdGVNZXRhZGF0YURvY3MoKTtcbiAgICByZW1vdmVNb2R1bGVBbmRDaGlsZHJlbkZyb21DYWNoZSgnLi4vY29yZS9tZXRhZGF0YS5qcycpO1xuICAgIE1ldGFkYXRhID0gcmVxdWlyZSgnLi4vY29yZS9tZXRhZGF0YS5qcycpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVsb2FkTWV0YWRhdGFCbG9nKCkge1xuICAgIGlmIChmcy5leGlzdHNTeW5jKGpvaW4oX19kaXJuYW1lLCAnLi4nLCAnY29yZScsICdNZXRhZGF0YUJsb2cuanMnKSkpIHtcbiAgICAgIHJlbW92ZU1vZHVsZUFuZENoaWxkcmVuRnJvbUNhY2hlKGpvaW4oJy4uJywgJ2NvcmUnLCAnTWV0YWRhdGFCbG9nLmpzJykpO1xuICAgICAgZnMucmVtb3ZlU3luYyhqb2luKF9fZGlybmFtZSwgJy4uJywgJ2NvcmUnLCAnTWV0YWRhdGFCbG9nLmpzJykpO1xuICAgIH1cbiAgICByZWFkTWV0YWRhdGEuZ2VuZXJhdGVNZXRhZGF0YUJsb2coKTtcbiAgICBNZXRhZGF0YUJsb2cgPSByZXF1aXJlKGpvaW4oJy4uJywgJ2NvcmUnLCAnTWV0YWRhdGFCbG9nLmpzJykpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVsb2FkU2l0ZUNvbmZpZygpIHtcbiAgICBjb25zdCBzaXRlQ29uZmlnUGF0aCA9IGpvaW4oQ1dELCAnc2l0ZUNvbmZpZy5qcycpO1xuICAgIHJlbW92ZU1vZHVsZUFuZENoaWxkcmVuRnJvbUNhY2hlKHNpdGVDb25maWdQYXRoKTtcbiAgICBzaXRlQ29uZmlnID0gbG9hZENvbmZpZyhzaXRlQ29uZmlnUGF0aCk7XG4gIH1cblxuICBmdW5jdGlvbiByZXF1ZXN0RmlsZSh1cmwsIHJlcywgbm90Rm91bmRDYWxsYmFjaykge1xuICAgIHJlcXVlc3QuZ2V0KHVybCwgKGVycm9yLCByZXNwb25zZSwgYm9keSkgPT4ge1xuICAgICAgaWYgKCFlcnJvcikge1xuICAgICAgICBpZiAocmVzcG9uc2UpIHtcbiAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gNDA0ICYmIG5vdEZvdW5kQ2FsbGJhY2spIHtcbiAgICAgICAgICAgIG5vdEZvdW5kQ2FsbGJhY2soKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyhyZXNwb25zZS5zdGF0dXNDb2RlKS5zZW5kKGJvZHkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdObyByZXNwb25zZScpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdSZXF1ZXN0IGZhaWxlZDonLCBlcnJvcik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZWxvYWRNZXRhZGF0YSgpO1xuICByZWxvYWRNZXRhZGF0YUJsb2coKTtcbiAgZXh0cmFjdFRyYW5zbGF0aW9ucygpO1xuICByZWxvYWRTaXRlQ29uZmlnKCk7XG5cbiAgY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG4gIGFwcC5nZXQocm91dGluZy5kb2NzKHNpdGVDb25maWcpLCAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCB1cmwgPSBkZWNvZGVVUkkocmVxLnBhdGgudG9TdHJpbmcoKS5yZXBsYWNlKHNpdGVDb25maWcuYmFzZVVybCwgJycpKTtcbiAgICBjb25zdCBtZXRhZGF0YSA9XG4gICAgICBNZXRhZGF0YVtcbiAgICAgICAgT2JqZWN0LmtleXMoTWV0YWRhdGEpLmZpbmQoaWQgPT4gTWV0YWRhdGFbaWRdLnBlcm1hbGluayA9PT0gdXJsKVxuICAgICAgXTtcblxuICAgIGNvbnN0IGZpbGUgPSBkb2NzLmdldEZpbGUobWV0YWRhdGEpO1xuICAgIGlmICghZmlsZSkge1xuICAgICAgbmV4dCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCByYXdDb250ZW50ID0gbWV0YWRhdGFVdGlscy5leHRyYWN0TWV0YWRhdGEoZmlsZSkucmF3Q29udGVudDtcbiAgICByZW1vdmVNb2R1bGVBbmRDaGlsZHJlbkZyb21DYWNoZSgnLi4vY29yZS9Eb2NzTGF5b3V0LmpzJyk7XG4gICAgY29uc3QgbWRUb0h0bWwgPSBtZXRhZGF0YVV0aWxzLm1kVG9IdG1sKE1ldGFkYXRhLCBzaXRlQ29uZmlnKTtcbiAgICByZXMuc2VuZChkb2NzLmdldE1hcmt1cChyYXdDb250ZW50LCBtZFRvSHRtbCwgbWV0YWRhdGEpKTtcbiAgfSk7XG5cbiAgYXBwLmdldChyb3V0aW5nLnNpdGVtYXAoc2l0ZUNvbmZpZyksIChyZXEsIHJlcykgPT4ge1xuICAgIHNpdGVtYXAoKGVyciwgeG1sKSA9PiB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKCdTaXRlbWFwIGVycm9yJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXMuc2V0KCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24veG1sJyk7XG4gICAgICAgIHJlcy5zZW5kKHhtbCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuXG4gIGFwcC5nZXQocm91dGluZy5mZWVkKHNpdGVDb25maWcpLCAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXMuc2V0KCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24vcnNzK3htbCcpO1xuICAgIGNvbnN0IGZpbGUgPSByZXEucGF0aFxuICAgICAgLnRvU3RyaW5nKClcbiAgICAgIC5zcGxpdCgnYmxvZy8nKVsxXVxuICAgICAgLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKGZpbGUgPT09ICdhdG9tLnhtbCcpIHtcbiAgICAgIHJlcy5zZW5kKGZlZWQoJ2F0b20nKSk7XG4gICAgfSBlbHNlIGlmIChmaWxlID09PSAnZmVlZC54bWwnKSB7XG4gICAgICByZXMuc2VuZChmZWVkKCdyc3MnKSk7XG4gICAgfVxuICAgIG5leHQoKTtcbiAgfSk7XG5cbiAgYXBwLmdldChyb3V0aW5nLmJsb2coc2l0ZUNvbmZpZyksIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIC8vIFJlZ2VuZXJhdGUgdGhlIGJsb2cgbWV0YWRhdGEgaW4gY2FzZSBpdCBoYXMgY2hhbmdlZC4gQ29uc2lkZXIgaW1wcm92aW5nXG4gICAgLy8gdGhpcyB0byByZWdlbmVyYXRlIG9uIGZpbGUgc2F2ZSByYXRoZXIgdGhhbiBvbiBwYWdlIHJlcXVlc3QuXG4gICAgcmVsb2FkTWV0YWRhdGFCbG9nKCk7XG4gICAgcmVtb3ZlTW9kdWxlQW5kQ2hpbGRyZW5Gcm9tQ2FjaGUoam9pbignLi4nLCAnY29yZScsICdCbG9nUGFnZUxheW91dC5qcycpKTtcbiAgICBjb25zdCBibG9nUGFnZXMgPSBibG9nLmdldFBhZ2VzTWFya3VwKE1ldGFkYXRhQmxvZy5sZW5ndGgsIHNpdGVDb25maWcpO1xuICAgIGNvbnN0IHVybFBhdGggPSByZXEucGF0aC50b1N0cmluZygpLnNwbGl0KCdibG9nLycpWzFdO1xuXG4gICAgaWYgKHVybFBhdGggPT09ICdpbmRleC5odG1sJykge1xuICAgICAgcmVzLnNlbmQoYmxvZ1BhZ2VzWycvaW5kZXguaHRtbCddKTtcbiAgICB9IGVsc2UgaWYgKHVybFBhdGguZW5kc1dpdGgoJy9pbmRleC5odG1sJykgJiYgYmxvZ1BhZ2VzW3VybFBhdGhdKSB7XG4gICAgICByZXMuc2VuZChibG9nUGFnZXNbdXJsUGF0aF0pO1xuICAgIH0gZWxzZSBpZiAodXJsUGF0aC5tYXRjaCgvcGFnZShbMC05XSspLykpIHtcbiAgICAgIHJlcy5zZW5kKGJsb2dQYWdlc1tgJHt1cmxQYXRoLnJlcGxhY2UoL1xcLyQvLCAnJyl9L2luZGV4Lmh0bWxgXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGZpbGUgPSBqb2luKENXRCwgJ2Jsb2cnLCBibG9nLnVybFRvU291cmNlKHVybFBhdGgpKTtcbiAgICAgIHJlbW92ZU1vZHVsZUFuZENoaWxkcmVuRnJvbUNhY2hlKGpvaW4oJy4uJywgJ2NvcmUnLCAnQmxvZ1Bvc3RMYXlvdXQuanMnKSk7XG4gICAgICBjb25zdCBibG9nUG9zdCA9IGJsb2cuZ2V0UG9zdE1hcmt1cChmaWxlLCBzaXRlQ29uZmlnKTtcbiAgICAgIGlmICghYmxvZ1Bvc3QpIHtcbiAgICAgICAgbmV4dCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICByZXMuc2VuZChibG9nUG9zdCk7XG4gICAgfVxuICB9KTtcblxuICBhcHAuZ2V0KHJvdXRpbmcucGFnZShzaXRlQ29uZmlnKSwgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgLy8gTG9vayBmb3IgdXNlci1wcm92aWRlZCBIVE1MIGZpbGUgZmlyc3QuXG4gICAgbGV0IGh0bWxGaWxlID0gcmVxLnBhdGgudG9TdHJpbmcoKS5yZXBsYWNlKHNpdGVDb25maWcuYmFzZVVybCwgJycpO1xuICAgIGh0bWxGaWxlID0gam9pbihDV0QsICdwYWdlcycsIGh0bWxGaWxlKTtcbiAgICBpZiAoXG4gICAgICBmcy5leGlzdHNTeW5jKGh0bWxGaWxlKSB8fFxuICAgICAgZnMuZXhpc3RzU3luYyhcbiAgICAgICAgKGh0bWxGaWxlID0gaHRtbEZpbGUucmVwbGFjZShcbiAgICAgICAgICBwYXRoLmJhc2VuYW1lKGh0bWxGaWxlKSxcbiAgICAgICAgICBqb2luKCdlbicsIHBhdGguYmFzZW5hbWUoaHRtbEZpbGUpKSxcbiAgICAgICAgKSksXG4gICAgICApXG4gICAgKSB7XG4gICAgICBpZiAoc2l0ZUNvbmZpZy53cmFwUGFnZXNIVE1MKSB7XG4gICAgICAgIHJlbW92ZU1vZHVsZUFuZENoaWxkcmVuRnJvbUNhY2hlKGpvaW4oJy4uJywgJ2NvcmUnLCAnU2l0ZS5qcycpKTtcbiAgICAgICAgY29uc3QgU2l0ZSA9IHJlcXVpcmUoam9pbignLi4nLCAnY29yZScsICdTaXRlLmpzJykpO1xuICAgICAgICBjb25zdCBzdHIgPSByZW5kZXJUb1N0YXRpY01hcmt1cFdpdGhEb2N0eXBlKFxuICAgICAgICAgIDxTaXRlXG4gICAgICAgICAgICBsYW5ndWFnZT1cImVuXCJcbiAgICAgICAgICAgIGNvbmZpZz17c2l0ZUNvbmZpZ31cbiAgICAgICAgICAgIG1ldGFkYXRhPXt7aWQ6IHBhdGguYmFzZW5hbWUoaHRtbEZpbGUsICcuaHRtbCcpfX0+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7XG4gICAgICAgICAgICAgICAgX19odG1sOiBmcy5yZWFkRmlsZVN5bmMoaHRtbEZpbGUsIHtlbmNvZGluZzogJ3V0ZjgnfSksXG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvU2l0ZT4sXG4gICAgICAgICk7XG5cbiAgICAgICAgcmVzLnNlbmQoc3RyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlcy5zZW5kKGZzLnJlYWRGaWxlU3luYyhodG1sRmlsZSwge2VuY29kaW5nOiAndXRmOCd9KSk7XG4gICAgICB9XG4gICAgICBuZXh0KCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gbG9vayBmb3IgdXNlciBwcm92aWRlZCByZWFjdCBmaWxlIGVpdGhlciBpbiBzcGVjaWZpZWQgcGF0aCBvciBpbiBwYXRoIGZvciBlbmdsaXNoIGZpbGVzXG4gICAgbGV0IGZpbGUgPSByZXEucGF0aC50b1N0cmluZygpLnJlcGxhY2UoL1xcLmh0bWwkLywgJy5qcycpO1xuICAgIGZpbGUgPSBmaWxlLnJlcGxhY2Uoc2l0ZUNvbmZpZy5iYXNlVXJsLCAnJyk7XG4gICAgbGV0IHVzZXJGaWxlID0gam9pbihDV0QsICdwYWdlcycsIGZpbGUpO1xuXG4gICAgbGV0IGxhbmd1YWdlID0gZW52LnRyYW5zbGF0aW9uLmVuYWJsZWQgPyAnZW4nIDogJyc7XG4gICAgY29uc3QgcmVnZXhMYW5nID0gLyguKilcXC8uKlxcLmh0bWwkLztcbiAgICBjb25zdCBtYXRjaCA9IHJlZ2V4TGFuZy5leGVjKHJlcS5wYXRoKTtcbiAgICBjb25zdCBwYXJ0cyA9IG1hdGNoWzFdLnNwbGl0KCcvJyk7XG4gICAgY29uc3QgZW5hYmxlZExhbmdUYWdzID0gZW52LnRyYW5zbGF0aW9uXG4gICAgICAuZW5hYmxlZExhbmd1YWdlcygpXG4gICAgICAubWFwKGxhbmcgPT4gbGFuZy50YWcpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGVuYWJsZWRMYW5nVGFncy5pbmRleE9mKHBhcnRzW2ldKSAhPT0gLTEpIHtcbiAgICAgICAgbGFuZ3VhZ2UgPSBwYXJ0c1tpXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgZW5nbGlzaEZpbGUgPSBqb2luKENXRCwgJ3BhZ2VzJywgZmlsZSk7XG4gICAgaWYgKGxhbmd1YWdlICYmIGxhbmd1YWdlICE9PSAnZW4nKSB7XG4gICAgICBlbmdsaXNoRmlsZSA9IGVuZ2xpc2hGaWxlLnJlcGxhY2Uoc2VwICsgbGFuZ3VhZ2UgKyBzZXAsIGAke3NlcH1lbiR7c2VwfWApO1xuICAgIH1cblxuICAgIC8vIGNoZWNrIGZvcjogYSBmaWxlIGZvciB0aGUgcGFnZSwgYW4gZW5nbGlzaCBmaWxlIGZvciBwYWdlIHdpdGggdW5zcGVjaWZpZWQgbGFuZ3VhZ2UsIG9yIGFuXG4gICAgLy8gZW5nbGlzaCBmaWxlIGZvciB0aGUgcGFnZVxuICAgIGlmIChcbiAgICAgIGZzLmV4aXN0c1N5bmModXNlckZpbGUpIHx8XG4gICAgICBmcy5leGlzdHNTeW5jKFxuICAgICAgICAodXNlckZpbGUgPSB1c2VyRmlsZS5yZXBsYWNlKFxuICAgICAgICAgIHBhdGguYmFzZW5hbWUodXNlckZpbGUpLFxuICAgICAgICAgIGBlbiR7c2VwfSR7cGF0aC5iYXNlbmFtZSh1c2VyRmlsZSl9YCxcbiAgICAgICAgKSksXG4gICAgICApIHx8XG4gICAgICBmcy5leGlzdHNTeW5jKCh1c2VyRmlsZSA9IGVuZ2xpc2hGaWxlKSlcbiAgICApIHtcbiAgICAgIC8vIGNvcHkgaW50byBkb2N1c2F1cnVzIHNvIHJlcXVpcmUgcGF0aHMgd29ya1xuICAgICAgY29uc3QgdXNlckZpbGVQYXJ0cyA9IHVzZXJGaWxlLnNwbGl0KGBwYWdlcyR7c2VwfWApO1xuICAgICAgbGV0IHRlbXBGaWxlID0gam9pbihfX2Rpcm5hbWUsICcuLicsICdwYWdlcycsIHVzZXJGaWxlUGFydHNbMV0pO1xuICAgICAgdGVtcEZpbGUgPSB0ZW1wRmlsZS5yZXBsYWNlKFxuICAgICAgICBwYXRoLmJhc2VuYW1lKGZpbGUpLFxuICAgICAgICBgdGVtcCR7cGF0aC5iYXNlbmFtZShmaWxlKX1gLFxuICAgICAgKTtcbiAgICAgIG1rZGlycC5zeW5jKHBhdGguZGlybmFtZSh0ZW1wRmlsZSkpO1xuICAgICAgZnMuY29weVN5bmModXNlckZpbGUsIHRlbXBGaWxlKTtcblxuICAgICAgLy8gcmVuZGVyIGludG8gYSBzdHJpbmdcbiAgICAgIHJlbW92ZU1vZHVsZUFuZENoaWxkcmVuRnJvbUNhY2hlKHRlbXBGaWxlKTtcbiAgICAgIGNvbnN0IFJlYWN0Q29tcCA9IHJlcXVpcmUodGVtcEZpbGUpO1xuICAgICAgcmVtb3ZlTW9kdWxlQW5kQ2hpbGRyZW5Gcm9tQ2FjaGUoam9pbignLi4nLCAnY29yZScsICdTaXRlLmpzJykpO1xuICAgICAgY29uc3QgU2l0ZSA9IHJlcXVpcmUoam9pbignLi4nLCAnY29yZScsICdTaXRlLmpzJykpO1xuICAgICAgdHJhbnNsYXRlLnNldExhbmd1YWdlKGxhbmd1YWdlKTtcbiAgICAgIGNvbnN0IHN0ciA9IHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUoXG4gICAgICAgIDxTaXRlXG4gICAgICAgICAgbGFuZ3VhZ2U9e2xhbmd1YWdlfVxuICAgICAgICAgIGNvbmZpZz17c2l0ZUNvbmZpZ31cbiAgICAgICAgICB0aXRsZT17UmVhY3RDb21wLnRpdGxlfVxuICAgICAgICAgIGRlc2NyaXB0aW9uPXtSZWFjdENvbXAuZGVzY3JpcHRpb259XG4gICAgICAgICAgbWV0YWRhdGE9e3tpZDogcGF0aC5iYXNlbmFtZSh1c2VyRmlsZSwgJy5qcycpfX0+XG4gICAgICAgICAgPFJlYWN0Q29tcCBjb25maWc9e3NpdGVDb25maWd9IGxhbmd1YWdlPXtsYW5ndWFnZX0gLz5cbiAgICAgICAgPC9TaXRlPixcbiAgICAgICk7XG5cbiAgICAgIGZzLnJlbW92ZVN5bmModGVtcEZpbGUpO1xuXG4gICAgICByZXMuc2VuZChzdHIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBuZXh0KCk7XG4gICAgfVxuICB9KTtcblxuICBhcHAuZ2V0KGAke3NpdGVDb25maWcuYmFzZVVybH1jc3MvbWFpbi5jc3NgLCAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCBtYWluQ3NzUGF0aCA9IGpvaW4oXG4gICAgICBfX2Rpcm5hbWUsXG4gICAgICAnLi4nLFxuICAgICAgJ3N0YXRpYycsXG4gICAgICByZXEucGF0aC50b1N0cmluZygpLnJlcGxhY2Uoc2l0ZUNvbmZpZy5iYXNlVXJsLCAnLycpLFxuICAgICk7XG4gICAgbGV0IGNzc0NvbnRlbnQgPSBmcy5yZWFkRmlsZVN5bmMobWFpbkNzc1BhdGgsIHtlbmNvZGluZzogJ3V0ZjgnfSk7XG5cbiAgICBjb25zdCBmaWxlcyA9IGdsb2Iuc3luYyhqb2luKENXRCwgJ3N0YXRpYycsICcqKicsICcqLmNzcycpKTtcblxuICAgIGZpbGVzLmZvckVhY2goZmlsZSA9PiB7XG4gICAgICBpZiAoaXNTZXBhcmF0ZUNzcyhmaWxlLCBzaXRlQ29uZmlnLnNlcGFyYXRlQ3NzKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjc3NDb250ZW50ID0gYCR7Y3NzQ29udGVudH1cXG4ke2ZzLnJlYWRGaWxlU3luYyhmaWxlLCB7XG4gICAgICAgIGVuY29kaW5nOiAndXRmOCcsXG4gICAgICB9KX1gO1xuICAgIH0pO1xuXG4gICAgaWYgKFxuICAgICAgIXNpdGVDb25maWcuY29sb3JzIHx8XG4gICAgICAhc2l0ZUNvbmZpZy5jb2xvcnMucHJpbWFyeUNvbG9yIHx8XG4gICAgICAhc2l0ZUNvbmZpZy5jb2xvcnMuc2Vjb25kYXJ5Q29sb3JcbiAgICApIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgIGAke2NoYWxrLnllbGxvdyhcbiAgICAgICAgICAnTWlzc2luZyBjb2xvciBjb25maWd1cmF0aW9uLicsXG4gICAgICAgICl9IE1ha2Ugc3VyZSBzaXRlQ29uZmlnLmNvbG9ycyBpbmNsdWRlcyBwcmltYXJ5Q29sb3IgYW5kIHNlY29uZGFyeUNvbG9yIGZpZWxkcy5gLFxuICAgICAgKTtcbiAgICB9XG5cbiAgICBPYmplY3Qua2V5cyhzaXRlQ29uZmlnLmNvbG9ycykuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgY29uc3QgY29sb3IgPSBzaXRlQ29uZmlnLmNvbG9yc1trZXldO1xuICAgICAgY3NzQ29udGVudCA9IGNzc0NvbnRlbnQucmVwbGFjZShuZXcgUmVnRXhwKGBcXFxcJCR7a2V5fWAsICdnJyksIGNvbG9yKTtcbiAgICB9KTtcblxuICAgIGlmIChzaXRlQ29uZmlnLmZvbnRzKSB7XG4gICAgICBPYmplY3Qua2V5cyhzaXRlQ29uZmlnLmZvbnRzKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGNvbnN0IGZvbnRTdHJpbmcgPSBzaXRlQ29uZmlnLmZvbnRzW2tleV1cbiAgICAgICAgICAubWFwKGZvbnQgPT4gYFwiJHtmb250fVwiYClcbiAgICAgICAgICAuam9pbignLCAnKTtcbiAgICAgICAgY3NzQ29udGVudCA9IGNzc0NvbnRlbnQucmVwbGFjZShcbiAgICAgICAgICBuZXcgUmVnRXhwKGBcXFxcJCR7a2V5fWAsICdnJyksXG4gICAgICAgICAgZm9udFN0cmluZyxcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJlcy5oZWFkZXIoJ0NvbnRlbnQtVHlwZScsICd0ZXh0L2NzcycpO1xuICAgIHJlcy5zZW5kKGNzc0NvbnRlbnQpO1xuICB9KTtcblxuICAvLyBzZXJ2ZSBzdGF0aWMgYXNzZXRzIGZyb20gdGhlc2UgbG9jYXRpb25zXG4gIGFwcC51c2UoXG4gICAgYCR7c2l0ZUNvbmZpZy5iYXNlVXJsfSR7XG4gICAgICBzaXRlQ29uZmlnLmRvY3NVcmwgPyBgJHtzaXRlQ29uZmlnLmRvY3NVcmx9L2AgOiAnJ1xuICAgIH1hc3NldHNgLFxuICAgIGV4cHJlc3Muc3RhdGljKGpvaW4oQ1dELCAnLi4nLCByZWFkTWV0YWRhdGEuZ2V0RG9jc1BhdGgoKSwgJ2Fzc2V0cycpKSxcbiAgKTtcbiAgYXBwLnVzZShcbiAgICBgJHtzaXRlQ29uZmlnLmJhc2VVcmx9YmxvZy9hc3NldHNgLFxuICAgIGV4cHJlc3Muc3RhdGljKGpvaW4oQ1dELCAnYmxvZycsICdhc3NldHMnKSksXG4gICk7XG4gIGFwcC51c2Uoc2l0ZUNvbmZpZy5iYXNlVXJsLCBleHByZXNzLnN0YXRpYyhqb2luKENXRCwgJ3N0YXRpYycpKSk7XG4gIGFwcC51c2Uoc2l0ZUNvbmZpZy5iYXNlVXJsLCBleHByZXNzLnN0YXRpYyhqb2luKF9fZGlybmFtZSwgJy4uJywgJ3N0YXRpYycpKSk7XG5cbiAgLy8gXCJyZWRpcmVjdFwiIHJlcXVlc3RzIHRvIHBhZ2VzIGVuZGluZyB3aXRoIFwiL1wiIG9yIG5vIGV4dGVuc2lvbiBzbyB0aGF0LFxuICAvLyBmb3IgZXhhbXBsZSwgcmVxdWVzdCB0byBcImJsb2dcIiByZXR1cm5zIFwiYmxvZy9pbmRleC5odG1sXCIgb3IgXCJibG9nLmh0bWxcIlxuICBhcHAuZ2V0KHJvdXRpbmcubm9FeHRlbnNpb24oKSwgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2xhc2ggPSByZXEucGF0aC50b1N0cmluZygpLmVuZHNXaXRoKCcvJykgPyAnJyA6ICcvJztcbiAgICBjb25zdCByZXF1ZXN0VXJsID0gYGh0dHA6Ly9sb2NhbGhvc3Q6JHtwb3J0fSR7cmVxLnBhdGh9YDtcbiAgICByZXF1ZXN0RmlsZShgJHtyZXF1ZXN0VXJsICsgc2xhc2h9aW5kZXguaHRtbGAsIHJlcywgKCkgPT4ge1xuICAgICAgcmVxdWVzdEZpbGUoXG4gICAgICAgIHNsYXNoID09PSAnLydcbiAgICAgICAgICA/IGAke3JlcXVlc3RVcmx9Lmh0bWxgXG4gICAgICAgICAgOiByZXF1ZXN0VXJsLnJlcGxhY2UoL1xcLyQvLCAnLmh0bWwnKSxcbiAgICAgICAgcmVzLFxuICAgICAgICBuZXh0LFxuICAgICAgKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgLy8gaGFuZGxlIHNwZWNpYWwgY2xlYW5VcmwgY2FzZSBsaWtlICcvYmxvZy8xLjIuMycgJiAnL2Jsb2cucm9ib3RzLmhhaSdcbiAgLy8gd2hlcmUgd2Ugc2hvdWxkIHRyeSB0byBzZXJ2ZSAnL2Jsb2cvMS4yLjMuaHRtbCcgJiAnL2Jsb2cucm9ib3RzLmhhaS5odG1sJ1xuICBhcHAuZ2V0KHJvdXRpbmcuZG90ZmlsZXMoKSwgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgaWYgKCFzaXRlQ29uZmlnLmNsZWFuVXJsKSB7XG4gICAgICBuZXh0KCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHJlcXVlc3RGaWxlKGBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH0ke3JlcS5wYXRofS5odG1sYCwgcmVzLCBuZXh0KTtcbiAgfSk7XG5cbiAgYXBwLmxpc3Rlbihwb3J0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBleGVjdXRlO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "execute",
        "port",
        "extractTranslations",
        "require",
        "metadataUtils",
        "blog",
        "docs",
        "env",
        "express",
        "React",
        "request",
        "fs",
        "path",
        "isSeparateCss",
        "mkdirp",
        "glob",
        "chalk",
        "translate",
        "renderToStaticMarkupWithDoctype",
        "feed",
        "sitemap",
        "routing",
        "loadConfig",
        "CWD",
        "process",
        "cwd",
        "join",
        "sep",
        "removeModulePathFromCache",
        "moduleName",
        "Object",
        "keys",
        "module",
        "constructor",
        "_pathCache",
        "forEach",
        "cacheKey",
        "indexOf",
        "removeModuleAndChildrenFromCache",
        "mod",
        "resolve",
        "cache",
        "children",
        "child",
        "id",
        "readMetadata",
        "Metadata",
        "MetadataBlog",
        "siteConfig",
        "reloadMetadata",
        "generateMetadataDocs",
        "reloadMetadataBlog",
        "existsSync",
        "__dirname",
        "removeSync",
        "generateMetadataBlog",
        "reloadSiteConfig",
        "siteConfigPath",
        "requestFile",
        "url",
        "res",
        "notFoundCallback",
        "get",
        "error",
        "response",
        "body",
        "statusCode",
        "status",
        "send",
        "console",
        "app",
        "req",
        "next",
        "decodeURI",
        "toString",
        "replace",
        "baseUrl",
        "metadata",
        "find",
        "permalink",
        "file",
        "getFile",
        "rawContent",
        "extractMetadata",
        "mdToHtml",
        "getMarkup",
        "err",
        "xml",
        "set",
        "split",
        "toLowerCase",
        "blogPages",
        "getPagesMarkup",
        "length",
        "urlPath",
        "endsWith",
        "match",
        "urlToSource",
        "blogPost",
        "getPostMarkup",
        "page",
        "htmlFile",
        "basename",
        "wrapPagesHTML",
        "Site",
        "str",
        "__html",
        "readFileSync",
        "encoding",
        "userFile",
        "language",
        "translation",
        "enabled",
        "regexLang",
        "exec",
        "parts",
        "enabledLangTags",
        "enabledLanguages",
        "map",
        "lang",
        "tag",
        "i",
        "englishFile",
        "userFileParts",
        "tempFile",
        "sync",
        "dirname",
        "copySync",
        "ReactComp",
        "setLanguage",
        "title",
        "description",
        "mainCssPath",
        "cssContent",
        "files",
        "separateCss",
        "colors",
        "primaryColor",
        "secondaryColor",
        "yellow",
        "key",
        "color",
        "RegExp",
        "fonts",
        "fontString",
        "font",
        "header",
        "use",
        "docsUrl",
        "getDocsPath",
        "noExtension",
        "slash",
        "requestUrl",
        "dotfiles",
        "cleanUrl",
        "listen",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/ballchang/Projects/BallChang/BDocs/website/node_modules/docusaurus/lib/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable no-cond-assign */\n\nfunction execute(port) {\n  const extractTranslations = require('../write-translations');\n  const metadataUtils = require('./metadataUtils');\n  const blog = require('./blog');\n  const docs = require('./docs');\n  const env = require('./env.js');\n  const express = require('express');\n  const React = require('react');\n  const request = require('request');\n  const fs = require('fs-extra');\n  const path = require('path');\n  const {isSeparateCss} = require('./utils');\n  const mkdirp = require('mkdirp');\n  const glob = require('glob');\n  const chalk = require('chalk');\n  const translate = require('./translate');\n  const {renderToStaticMarkupWithDoctype} = require('./renderUtils');\n  const feed = require('./feed');\n  const sitemap = require('./sitemap');\n  const routing = require('./routing');\n  const loadConfig = require('./config');\n  const CWD = process.cwd();\n  const join = path.join;\n  const sep = path.sep;\n\n  function removeModulePathFromCache(moduleName) {\n    /* eslint-disable no-underscore-dangle */\n    Object.keys(module.constructor._pathCache).forEach(cacheKey => {\n      if (cacheKey.indexOf(moduleName) > 0) {\n        delete module.constructor._pathCache[cacheKey];\n      }\n    });\n  }\n\n  // Remove a module and child modules from require cache, so server\n  // does not have to be restarted.\n  function removeModuleAndChildrenFromCache(moduleName) {\n    let mod = require.resolve(moduleName);\n    if (mod && (mod = require.cache[mod])) {\n      mod.children.forEach(child => {\n        delete require.cache[child.id];\n        removeModulePathFromCache(mod.id);\n      });\n      delete require.cache[mod.id];\n      removeModulePathFromCache(mod.id);\n    }\n  }\n\n  const readMetadata = require('./readMetadata.js');\n  let Metadata;\n  let MetadataBlog;\n  let siteConfig;\n\n  function reloadMetadata() {\n    removeModuleAndChildrenFromCache('./readMetadata.js');\n    readMetadata.generateMetadataDocs();\n    removeModuleAndChildrenFromCache('../core/metadata.js');\n    Metadata = require('../core/metadata.js');\n  }\n\n  function reloadMetadataBlog() {\n    if (fs.existsSync(join(__dirname, '..', 'core', 'MetadataBlog.js'))) {\n      removeModuleAndChildrenFromCache(join('..', 'core', 'MetadataBlog.js'));\n      fs.removeSync(join(__dirname, '..', 'core', 'MetadataBlog.js'));\n    }\n    readMetadata.generateMetadataBlog();\n    MetadataBlog = require(join('..', 'core', 'MetadataBlog.js'));\n  }\n\n  function reloadSiteConfig() {\n    const siteConfigPath = join(CWD, 'siteConfig.js');\n    removeModuleAndChildrenFromCache(siteConfigPath);\n    siteConfig = loadConfig(siteConfigPath);\n  }\n\n  function requestFile(url, res, notFoundCallback) {\n    request.get(url, (error, response, body) => {\n      if (!error) {\n        if (response) {\n          if (response.statusCode === 404 && notFoundCallback) {\n            notFoundCallback();\n          } else {\n            res.status(response.statusCode).send(body);\n          }\n        } else {\n          console.error('No response');\n        }\n      } else {\n        console.error('Request failed:', error);\n      }\n    });\n  }\n\n  reloadMetadata();\n  reloadMetadataBlog();\n  extractTranslations();\n  reloadSiteConfig();\n\n  const app = express();\n\n  app.get(routing.docs(siteConfig), (req, res, next) => {\n    const url = decodeURI(req.path.toString().replace(siteConfig.baseUrl, ''));\n    const metadata =\n      Metadata[\n        Object.keys(Metadata).find(id => Metadata[id].permalink === url)\n      ];\n\n    const file = docs.getFile(metadata);\n    if (!file) {\n      next();\n      return;\n    }\n    const rawContent = metadataUtils.extractMetadata(file).rawContent;\n    removeModuleAndChildrenFromCache('../core/DocsLayout.js');\n    const mdToHtml = metadataUtils.mdToHtml(Metadata, siteConfig);\n    res.send(docs.getMarkup(rawContent, mdToHtml, metadata));\n  });\n\n  app.get(routing.sitemap(siteConfig), (req, res) => {\n    sitemap((err, xml) => {\n      if (err) {\n        res.status(500).send('Sitemap error');\n      } else {\n        res.set('Content-Type', 'application/xml');\n        res.send(xml);\n      }\n    });\n  });\n\n  app.get(routing.feed(siteConfig), (req, res, next) => {\n    res.set('Content-Type', 'application/rss+xml');\n    const file = req.path\n      .toString()\n      .split('blog/')[1]\n      .toLowerCase();\n    if (file === 'atom.xml') {\n      res.send(feed('atom'));\n    } else if (file === 'feed.xml') {\n      res.send(feed('rss'));\n    }\n    next();\n  });\n\n  app.get(routing.blog(siteConfig), (req, res, next) => {\n    // Regenerate the blog metadata in case it has changed. Consider improving\n    // this to regenerate on file save rather than on page request.\n    reloadMetadataBlog();\n    removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPageLayout.js'));\n    const blogPages = blog.getPagesMarkup(MetadataBlog.length, siteConfig);\n    const urlPath = req.path.toString().split('blog/')[1];\n\n    if (urlPath === 'index.html') {\n      res.send(blogPages['/index.html']);\n    } else if (urlPath.endsWith('/index.html') && blogPages[urlPath]) {\n      res.send(blogPages[urlPath]);\n    } else if (urlPath.match(/page([0-9]+)/)) {\n      res.send(blogPages[`${urlPath.replace(/\\/$/, '')}/index.html`]);\n    } else {\n      const file = join(CWD, 'blog', blog.urlToSource(urlPath));\n      removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPostLayout.js'));\n      const blogPost = blog.getPostMarkup(file, siteConfig);\n      if (!blogPost) {\n        next();\n        return;\n      }\n      res.send(blogPost);\n    }\n  });\n\n  app.get(routing.page(siteConfig), (req, res, next) => {\n    // Look for user-provided HTML file first.\n    let htmlFile = req.path.toString().replace(siteConfig.baseUrl, '');\n    htmlFile = join(CWD, 'pages', htmlFile);\n    if (\n      fs.existsSync(htmlFile) ||\n      fs.existsSync(\n        (htmlFile = htmlFile.replace(\n          path.basename(htmlFile),\n          join('en', path.basename(htmlFile)),\n        )),\n      )\n    ) {\n      if (siteConfig.wrapPagesHTML) {\n        removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n        const Site = require(join('..', 'core', 'Site.js'));\n        const str = renderToStaticMarkupWithDoctype(\n          <Site\n            language=\"en\"\n            config={siteConfig}\n            metadata={{id: path.basename(htmlFile, '.html')}}>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: fs.readFileSync(htmlFile, {encoding: 'utf8'}),\n              }}\n            />\n          </Site>,\n        );\n\n        res.send(str);\n      } else {\n        res.send(fs.readFileSync(htmlFile, {encoding: 'utf8'}));\n      }\n      next();\n      return;\n    }\n\n    // look for user provided react file either in specified path or in path for english files\n    let file = req.path.toString().replace(/\\.html$/, '.js');\n    file = file.replace(siteConfig.baseUrl, '');\n    let userFile = join(CWD, 'pages', file);\n\n    let language = env.translation.enabled ? 'en' : '';\n    const regexLang = /(.*)\\/.*\\.html$/;\n    const match = regexLang.exec(req.path);\n    const parts = match[1].split('/');\n    const enabledLangTags = env.translation\n      .enabledLanguages()\n      .map(lang => lang.tag);\n\n    for (let i = 0; i < parts.length; i++) {\n      if (enabledLangTags.indexOf(parts[i]) !== -1) {\n        language = parts[i];\n      }\n    }\n\n    let englishFile = join(CWD, 'pages', file);\n    if (language && language !== 'en') {\n      englishFile = englishFile.replace(sep + language + sep, `${sep}en${sep}`);\n    }\n\n    // check for: a file for the page, an english file for page with unspecified language, or an\n    // english file for the page\n    if (\n      fs.existsSync(userFile) ||\n      fs.existsSync(\n        (userFile = userFile.replace(\n          path.basename(userFile),\n          `en${sep}${path.basename(userFile)}`,\n        )),\n      ) ||\n      fs.existsSync((userFile = englishFile))\n    ) {\n      // copy into docusaurus so require paths work\n      const userFileParts = userFile.split(`pages${sep}`);\n      let tempFile = join(__dirname, '..', 'pages', userFileParts[1]);\n      tempFile = tempFile.replace(\n        path.basename(file),\n        `temp${path.basename(file)}`,\n      );\n      mkdirp.sync(path.dirname(tempFile));\n      fs.copySync(userFile, tempFile);\n\n      // render into a string\n      removeModuleAndChildrenFromCache(tempFile);\n      const ReactComp = require(tempFile);\n      removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n      const Site = require(join('..', 'core', 'Site.js'));\n      translate.setLanguage(language);\n      const str = renderToStaticMarkupWithDoctype(\n        <Site\n          language={language}\n          config={siteConfig}\n          title={ReactComp.title}\n          description={ReactComp.description}\n          metadata={{id: path.basename(userFile, '.js')}}>\n          <ReactComp config={siteConfig} language={language} />\n        </Site>,\n      );\n\n      fs.removeSync(tempFile);\n\n      res.send(str);\n    } else {\n      next();\n    }\n  });\n\n  app.get(`${siteConfig.baseUrl}css/main.css`, (req, res) => {\n    const mainCssPath = join(\n      __dirname,\n      '..',\n      'static',\n      req.path.toString().replace(siteConfig.baseUrl, '/'),\n    );\n    let cssContent = fs.readFileSync(mainCssPath, {encoding: 'utf8'});\n\n    const files = glob.sync(join(CWD, 'static', '**', '*.css'));\n\n    files.forEach(file => {\n      if (isSeparateCss(file, siteConfig.separateCss)) {\n        return;\n      }\n      cssContent = `${cssContent}\\n${fs.readFileSync(file, {\n        encoding: 'utf8',\n      })}`;\n    });\n\n    if (\n      !siteConfig.colors ||\n      !siteConfig.colors.primaryColor ||\n      !siteConfig.colors.secondaryColor\n    ) {\n      console.error(\n        `${chalk.yellow(\n          'Missing color configuration.',\n        )} Make sure siteConfig.colors includes primaryColor and secondaryColor fields.`,\n      );\n    }\n\n    Object.keys(siteConfig.colors).forEach(key => {\n      const color = siteConfig.colors[key];\n      cssContent = cssContent.replace(new RegExp(`\\\\$${key}`, 'g'), color);\n    });\n\n    if (siteConfig.fonts) {\n      Object.keys(siteConfig.fonts).forEach(key => {\n        const fontString = siteConfig.fonts[key]\n          .map(font => `\"${font}\"`)\n          .join(', ');\n        cssContent = cssContent.replace(\n          new RegExp(`\\\\$${key}`, 'g'),\n          fontString,\n        );\n      });\n    }\n\n    res.header('Content-Type', 'text/css');\n    res.send(cssContent);\n  });\n\n  // serve static assets from these locations\n  app.use(\n    `${siteConfig.baseUrl}${\n      siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''\n    }assets`,\n    express.static(join(CWD, '..', readMetadata.getDocsPath(), 'assets')),\n  );\n  app.use(\n    `${siteConfig.baseUrl}blog/assets`,\n    express.static(join(CWD, 'blog', 'assets')),\n  );\n  app.use(siteConfig.baseUrl, express.static(join(CWD, 'static')));\n  app.use(siteConfig.baseUrl, express.static(join(__dirname, '..', 'static')));\n\n  // \"redirect\" requests to pages ending with \"/\" or no extension so that,\n  // for example, request to \"blog\" returns \"blog/index.html\" or \"blog.html\"\n  app.get(routing.noExtension(), (req, res, next) => {\n    const slash = req.path.toString().endsWith('/') ? '' : '/';\n    const requestUrl = `http://localhost:${port}${req.path}`;\n    requestFile(`${requestUrl + slash}index.html`, res, () => {\n      requestFile(\n        slash === '/'\n          ? `${requestUrl}.html`\n          : requestUrl.replace(/\\/$/, '.html'),\n        res,\n        next,\n      );\n    });\n  });\n\n  // handle special cleanUrl case like '/blog/1.2.3' & '/blog.robots.hai'\n  // where we should try to serve '/blog/1.2.3.html' & '/blog.robots.hai.html'\n  app.get(routing.dotfiles(), (req, res, next) => {\n    if (!siteConfig.cleanUrl) {\n      next();\n      return;\n    }\n    requestFile(`http://localhost:${port}${req.path}.html`, res, next);\n  });\n\n  app.listen(port);\n}\n\nmodule.exports = execute;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  }
}